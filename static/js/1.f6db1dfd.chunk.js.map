{"version":3,"sources":["hooks/useContract.ts","hooks/useWeb3.ts","components/Balance.tsx","utils/bscscan.ts","components/UnlockButton.tsx","hooks/useLastUpdated.ts","hooks/usePreviousValue.ts","hooks/useApprove.ts","hooks/usePersistState.ts","utils/callHelpers.ts","components/Tags.tsx","hooks/useStake.ts","hooks/useUnstake.ts","hooks/useHarvest.ts","components/ApyCalculatorModal/index.tsx","components/layout/Flex.tsx","utils/latinise.ts","components/Select/Select.tsx","hooks/useDelayedUnmount.ts","components/PageHeader/PageHeader.tsx","components/SearchInput/SearchInput.tsx"],"names":["useIfoV1Contract","address","web3","useWeb3","useMemo","getIfoV1Contract","useIfoV2Contract","getIfoV2Contract","useERC20","getBep20Contract","useERC721","getErc721Contract","useCake","getCakeContract","useBRIS","useBunnyFactory","getBunnyFactoryContract","useProfile","getProfileContract","useLottery","getLotteryContract","useNewLottery","getNewLotteryContract","useLotteryTicket","getLotteryTicketContract","useReferralContract","getReferralContract","useMasterchef","getMasterchefContract","useSousChef","id","getSouschefContract","usePointCenterIfoContract","getPointCenterIfoContract","useBunnySpecialContract","getBunnySpecialContract","useClaimRefundContract","getClaimRefundContract","useTradingCompetitionContract","getTradingCompetitionContract","useEasterNftContract","getEasterNftContract","useCakeVaultContract","getCakeVaultContract","usePredictionsContract","getPredictionsContract","useChainlinkOracleContract","getChainlinkOracleContract","library","useWeb3React","refEth","useRef","useState","Web3","getWeb3NoAccount","setweb3","useEffect","current","Balance","value","color","decimals","isDisabled","unit","prefix","onClick","props","previousValue","start","end","duration","separator","getBscScanAddressUrl","BASE_BSC_SCAN_URL","getBscScanTransactionUrl","transactionHash","getBscScanBlockNumberUrl","block","getBscScanBlockCountdownUrl","UnlockButton","t","useTranslation","useAuth","login","logout","onPresentConnectModal","useWalletModal","useLastUpdated","Date","now","lastUpdated","setStateLastUpdated","previousLastUpdated","usePreviousValue","setLastUpdated","useCallback","ref","useApprove","lpContract","account","masterChefContract","onApprove","a","approve","tx","useSousApprove","sousId","earningTokenSymbol","requestedApproval","setRequestedApproval","useToast","toastSuccess","toastError","dispatch","useAppDispatch","sousChefContract","handleApprove","updateUserAllowance","symbol","console","error","message","useVaultApprove","cakeVaultContract","cakeContract","methods","options","ethers","constants","MaxUint256","send","from","on","useCheckVaultApprovalStatus","isVaultApproved","setIsVaultApproved","allowance","call","response","currentAllowance","BigNumber","gt","checkApprovalStatus","useIfoApprove","tokenContract","spenderAddress","defaultOptions","hydrate","identity","dehydrate","usePersistState","initialValue","userOptions","localStorageKey","valueFromLS","localStorage","getItem","JSON","parse","setValue","setItem","stringify","stake","pid","amount","deposit","times","DEFAULT_TOKEN_DECIMAL","toString","gas","DEFAULT_GAS_LIMIT","sousStake","BIG_TEN","pow","sousStakeBnb","unstake","withdraw","sousUnstake","sousEmergencyUnstake","emergencyWithdraw","harvest","soushHarvest","soushHarvestBnb","BIG_ZERO","chainId","parseInt","process","cakeBnbFarm","farms","find","farm","Token","getCakeAddress","tokens","wbnb","getAddress","lpAddresses","CoreTag","variant","outline","startIcon","width","mr","CommunityTag","DualTag","ManualPoolTag","CompoundingPoolTag","useSousStake","isUsingBnb","handleStake","updateUserStakedBalance","updateUserBalance","onStake","useStake","txHash","info","useSousUnstake","enableEmergencyWithdraw","handleUnstake","updateUserPendingReward","onUnstake","useUnstake","useHarvest","farmPid","onReward","useSousHarvest","handleHarvest","Grid","styled","div","GridItem","GridHeaderItem","ApyCalculatorModal","onDismiss","tokenPrice","apr","linkLabel","linkHref","roundingDecimals","compoundFrequency","performanceFee","oneThousandDollarsWorthOfToken","tokenEarnedPerThousand1D","tokenEarnedPerThousandDollarsCompounding","numberOfDays","farmApr","tokenEarnedPerThousand7D","tokenEarnedPerThousand30D","tokenEarnedPerThousand365D","title","fontSize","bold","textTransform","mb","ml","num","getRoi","amountEarned","amountInvested","toFixed","style","maxWidth","justifyContent","textAlign","freq","toLocaleString","mt","fee","href","FlexLayout","Latinise","latin_map","τ","Τ","latinise","input","replace","x","DropDownHeader","theme","shadows","inset","colors","inputSecondary","DropDownListContainer","zIndices","dropdown","mediaQueries","sm","DropDownContainer","isOpen","css","tooltip","boxShadow","DropDownList","ul","ListItem","li","Select","onChange","containerRef","dropdownRef","setIsOpen","selectedOptionIndex","setSelectedOptionIndex","height","containerSize","setContainerSize","toggling","offsetWidth","offsetHeight","label","map","option","index","selectedIndex","useDelayedUnmount","isMounted","delayTime","shouldRender","setShouldRender","timeoutId","setTimeout","clearTimeout","Outer","Box","background","gradients","bubblegum","Inner","Container","PageHeader","children","StyledInput","Input","primary","InputWrapper","SearchInput","onChangeCallback","placeholder","toggled","setToggled","searchText","setSearchText","debouncedOnChange","debounce","e","target","onBlur"],"mappings":"kIAAA,wwBAkCaA,EAAmB,SAACC,GAC/B,IAAMC,EAAOC,cACb,OAAOC,mBAAQ,kBAAMC,YAAiBJ,EAASC,KAAO,CAACD,EAASC,KAGrDI,EAAmB,SAACL,GAC/B,IAAMC,EAAOC,cACb,OAAOC,mBAAQ,kBAAMG,YAAiBN,EAASC,KAAO,CAACD,EAASC,KAGrDM,EAAW,SAACP,GACvB,IAAMC,EAAOC,cACb,OAAOC,mBAAQ,kBAAMK,YAAiBR,EAASC,KAAO,CAACD,EAASC,KAMrDQ,EAAY,SAACT,GACxB,IAAMC,EAAOC,cACb,OAAOC,mBAAQ,kBAAMO,YAAkBV,EAASC,KAAO,CAACD,EAASC,KAGtDU,EAAU,WACrB,IAAMV,EAAOC,cACb,OAAOC,mBAAQ,kBAAMS,YAAgBX,KAAO,CAACA,KAGlCY,EAAU,WACrB,IAAMZ,EAAOC,cACb,OAAOC,mBAAQ,kBAAMS,YAAgBX,KAAO,CAACA,KAGlCa,EAAkB,WAC7B,IAAMb,EAAOC,cACb,OAAOC,mBAAQ,kBAAMY,YAAwBd,KAAO,CAACA,KAQ1Ce,EAAa,WACxB,IAAMf,EAAOC,cACb,OAAOC,mBAAQ,kBAAMc,YAAmBhB,KAAO,CAACA,KAGrCiB,EAAa,WACxB,IAAMjB,EAAOC,cACb,OAAOC,mBAAQ,kBAAMgB,YAAmBlB,KAAO,CAACA,KAGrCmB,EAAgB,WAC3B,IAAMnB,EAAOC,cACb,OAAOC,mBAAQ,kBAAMkB,YAAsBpB,KAAO,CAACA,KAIxCqB,EAAmB,WAC9B,IAAMrB,EAAOC,cACb,OAAOC,mBAAQ,kBAAMoB,YAAyBtB,KAAO,CAACA,KAQ3CuB,EAAsB,WACjC,IAAMvB,EAAOC,cACb,OAAOC,mBAAQ,kBAAMsB,YAAoBxB,KAAO,CAACA,KAItCyB,EAAgB,WAC3B,IAAMzB,EAAOC,cACb,OAAOC,mBAAQ,kBAAMwB,YAAsB1B,KAAO,CAACA,KAGxC2B,EAAc,SAACC,GAC1B,IAAM5B,EAAOC,cACb,OAAOC,mBAAQ,kBAAM2B,YAAoBD,EAAI5B,KAAO,CAAC4B,EAAI5B,KAQ9C8B,EAA4B,WACvC,IAAM9B,EAAOC,cACb,OAAOC,mBAAQ,kBAAM6B,YAA0B/B,KAAO,CAACA,KAG5CgC,EAA0B,WACrC,IAAMhC,EAAOC,cACb,OAAOC,mBAAQ,kBAAM+B,YAAwBjC,KAAO,CAACA,KAG1CkC,EAAyB,WACpC,IAAMlC,EAAOC,cACb,OAAOC,mBAAQ,kBAAMiC,YAAuBnC,KAAO,CAACA,KAGzCoC,EAAgC,WAC3C,IAAMpC,EAAOC,cACb,OAAOC,mBAAQ,kBAAMmC,YAA8BrC,KAAO,CAACA,KAGhDsC,EAAuB,WAClC,IAAMtC,EAAOC,cACb,OAAOC,mBAAQ,kBAAMqC,YAAqBvC,KAAO,CAACA,KAGvCwC,EAAuB,WAClC,IAAMxC,EAAOC,cACb,OAAOC,mBAAQ,kBAAMuC,YAAqBzC,KAAO,CAACA,KAGvC0C,EAAyB,WACpC,IAAM1C,EAAOC,cACb,OAAOC,mBAAQ,kBAAMyC,YAAuB3C,KAAO,CAACA,KAGzC4C,EAA6B,WACxC,IAAM5C,EAAOC,cACb,OAAOC,mBAAQ,kBAAM2C,YAA2B7C,KAAO,CAACA,M,sFCxI3CC,IAfC,WAAO,IACb6C,EAAYC,cAAZD,QACFE,EAASC,iBAAOH,GAFF,EAGII,mBAASJ,EAAU,IAAIK,IAAKL,GAAWM,eAH3C,mBAGbpD,EAHa,KAGPqD,EAHO,KAYpB,OAPAC,qBAAU,WACJR,IAAYE,EAAOO,UACrBF,EAAQP,EAAU,IAAIK,IAAKL,GAAWM,eACtCJ,EAAOO,QAAUT,KAElB,CAACA,IAEG9C,I,6FCeMwD,IAxByB,SAAC,GASlC,IARLC,EAQI,EARJA,MAQI,IAPJC,aAOI,MAPI,OAOJ,MANJC,gBAMI,MANO,EAMP,MALJC,kBAKI,SAJJC,EAII,EAJJA,KACAC,EAGI,EAHJA,OACAC,EAEI,EAFJA,QACGC,EACC,mFACEC,EAAgBhB,iBAAO,GAK7B,OAHAK,qBAAU,WACRW,EAAcV,QAAUE,IACvB,CAACA,IAEF,eAAC,KAAD,yBAAMC,MAAOE,EAAa,eAAiBF,EAAOK,QAASA,GAAaC,GAAxE,cACGF,GAAU,+BAAOA,IAClB,cAAC,IAAD,CAASI,MAAOD,EAAcV,QAASY,IAAKV,EAAOE,SAAUA,EAAUS,SAAU,EAAGC,UAAU,MAC7FR,GAAQ,+BAAOA,U,iCChCtB,oJAEaS,EAAuB,SAACvE,GACnC,MAAM,GAAN,OAAUwE,IAAV,oBAAuCxE,IAG5ByE,EAA2B,SAACC,GACvC,MAAM,GAAN,OAAUF,IAAV,eAAkCE,IAGvBC,EAA2B,SAACC,GACvC,MAAM,GAAN,OAAUJ,IAAV,kBAAqCI,IAG1BC,EAA8B,SAACD,GAC1C,MAAM,GAAN,OAAUJ,IAAV,4BAA+CI,K,mFCElCE,IAZM,SAACb,GAAW,IACvBc,EAAMC,cAAND,EADsB,EAEJE,cAAlBC,EAFsB,EAEtBA,MAAOC,EAFe,EAEfA,OACPC,EAA0BC,aAAeH,EAAOC,GAAhDC,sBAER,OACE,cAAC,IAAD,yBAAQpB,QAASoB,GAA2BnB,GAA5C,aACGc,EAAE,sB,6DCMMO,IAXQ,WAAO,IAAD,EACgBnC,mBAASoC,KAAKC,OAD9B,mBACpBC,EADoB,KACPC,EADO,KAQ3B,MAAO,CAAED,cAAaE,oBANMC,YAAiBH,GAMFI,eAJpBC,uBAAY,WACjCJ,EAAoBH,KAAKC,SACxB,CAACE,O,iCCbN,WAiBeE,IAVU,SAAClC,GACxB,IAAMqC,EAAM7C,mBAMZ,OAJAK,qBAAU,WACRwC,EAAIvC,QAAUE,KAGTqC,EAAIvC,U,kVCAAwC,EAAa,SAACC,GAA0B,IAC3CC,EAAYlD,cAAZkD,QACFC,EAAqBzE,cAW3B,MAAO,CAAE0E,UATaN,sBAAW,sBAAC,4BAAAO,EAAA,+EAEbC,YAAQL,EAAYE,EAAoBD,GAF3B,cAExBK,EAFwB,yBAGvBA,GAHuB,0DAKvB,GALuB,yDAO/B,CAACL,EAASD,EAAYE,MAMdK,EAAiB,SAACP,EAAsBQ,EAAQC,GAAwB,IAAD,EAChCvD,oBAAS,GADuB,mBAC3EwD,EAD2E,KACxDC,EADwD,OAE7CC,cAA7BC,EAF0E,EAE1EA,aAAcC,EAF4D,EAE5DA,WACdhC,EAAMC,cAAND,EACFiC,EAAWC,cACTf,EAAYlD,cAAZkD,QACFgB,EAAmBtF,YAAY6E,GAwBrC,MAAO,CAAEU,cAtBarB,sBAAW,sBAAC,4BAAAO,EAAA,sEAE9BO,GAAqB,GAFS,SAGbN,YAAQL,EAAYiB,EAAkBhB,GAHzB,OAGxBK,EAHwB,OAI9BS,EAASI,YAAoBX,EAAQP,IACjCK,GACFO,EACE/B,EAAE,oBACFA,EAAE,0CAA2C,CAAEsC,OAAQX,KAEzDE,GAAqB,KAGrBG,EAAWhC,EAAE,SAAUA,EAAE,uFACzB6B,GAAqB,IAdO,gDAiB9BU,QAAQC,MAAR,MACAR,EAAWhC,EAAE,SAAH,kCAAa,KAAGyC,SAlBI,yDAoB/B,CAACtB,EAASc,EAAUf,EAAYiB,EAAkBT,EAAQC,EAAoB3B,EAAGgC,EAAYD,IAExEH,sBAIbc,EAAkB,SAAC5B,GAAgC,IACtDK,EAAYlD,cAAZkD,QADqD,EAEX/C,oBAAS,GAFE,mBAEtDwD,EAFsD,KAEnCC,EAFmC,KAGrD7B,EAAMC,cAAND,EAHqD,EAIxB8B,cAA7BC,EAJqD,EAIrDA,aAAcC,EAJuC,EAIvCA,WAChBW,EAAoBjF,cACpBkF,EAAehH,cAqBrB,MAAO,CAAEwG,cAnBa,WACpBQ,EAAaC,QACVtB,QAAQoB,EAAkBG,QAAQ7H,QAAS8H,IAAOC,UAAUC,YAC5DC,KAAK,CAAEC,KAAMhC,IACbiC,GAAG,WAAW,WACbvB,GAAqB,MAEtBuB,GAAG,WAAW,WACbrB,EAAa/B,EAAE,oBAAqBA,EAAE,2CAA4C,CAAEsC,OAAQ,UAC5FxB,IACAe,GAAqB,MAEtBuB,GAAG,SAAS,SAACZ,GACZD,QAAQC,MAAMA,GACdR,EAAWhC,EAAE,SAAUA,EAAE,uFACzB6B,GAAqB,OAIHD,sBAGbyB,EAA8B,WAAO,IAAD,EACDjF,oBAAS,GADR,mBACxCkF,EADwC,KACvBC,EADuB,KAEvCpC,EAAYlD,cAAZkD,QACFyB,EAAehH,cACf+G,EAAoBjF,cAJqB,EAKP6C,cAAhCG,EALuC,EAKvCA,YAAaI,EAL0B,EAK1BA,eAerB,OAdAtC,qBAAU,YACiB,uCAAG,8BAAA8C,EAAA,+EAEDsB,EAAaC,QAAQW,UAAUrC,EAASwB,EAAkBG,QAAQ7H,SAASwI,OAF1E,OAElBC,EAFkB,OAGlBC,EAAmB,IAAIC,IAAUF,GACvCH,EAAmBI,EAAiBE,GAAG,IAJf,gDAMxBN,GAAmB,GANK,yDAAH,qDAUzBO,KACC,CAAC3C,EAASyB,EAAcD,EAAmBjC,IAEvC,CAAE4C,kBAAiBxC,mBAsBfiD,EAAgB,SAACC,EAAyBC,GAA4B,IACzE9C,EAAYlD,cAAZkD,QAMR,OALkBJ,sBAAW,sBAAC,4BAAAO,EAAA,sEACX0C,EAAcnB,QAAQtB,QAAQ0C,EAAgBlB,IAAOC,UAAUC,YAAYC,KAAK,CAAEC,KAAMhC,IAD7E,cACtBK,EADsB,yBAErBA,GAFqB,2CAG3B,CAACL,EAAS8C,EAAgBD,M,6ECrIzBE,EAAiB,CACrBC,QAASC,IACTC,UAAWD,KAyBEE,IAnBS,SAACC,EAAmBC,GAAyC,IAAD,6BAC7BN,GAAmBM,GAAhEC,EAD0E,EAC1EA,gBAAiBN,EADyD,EACzDA,QAASE,EADgD,EAChDA,UADgD,EAExDjG,oBAAS,WACjC,IACE,IAAMsG,EAAcC,aAAaC,QAAQH,GAEzC,OAAOC,EAAcP,EAAQU,KAAKC,MAAMJ,IAAgBH,EACxD,MAAO/B,GACP,OAAO+B,MARuE,mBAE3E5F,EAF2E,KAEpEoG,EAFoE,KAgBlF,OAJAvG,qBAAU,WACRmG,aAAaK,QAAQP,EAAiBI,KAAKI,UAAUZ,EAAU1F,OAC9D,CAACA,EAAO8F,EAAiBJ,IAErB,CAAC1F,EAAOoG,K,mgBCjBJxD,EAAO,uCAAG,WAAOL,EAAYE,EAAoBD,GAAvC,SAAAG,EAAA,+EACdJ,EAAW2B,QACftB,QAAQH,EAAmB0B,QAAQ7H,QAAS8H,IAAOC,UAAUC,YAC7DC,KAAK,CAAEC,KAAMhC,KAHK,2CAAH,0DAMP+D,EAAK,uCAAG,WAAO9D,EAAoB+D,EAAKC,EAAQjE,GAAxC,SAAAG,EAAA,4DAWF,6CAXE,kBAYZF,EAAmByB,QACvBwC,QAAQF,EAAK,IAAIvB,IAAUwB,GAAQE,MAAMC,KAAuBC,WAFlD,8CAGdtC,KAAK,CAAEC,KAAMhC,EAASsE,IAAKC,MAC3BtC,GAAG,mBAAmB,SAAC5B,GACtB,OAAOA,EAAG7B,oBAhBK,2CAAH,4DAoBLgG,EAAS,uCAAG,WAAOxD,EAAkBiD,GAAzB,6BAAA9D,EAAA,6DAAiCzC,EAAjC,+BAA4C,GAAIsC,EAAhD,yCAChBgB,EAAiBU,QACrBwC,QAAQ,IAAIzB,IAAUwB,GAAQE,MAAMM,IAAQC,IAAIhH,IAAW2G,YAC3DtC,KAAK,CAAEC,KAAMhC,EAASsE,IAAKC,MAC3BtC,GAAG,mBAAmB,SAAC5B,GACtB,OAAOA,EAAG7B,oBALS,2CAAH,wDASTmG,EAAY,uCAAG,WAAO3D,EAAkBiD,EAAQjE,GAAjC,SAAAG,EAAA,+EACnBa,EAAiBU,QACrBwC,UACAnC,KAAK,CACJC,KAAMhC,EACNsE,IAAKC,IACL/G,MAAO,IAAIiF,IAAUwB,GAAQE,MAAMC,KAAuBC,aAE3DpC,GAAG,mBAAmB,SAAC5B,GACtB,OAAOA,EAAG7B,oBATY,2CAAH,0DAaZoG,EAAO,uCAAG,WAAO3E,EAAoB+D,EAAKC,EAAQjE,GAAxC,SAAAG,EAAA,+EAUdF,EAAmByB,QACvBmD,SAASb,EAAK,IAAIvB,IAAUwB,GAAQE,MAAMC,KAAuBC,YACjEtC,KAAK,CAAEC,KAAMhC,EAASsE,IAAKC,MAC3BtC,GAAG,mBAAmB,SAAC5B,GACtB,OAAOA,EAAG7B,oBAdO,2CAAH,4DAkBPsG,EAAW,uCAAG,WAAO9D,EAAkBiD,EAAQvG,EAAUsC,GAA3C,SAAAG,EAAA,+EAClBa,EAAiBU,QACrBmD,SAAS,IAAIpC,IAAUwB,GAAQE,MAAMM,IAAQC,IAAIhH,IAAW2G,YAC5DtC,KAAK,CAAEC,KAAMhC,EAASsE,IAAKC,MAC3BtC,GAAG,mBAAmB,SAAC5B,GACtB,OAAOA,EAAG7B,oBALW,2CAAH,4DASXuG,EAAoB,uCAAG,WAAO/D,EAAkBhB,GAAzB,SAAAG,EAAA,+EAC3Ba,EAAiBU,QACrBsD,oBACAjD,KAAK,CAAEC,KAAMhC,IACbiC,GAAG,mBAAmB,SAAC5B,GACtB,OAAOA,EAAG7B,oBALoB,2CAAH,wDASpByG,EAAO,uCAAG,WAAOhF,EAAoB+D,EAAKhE,GAAhC,SAAAG,EAAA,4DASJ,6CATI,kBAYdF,EAAmByB,QACvBwC,QAAQF,EAAK,IAJC,8CAKdjC,KAAK,CAAEC,KAAMhC,EAASsE,IAAKC,MAC3BtC,GAAG,mBAAmB,SAAC5B,GACtB,OAAOA,EAAG7B,oBAhBO,2CAAH,0DAoBP0G,EAAY,uCAAG,WAAOlE,EAAkBhB,GAAzB,SAAAG,EAAA,+EACnBa,EAAiBU,QACrBwC,QAAQ,KACRnC,KAAK,CAAEC,KAAMhC,EAASsE,IAAKC,MAC3BtC,GAAG,mBAAmB,SAAC5B,GACtB,OAAOA,EAAG7B,oBALY,2CAAH,wDASZ2G,EAAe,uCAAG,WAAOnE,EAAkBhB,GAAzB,SAAAG,EAAA,+EACtBa,EAAiBU,QACrBwC,UACAnC,KAAK,CAAEC,KAAMhC,EAASsE,IAAKC,IAAmB/G,MAAO4H,MACrDnD,GAAG,mBAAmB,SAAC5B,GACtB,OAAOA,EAAG7B,oBALe,2CAAH,wDAStB6G,EAAUC,SAASC,KAAgC,IAEnDC,EAAcC,IAAMC,MAAK,SAACC,GAAD,OADZ,IACsBA,EAAK3B,OAE3B,IAAI4B,IAAMP,EAASQ,cAAkB,IACrC,IAAID,IAAMP,EAASS,IAAOC,KAAKjM,QAAQuL,GAAU,IAC7C,IAAIO,IAAMP,EAASW,YAAWR,EAAYS,aAAc,K,oPC5IzEC,EAA8B,SAACnI,GAAW,IACtCc,EAAMC,cAAND,EACR,OACE,cAAC,KAAD,yBAAKsH,QAAQ,UAAUC,SAAO,EAACC,UAAW,cAAC,KAAD,CAAcC,MAAM,OAAO7I,MAAM,YAAY8I,GAAG,SAAcxI,GAAxG,aACGc,EAAE,YAKH2H,EAAmC,SAACzI,GAAW,IAC3Cc,EAAMC,cAAND,EACR,OACE,cAAC,KAAD,yBAAKsH,QAAQ,UAAUC,SAAO,EAACC,UAAW,cAAC,IAAD,CAAeC,MAAM,OAAO7I,MAAM,UAAU8I,GAAG,SAAcxI,GAAvG,aACGc,EAAE,iBAaH4H,EAA8B,SAAC1I,GAAW,IACtCc,EAAMC,cAAND,EACR,OACE,cAAC,KAAD,yBAAKsH,QAAQ,aAAaC,SAAO,GAAKrI,GAAtC,aACGc,EAAE,YAKH6H,EAAoC,SAAC3I,GAAW,IAC5Cc,EAAMC,cAAND,EACR,OACE,cAAC,KAAD,yBAAKsH,QAAQ,UAAUC,SAAO,EAACC,UAAW,cAAC,KAAD,CAAaC,MAAM,OAAO7I,MAAM,YAAY8I,GAAG,SAAcxI,GAAvG,aACGc,EAAE,cAKH8H,EAAyC,SAAC5I,GAAW,IACjDc,EAAMC,cAAND,EACR,OACE,cAAC,KAAD,yBAAKsH,QAAQ,UAAUC,SAAO,EAACC,UAAW,cAAC,IAAD,CAAeC,MAAM,OAAO7I,MAAM,UAAU8I,GAAG,SAAcxI,GAAvG,aACGc,EAAE,a,+IC9BI+H,EAAe,SAACrG,GAAwC,IAAxBsG,EAAuB,wDAC5D/F,EAAWC,cADiD,EAE9CjE,cAAZkD,EAF0D,EAE1DA,QACFC,EAAqBzE,cACrBwF,EAAmBtF,YAAY6E,GAE/BuG,EAAclH,sBAAW,uCAC7B,WAAOqE,EAAgBvG,GAAvB,SAAAyC,EAAA,yDACiB,IAAXI,EADN,gCAEUwD,YAAM9D,EAAoB,EAAGgE,EAAQjE,GAF/C,kCAGa6G,EAHb,iCAIUlC,YAAa3D,EAAkBiD,EAAQjE,GAJjD,gDAMUwE,YAAUxD,EAAkBiD,EAAQvG,EAAUsC,GANxD,QAQEc,EAASiG,YAAwBxG,EAAQP,IACzCc,EAASkG,YAAkBzG,EAAQP,IATrC,4CAD6B,wDAY7B,CAACA,EAASc,EAAU+F,EAAY5G,EAAoBe,EAAkBT,IAGxE,MAAO,CAAE0G,QAASH,IAGLI,IAvCE,SAAClD,GAAiB,IACzBhE,EAAYlD,cAAZkD,QACFC,EAAqBzE,cAU3B,MAAO,CAAEyL,QARWrH,sBAAW,uCAC7B,WAAOqE,GAAP,eAAA9D,EAAA,sEACuB4D,YAAM9D,EAAoB+D,EAAKC,EAAQjE,GAD9D,OACQmH,EADR,OAEE/F,QAAQgG,KAAKD,GAFf,2CAD6B,sDAK7B,CAACnH,EAASC,EAAoB+D,O,+ICMrBqD,EAAiB,SAAC9G,GAA6C,IAArC+G,EAAoC,wDACnExG,EAAWC,cADwD,EAErDjE,cAAZkD,EAFiE,EAEjEA,QACFC,EAAqBzE,cACrBwF,EAAmBtF,YAAY6E,GAE/BgH,EAAgB3H,sBAAW,uCAC/B,WAAOqE,EAAgBvG,GAAvB,mBAAAyC,EAAA,yDACiB,IAAXI,EADN,gCAEyBqE,YAAQ3E,EAAoB,EAAGgE,EAAQjE,GAFhE,OAEUmH,EAFV,OAGI/F,QAAQgG,KAAKD,GAHjB,2BAIaG,EAJb,kCAKyBvC,YAAqB/D,EAAkBhB,GALhE,QAKUmH,EALV,OAMI/F,QAAQgG,KAAKD,GANjB,yCAQyBrC,YAAY9D,EAAkBiD,EAAQvG,EAAUsC,GARzE,QAQUmH,EARV,OASI/F,QAAQgG,KAAKD,GATjB,QAWErG,EAASiG,YAAwBxG,EAAQP,IACzCc,EAASkG,YAAkBzG,EAAQP,IACnCc,EAAS0G,YAAwBjH,EAAQP,IAb3C,4CAD+B,wDAgB/B,CAACA,EAASc,EAAUwG,EAAyBrH,EAAoBe,EAAkBT,IAGrF,MAAO,CAAEkH,UAAWF,IAGPG,IA3CI,SAAC1D,GAAiB,IAC3BhE,EAAYlD,cAAZkD,QACFC,EAAqBzE,cAU3B,MAAO,CAAEiM,UARa7H,sBAAW,uCAC/B,WAAOqE,GAAP,eAAA9D,EAAA,sEACuByE,YAAQ3E,EAAoB+D,EAAKC,EAAQjE,GADhE,OACQmH,EADR,OAEE/F,QAAQgG,KAAKD,GAFf,2CAD+B,sDAK/B,CAACnH,EAASC,EAAoB+D,O,iLCTrB2D,EAAa,SAACC,GAAqB,IACtC5H,EAAYlD,cAAZkD,QACFC,EAAqBzE,cAO3B,MAAO,CAAEqM,SALajI,sBAAW,sBAAC,4BAAAO,EAAA,sEACX8E,YAAQhF,EAAoB2H,EAAS5H,GAD1B,cAC1BmH,EAD0B,yBAEzBA,GAFyB,2CAG/B,CAACnH,EAAS4H,EAAS3H,MAKX6H,EAAiB,SAACvH,GAAgC,IAAxBsG,EAAuB,wDACtD/F,EAAWC,cAD2C,EAExCjE,cAAZkD,EAFoD,EAEpDA,QACFgB,EAAmBtF,YAAY6E,GAC/BN,EAAqBzE,cAErBuM,EAAgBnI,sBAAW,sBAAC,sBAAAO,EAAA,yDACjB,IAAXI,EAD4B,gCAExB0E,YAAQhF,EAAoB,EAAGD,GAFP,kCAGrB6G,EAHqB,iCAIxB1B,YAAgBnE,EAAkBhB,GAJV,gDAMxBkF,YAAalE,EAAkBhB,GANP,QAQhCc,EAAS0G,YAAwBjH,EAAQP,IACzCc,EAASkG,YAAkBzG,EAAQP,IATH,4CAU/B,CAACA,EAASc,EAAU+F,EAAY5G,EAAoBe,EAAkBT,IAEzE,MAAO,CAAEsH,SAAUE,K,iGCnBfC,EAAOC,IAAOC,IAAV,yJAOJC,EAAWF,IAAOC,IAAV,0BAERE,EAAiBH,IAAOC,IAAV,iDA0JLG,IAtJ+C,SAAC,GAUxD,IATLC,EASI,EATJA,UACAC,EAQI,EARJA,WACAC,EAOI,EAPJA,IACAC,EAMI,EANJA,UACAC,EAKI,EALJA,SAKI,IAJJlI,0BAII,MAJiB,OAIjB,MAHJmI,wBAGI,MAHe,EAGf,MAFJC,yBAEI,MAFgB,EAEhB,MADJC,sBACI,MADa,EACb,EACIhK,EAAMC,cAAND,EACFiK,EAAiC,IAAOP,EAExCQ,EAA2BC,YAAyC,CACxEC,aAAc,EACdC,QAASV,EACTD,aACAI,mBACAC,oBACAC,mBAEIM,EAA2BH,YAAyC,CACxEC,aAAc,EACdC,QAASV,EACTD,aACAI,mBACAC,oBACAC,mBAEIO,EAA4BJ,YAAyC,CACzEC,aAAc,GACdC,QAASV,EACTD,aACAI,mBACAC,oBACAC,mBAEIQ,EAA6BL,YAAyC,CAC1EC,aAAc,IACdC,QAASV,EACTD,aACAI,mBACAC,oBACAC,mBAGF,OACE,eAAC,KAAD,CAAOS,MAAOzK,EAAE,OAAQyJ,UAAWA,EAAnC,UACE,eAACN,EAAD,WACE,cAACI,EAAD,UACE,cAAC,KAAD,CAAMmB,SAAS,OAAOC,MAAI,EAAC/L,MAAM,aAAagM,cAAc,YAAYC,GAAG,OAA3E,SACG7K,EAAE,iBAGP,cAACuJ,EAAD,UACE,cAAC,KAAD,CAAMmB,SAAS,OAAOC,MAAI,EAAC/L,MAAM,aAAagM,cAAc,YAAYlD,GAAG,OAAOoD,GAAG,OAAOD,GAAG,OAA/F,SACG7K,EAAE,WAGP,cAACuJ,EAAD,UACE,cAAC,KAAD,CAAMmB,SAAS,OAAOC,MAAI,EAAC/L,MAAM,aAAagM,cAAc,YAAYC,GAAG,OAA3E,SACG7K,EAAE,sBAAuB,CAAEsC,OAAQX,QAIxC,cAAC2H,EAAD,UACE,cAAC,KAAD,UAAOtJ,EAAE,SAAU,CAAE+K,IAAK,QAE5B,cAACzB,EAAD,UACE,eAAC,KAAD,CAAM5B,GAAG,OAAOoD,GAAG,OAAnB,UACGE,YAAO,CAAEC,aAAcf,EAA0BgB,eAAgBjB,IAAkCkB,QAClGrB,GAFJ,SAOF,cAACR,EAAD,UACE,cAAC,KAAD,UAAOY,MAGT,cAACZ,EAAD,UACE,cAAC,KAAD,UAAOtJ,EAAE,SAAU,CAAE+K,IAAK,QAE5B,cAACzB,EAAD,UACE,eAAC,KAAD,CAAM5B,GAAG,OAAOoD,GAAG,OAAnB,UACGE,YAAO,CAAEC,aAAcX,EAA0BY,eAAgBjB,IAAkCkB,QAClGrB,GAFJ,SAOF,cAACR,EAAD,UACE,cAAC,KAAD,UAAOgB,MAGT,cAAChB,EAAD,UACE,cAAC,KAAD,UAAOtJ,EAAE,SAAU,CAAE+K,IAAK,SAE5B,cAACzB,EAAD,UACE,eAAC,KAAD,CAAM5B,GAAG,OAAOoD,GAAG,OAAnB,UACGE,YAAO,CACNC,aAAcV,EACdW,eAAgBjB,IACfkB,QAAQrB,GAJb,SAQF,cAACR,EAAD,UACE,cAAC,KAAD,UAAOiB,MAGT,cAACjB,EAAD,CAAU8B,MAAO,CAAEC,SAAU,SAA7B,SACE,cAAC,KAAD,UAAOrL,EAAE,iBAEX,cAACsJ,EAAD,UACE,eAAC,KAAD,CAAM5B,GAAG,OAAOoD,GAAG,OAAnB,UACGE,YAAO,CACNC,aAAcT,EACdU,eAAgBjB,IACfkB,QAAQrB,GAJb,SAQF,cAACR,EAAD,UACE,cAAC,KAAD,UAAOkB,SAGX,cAAC,IAAD,CAAMc,eAAe,SAArB,SACE,eAAC,IAAD,CAAKT,GAAG,OAAOQ,SAAS,QAAxB,UACE,cAAC,KAAD,CAAMX,SAAS,OAAOa,UAAU,SAAS3M,MAAM,aAA/C,SACGoB,EACC,sKACA,CAAEwL,KAAMzB,EAAkB0B,qBAG7BzB,EAAiB,GAChB,cAAC,KAAD,CAAM0B,GAAG,OAAOhB,SAAS,OAAOa,UAAU,SAAS3M,MAAM,aAAzD,SACGoB,EAAE,gFAA4E,CAAE2L,IAAK3B,WAK9F,cAAC,IAAD,CAAMsB,eAAe,SAArB,SACE,cAAC,KAAD,CAAcM,KAAM/B,EAApB,SAA+BD,W,+CC7KjCiC,E,KAAazC,EAAOC,IAAV,4NAaDwC,O,iCCff,kCAAO,IAAMC,EAAW,CACtBC,UAAW,CACTC,SAAG,IACHC,SAAG,MAIMC,EAAW,SAACC,GACvB,OAAOA,EAAMC,QAAQ,qBAAqB,SAACC,GAAD,OAAOP,EAASC,UAAUM,IAAMA,O,qGCJtEC,EAAiBlD,IAAOC,IAAV,8RAOJ,qBAAGkD,MAAkBC,QAAQC,SACvB,qBAAGF,MAAkBG,OAAOC,kBAElC,qBAAGJ,MAAkBG,OAAOP,SAItCS,EAAwBxD,IAAOC,IAAV,wTAKX,qBAAGkD,MAAkBG,OAAOP,SAC/B,qBAAGI,MAAkBM,SAASC,YAOvC,qBAAGP,MAAkBQ,aAAaC,MAKhCC,EAAoB7D,IAAOC,IAAV,4VAEZ,qBAAG5B,SAEE,qBAAG8E,MAAkBG,OAAOP,SAMxC,qBAAGI,MAAkBQ,aAAaC,MAIlC,SAAC9N,GAAD,OACAA,EAAMgO,QACNC,YADA,+XAEIb,GAC2B,qBAAGC,MAAkBG,OAAOC,kBACzC,qBAAGJ,MAAkBa,QAAQC,YAI3CT,GAIoB,qBAAGL,MAAkBG,OAAOC,kBAGlC,qBAAGJ,MAAkBa,QAAQC,gBAY7CC,EAAelE,IAAOmE,GAAV,qGAIL,qBAAGhB,MAAkBM,SAASC,YAGrCU,EAAWpE,IAAOqE,GAAV,+GAII,qBAAGlB,MAAkBG,OAAOC,kBA8D/Be,IAhDsC,SAAC,GAA2B,IAAzB5K,EAAwB,EAAxBA,QAAS6K,EAAe,EAAfA,SACzDC,EAAezP,iBAAO,MACtB0P,EAAc1P,iBAAO,MAFmD,EAGlDC,oBAAS,GAHyC,mBAGvE8O,EAHuE,KAG/DY,EAH+D,OAIxB1P,mBAAS,GAJe,mBAIvE2P,EAJuE,KAIlDC,EAJkD,OAKpC5P,mBAAS,CAAEqJ,MAAO,EAAGwG,OAAQ,IALO,mBAKvEC,EALuE,KAKxDC,EALwD,KAOxEC,EAAW,kBAAMN,GAAWZ,IAkBlC,OAPA1O,qBAAU,WACR2P,EAAiB,CACf1G,MAAOoG,EAAYpP,QAAQ4P,YAC3BJ,OAAQJ,EAAYpP,QAAQ6P,iBAE7B,IAGD,eAACrB,EAAD,yBAAmBC,OAAQA,EAAQlM,IAAK4M,GAAkBM,GAA1D,cAC2B,IAAxBA,EAAczG,OACb,cAAC6E,EAAD,CAAgBrN,QAASmP,EAAzB,SACE,cAAC,KAAD,UAAOtL,EAAQiL,GAAqBQ,UAGxC,cAAC,IAAD,CAAmB3P,MAAM,OAAOK,QAASmP,IACzC,cAACxB,EAAD,UACE,cAACU,EAAD,CAActM,IAAK6M,EAAnB,SACG/K,EAAQ0L,KAAI,SAACC,EAAQC,GAAT,OACXA,IAAUX,EACR,cAACP,EAAD,CAAUvO,SA5BG0P,EA4BsBD,EA5BI,WACjDV,EAAuBW,GACvBb,GAAU,GAENH,GACFA,EAAS7K,EAAQ6L,MAuBT,SACE,cAAC,KAAD,UAAOF,EAAOF,SADgCE,EAAOF,OAGrD,KA/BU,IAACI,e,oDCrFZC,IAfW,SAACC,EAAoBC,GAAuB,IAAD,EAC3B1Q,oBAAS,GADkB,mBAC5D2Q,EAD4D,KAC9CC,EAD8C,KAYnE,OATAxQ,qBAAU,WACR,IAAIyQ,EAMJ,OALIJ,IAAcE,EAChBC,GAAgB,IACNH,GAAaE,IACvBE,EAAYC,YAAW,kBAAMF,GAAgB,KAAQF,IAEhD,kBAAMK,aAAaF,MACzB,CAACJ,EAAWC,EAAWC,IACnBA,I,yICnBHK,EAAQhG,YAAOiG,IAAPjG,CAAH,gDACK,gBAAGmD,EAAH,EAAGA,MAAH,SAAU+C,YAA+B/C,EAAMG,OAAO6C,UAAUC,aAG1EC,EAAQrG,YAAOsG,IAAPtG,CAAH,2EAWIuG,EANuC,SAAC,GAAD,IAAGL,EAAH,EAAGA,WAAYM,EAAf,EAAeA,SAAa1Q,EAA5B,gDACpD,cAACkQ,EAAD,yBAAOE,WAAYA,GAAgBpQ,GAAnC,aACE,cAACuQ,EAAD,UAAQG,S,oJCVNC,EAAczG,YAAO0G,KAAP1G,CAAH,gOAQJ,qBAAGmD,MAAkBG,OAAOqD,WAI5B,qBAAGxD,MAAkBG,OAAOqD,WAInCC,EAAe5G,IAAOC,IAAV,sFAEd,qBAAGkD,MAAkBQ,aAAaC,MAKhC0C,EAAYtG,IAAOC,IAAV,0BAqCA4G,EA9BsB,SAAC,GAA4D,IAAhDC,EAA+C,EAAzDvC,SAAyD,IAA7BwC,mBAA6B,MAAf,SAAe,IACjE/R,oBAAS,GADwD,mBACxFgS,EADwF,KAC/EC,EAD+E,OAE3DjS,mBAAS,IAFkD,mBAExFkS,EAFwF,KAE5EC,EAF4E,KAIvFvQ,EAAMC,cAAND,EAEFwQ,EAAoBpV,mBACxB,kBAAMqV,KAAS,SAACC,GAAD,OAA4CR,EAAiBQ,KAAI,OAChF,CAACR,IAQH,OACE,cAACR,EAAD,CAAWU,QAASA,EAApB,SACE,cAACJ,EAAD,UACE,cAACH,EAAD,CACElR,MAAO2R,EACP3C,SAVS,SAAC+C,GAChBH,EAAcG,EAAEC,OAAOhS,OACvB6R,EAAkBE,IASZP,YAAanQ,EAAEmQ,GACfS,OAAQ,kBAAMP,GAAW","file":"static/js/1.f6db1dfd.chunk.js","sourcesContent":["import { useMemo } from 'react'\nimport useWeb3 from 'hooks/useWeb3'\nimport {\n  getBep20Contract,\n  getCakeContract,\n  getBRISContract,\n  getBunnyFactoryContract,\n  getBunnySpecialContract,\n  getPancakeRabbitContract,\n  getProfileContract,\n  getIfoV1Contract,\n  getIfoV2Contract,\n  getLotteryContract,\n  getLotteryTicketContract,\n  getReferralContract,\n  getMasterchefContract,\n  getPointCenterIfoContract,\n  getSouschefContract,\n  getClaimRefundContract,\n  getTradingCompetitionContract,\n  getEasterNftContract,\n  getErc721Contract,\n  getCakeVaultContract,\n  getPredictionsContract,\n  getChainlinkOracleContract,\n  getSouschefV2Contract,\n  getLotteryV2Contract,\n  getNewLotteryContract\n} from 'utils/contractHelpers'\n\n/**\n * Helper hooks to get specific contracts (by ABI)\n */\n\nexport const useIfoV1Contract = (address: string) => {\n  const web3 = useWeb3()\n  return useMemo(() => getIfoV1Contract(address, web3), [address, web3])\n}\n\nexport const useIfoV2Contract = (address: string) => {\n  const web3 = useWeb3()\n  return useMemo(() => getIfoV2Contract(address, web3), [address, web3])\n}\n\nexport const useERC20 = (address: string) => {\n  const web3 = useWeb3()\n  return useMemo(() => getBep20Contract(address, web3), [address, web3])\n}\n\n/**\n * @see https://docs.openzeppelin.com/contracts/3.x/api/token/erc721\n */\nexport const useERC721 = (address: string) => {\n  const web3 = useWeb3()\n  return useMemo(() => getErc721Contract(address, web3), [address, web3])\n}\n\nexport const useCake = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getCakeContract(web3), [web3])\n}\n// CAKE and TTNP are the same\nexport const useBRIS = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getCakeContract(web3), [web3])\n}\n\nexport const useBunnyFactory = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getBunnyFactoryContract(web3), [web3])\n}\n\nexport const usePancakeRabbits = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getPancakeRabbitContract(web3), [web3])\n}\n\nexport const useProfile = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getProfileContract(web3), [web3])\n}\n\nexport const useLottery = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getLotteryContract(web3), [web3])\n}\n\nexport const useNewLottery = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getNewLotteryContract(web3), [web3])\n}\n\n\nexport const useLotteryTicket = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getLotteryTicketContract(web3), [web3])\n}\n\nexport const useLotteryV2Contract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getLotteryV2Contract(web3), [web3])\n}\n\nexport const useReferralContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getReferralContract(web3), [web3])\n}\n\n\nexport const useMasterchef = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getMasterchefContract(web3), [web3])\n}\n\nexport const useSousChef = (id) => {\n  const web3 = useWeb3()\n  return useMemo(() => getSouschefContract(id, web3), [id, web3])\n}\n\nexport const useSousChefV2 = (id) => {\n  const web3 = useWeb3()\n  return useMemo(() => getSouschefV2Contract(id, web3), [id, web3])\n}\n\nexport const usePointCenterIfoContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getPointCenterIfoContract(web3), [web3])\n}\n\nexport const useBunnySpecialContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getBunnySpecialContract(web3), [web3])\n}\n\nexport const useClaimRefundContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getClaimRefundContract(web3), [web3])\n}\n\nexport const useTradingCompetitionContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getTradingCompetitionContract(web3), [web3])\n}\n\nexport const useEasterNftContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getEasterNftContract(web3), [web3])\n}\n\nexport const useCakeVaultContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getCakeVaultContract(web3), [web3])\n}\n\nexport const usePredictionsContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getPredictionsContract(web3), [web3])\n}\n\nexport const useChainlinkOracleContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getChainlinkOracleContract(web3), [web3])\n}\n","import { useEffect, useState, useRef } from 'react'\nimport Web3 from 'web3'\nimport { useWeb3React } from '@web3-react/core'\nimport { getWeb3NoAccount } from 'utils/web3'\n\n/**\n * Provides a web3 instance using the provider provided by useWallet\n * with a fallback of an httpProver\n * Recreate web3 instance only if the provider change\n */\nconst useWeb3 = () => {\n  const { library } = useWeb3React()\n  const refEth = useRef(library)\n  const [web3, setweb3] = useState(library ? new Web3(library) : getWeb3NoAccount())\n\n  useEffect(() => {\n    if (library !== refEth.current) {\n      setweb3(library ? new Web3(library) : getWeb3NoAccount())\n      refEth.current = library\n    }\n  }, [library])\n\n  return web3\n}\n\nexport default useWeb3\n","import React, { useEffect, useRef } from 'react'\nimport CountUp from 'react-countup'\nimport { Text, TextProps } from '@pancakeswap/uikit'\n\ninterface BalanceProps extends TextProps {\n  value: number\n  decimals?: number\n  unit?: string\n  isDisabled?: boolean\n  prefix?: string\n  onClick?: (event: React.MouseEvent<HTMLElement>) => void\n}\n\nconst Balance: React.FC<BalanceProps> = ({\n  value,\n  color = 'text',\n  decimals = 3,\n  isDisabled = false,\n  unit,\n  prefix,\n  onClick,\n  ...props\n}) => {\n  const previousValue = useRef(0)\n\n  useEffect(() => {\n    previousValue.current = value\n  }, [value])\n  return (\n    <Text color={isDisabled ? 'textDisabled' : color} onClick={onClick} {...props}>\n      {prefix && <span>{prefix}</span>}\n      <CountUp start={previousValue.current} end={value} decimals={decimals} duration={1} separator=\",\" />\n      {unit && <span>{unit}</span>}\n    </Text>\n  )\n}\n\nexport default Balance\n","import { BASE_BSC_SCAN_URL } from 'config'\n\nexport const getBscScanAddressUrl = (address: string) => {\n  return `${BASE_BSC_SCAN_URL}/address/${address}`\n}\n\nexport const getBscScanTransactionUrl = (transactionHash: string) => {\n  return `${BASE_BSC_SCAN_URL}/tx/${transactionHash}`\n}\n\nexport const getBscScanBlockNumberUrl = (block: string | number) => {\n  return `${BASE_BSC_SCAN_URL}/block/${block}`\n}\n\nexport const getBscScanBlockCountdownUrl = (block: string | number) => {\n  return `${BASE_BSC_SCAN_URL}/block/countdown/${block}`\n}\n","import React from 'react'\nimport { Button, useWalletModal } from '@pancakeswap/uikit'\nimport useAuth from 'hooks/useAuth'\nimport { useTranslation } from 'contexts/Localization'\n\nconst UnlockButton = (props) => {\n  const { t } = useTranslation()\n  const { login, logout } = useAuth()\n  const { onPresentConnectModal } = useWalletModal(login, logout)\n\n  return (\n    <Button onClick={onPresentConnectModal} {...props}>\n      {t('Unlock Wallet')}\n    </Button>\n  )\n}\n\nexport default UnlockButton\n","import { useCallback, useState } from 'react'\nimport usePreviousValue from './usePreviousValue'\n\n/**\n * A helper hook to keep track of the time between events\n * Can also be used to force an effect to re-run\n */\nconst useLastUpdated = () => {\n  const [lastUpdated, setStateLastUpdated] = useState(Date.now())\n  const previousLastUpdated = usePreviousValue(lastUpdated)\n\n  const setLastUpdated = useCallback(() => {\n    setStateLastUpdated(Date.now())\n  }, [setStateLastUpdated])\n\n  return { lastUpdated, previousLastUpdated, setLastUpdated }\n}\n\nexport default useLastUpdated\n","import { useEffect, useRef } from 'react'\n\n/**\n * Returns the previous value of the given value\n *\n * @see https://reactjs.org/docs/hooks-faq.html#how-to-get-the-previous-props-or-state\n */\nconst usePreviousValue = (value: any) => {\n  const ref = useRef()\n\n  useEffect(() => {\n    ref.current = value\n  })\n\n  return ref.current\n}\n\nexport default usePreviousValue\n","import { useCallback, useEffect, useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { Contract } from 'web3-eth-contract'\nimport { ethers } from 'ethers'\nimport BigNumber from 'bignumber.js'\nimport { useAppDispatch } from 'state'\nimport { updateUserAllowance } from 'state/actions'\nimport { approve } from 'utils/callHelpers'\nimport { useTranslation } from 'contexts/Localization'\nimport { useMasterchef, useCake, useSousChef, useLottery, useCakeVaultContract } from './useContract'\nimport useToast from './useToast'\nimport useLastUpdated from './useLastUpdated'\n\n// Approve a Farm\nexport const useApprove = (lpContract: Contract) => {\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, masterChefContract, account)\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, lpContract, masterChefContract])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve a Pool\nexport const useSousApprove = (lpContract: Contract, sousId, earningTokenSymbol) => {\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { toastSuccess, toastError } = useToast()\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      const tx = await approve(lpContract, sousChefContract, account)\n      dispatch(updateUserAllowance(sousId, account))\n      if (tx) {\n        toastSuccess(\n          t('Contract Enabled'),\n          t('You can now stake in the %symbol% pool!', { symbol: earningTokenSymbol }),\n        )\n        setRequestedApproval(false)\n      } else {\n        // user rejected tx or didn't go thru\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setRequestedApproval(false)\n      }\n    } catch (e) {\n      console.error(e)\n      toastError(t('Error'), e?.message)\n    }\n  }, [account, dispatch, lpContract, sousChefContract, sousId, earningTokenSymbol, t, toastError, toastSuccess])\n\n  return { handleApprove, requestedApproval }\n}\n\n// Approve TTNP auto pool\nexport const useVaultApprove = (setLastUpdated: () => void) => {\n  const { account } = useWeb3React()\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { t } = useTranslation()\n  const { toastSuccess, toastError } = useToast()\n  const cakeVaultContract = useCakeVaultContract()\n  const cakeContract = useCake()\n\n  const handleApprove = () => {\n    cakeContract.methods\n      .approve(cakeVaultContract.options.address, ethers.constants.MaxUint256)\n      .send({ from: account })\n      .on('sending', () => {\n        setRequestedApproval(true)\n      })\n      .on('receipt', () => {\n        toastSuccess(t('Contract Enabled'), t('You can now stake in the %symbol% vault!', { symbol: 'TTNP' }))\n        setLastUpdated()\n        setRequestedApproval(false)\n      })\n      .on('error', (error) => {\n        console.error(error)\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setRequestedApproval(false)\n      })\n  }\n\n  return { handleApprove, requestedApproval }\n}\n\nexport const useCheckVaultApprovalStatus = () => {\n  const [isVaultApproved, setIsVaultApproved] = useState(false)\n  const { account } = useWeb3React()\n  const cakeContract = useCake()\n  const cakeVaultContract = useCakeVaultContract()\n  const { lastUpdated, setLastUpdated } = useLastUpdated()\n  useEffect(() => {\n    const checkApprovalStatus = async () => {\n      try {\n        const response = await cakeContract.methods.allowance(account, cakeVaultContract.options.address).call()\n        const currentAllowance = new BigNumber(response)\n        setIsVaultApproved(currentAllowance.gt(0))\n      } catch (error) {\n        setIsVaultApproved(false)\n      }\n    }\n\n    checkApprovalStatus()\n  }, [account, cakeContract, cakeVaultContract, lastUpdated])\n\n  return { isVaultApproved, setLastUpdated }\n}\n\n// Approve the lottery\nexport const useLotteryApprove = () => {\n  const { account } = useWeb3React()\n  const cakeContract = useCake()\n  const lotteryContract = useLottery()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(cakeContract, lotteryContract, account)\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, cakeContract, lotteryContract])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve an IFO\nexport const useIfoApprove = (tokenContract: Contract, spenderAddress: string) => {\n  const { account } = useWeb3React()\n  const onApprove = useCallback(async () => {\n    const tx = await tokenContract.methods.approve(spenderAddress, ethers.constants.MaxUint256).send({ from: account })\n    return tx\n  }, [account, spenderAddress, tokenContract])\n\n  return onApprove\n}\n","import identity from 'lodash/identity'\nimport { useEffect, useState } from 'react'\n\ninterface UsePersistStateOptions {\n  localStorageKey: string\n  hydrate?: (value: any) => any\n  dehydrate?: (value: any) => any\n}\n\nconst defaultOptions = {\n  hydrate: identity,\n  dehydrate: identity,\n}\n\n/**\n * Same as \"useState\" but saves the value to local storage each time it changes\n */\nconst usePersistState = (initialValue: any, userOptions: UsePersistStateOptions) => {\n  const { localStorageKey, hydrate, dehydrate } = { ...defaultOptions, ...userOptions }\n  const [value, setValue] = useState(() => {\n    try {\n      const valueFromLS = localStorage.getItem(localStorageKey)\n\n      return valueFromLS ? hydrate(JSON.parse(valueFromLS)) : initialValue\n    } catch (error) {\n      return initialValue\n    }\n  })\n\n  useEffect(() => {\n    localStorage.setItem(localStorageKey, JSON.stringify(dehydrate(value)))\n  }, [value, localStorageKey, dehydrate])\n\n  return [value, setValue]\n}\n\nexport default usePersistState\n","import BigNumber from 'bignumber.js'\nimport { DEFAULT_GAS_LIMIT, DEFAULT_TOKEN_DECIMAL } from 'config'\nimport { ethers } from 'ethers'\nimport { Pair, TokenAmount, Token } from '@pancakeswap-libs/sdk'\nimport { getLpContract, getMasterchefContract } from 'utils/contractHelpers'\nimport farms from 'config/constants/farms'\nimport { getAddress, getCakeAddress } from 'utils/addressHelpers'\nimport tokens from 'config/constants/tokens'\nimport pools from 'config/constants/pools'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport { multicallv2 } from './multicall'\nimport { getWeb3WithArchivedNodeProvider } from './web3'\nimport { getBalanceAmount } from './formatBalance'\nimport { BIG_TEN, BIG_ZERO } from './bigNumber'\n\n\nexport const approve = async (lpContract, masterChefContract, account) => {\n  return lpContract.methods\n    .approve(masterChefContract.options.address, ethers.constants.MaxUint256)\n    .send({ from: account })\n}\n\nexport const stake = async (masterChefContract, pid, amount, account) => {\n  // if (pid === 0) {\n  //   return masterChefContract.methods\n  //     .enterStaking(new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString())\n  //     .send({ from: account, gas: DEFAULT_GAS_LIMIT })\n  //     .on('transactionHash', (tx) => {\n  //       return tx.transactionHash\n  //     })\n  // }\n\n  // the third argument of deposit() i.e referrer is supposed to be the referrer account\n  const referrer = \"0xFd0522277d30bB29fB69268987019F254B98519c\"\n  return masterChefContract.methods\n    .deposit(pid, new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString(), referrer)\n    .send({ from: account, gas: DEFAULT_GAS_LIMIT })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousStake = async (sousChefContract, amount, decimals = 18, account) => {\n  return sousChefContract.methods\n    .deposit(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString())\n    .send({ from: account, gas: DEFAULT_GAS_LIMIT })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousStakeBnb = async (sousChefContract, amount, account) => {\n  return sousChefContract.methods\n    .deposit()\n    .send({\n      from: account,\n      gas: DEFAULT_GAS_LIMIT,\n      value: new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString(),\n    })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const unstake = async (masterChefContract, pid, amount, account) => {\n  // if (pid === 0) {\n  //   return masterChefContract.methods\n  //     .leaveStaking(new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString())\n  //     .send({ from: account, gas: DEFAULT_GAS_LIMIT })\n  //     .on('transactionHash', (tx) => {\n  //       return tx.transactionHash\n  //     })\n  // }\n\n  return masterChefContract.methods\n    .withdraw(pid, new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString())\n    .send({ from: account, gas: DEFAULT_GAS_LIMIT })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousUnstake = async (sousChefContract, amount, decimals, account) => {\n  return sousChefContract.methods\n    .withdraw(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString())\n    .send({ from: account, gas: DEFAULT_GAS_LIMIT })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousEmergencyUnstake = async (sousChefContract, account) => {\n  return sousChefContract.methods\n    .emergencyWithdraw()\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const harvest = async (masterChefContract, pid, account) => {\n  // if (pid === 0) {\n  //   return masterChefContract.methods\n  //     .leaveStaking('0')\n  //     .send({ from: account, gas: DEFAULT_GAS_LIMIT })\n  //     .on('transactionHash', (tx) => {\n  //       return tx.transactionHash\n  //     })\n  // }\n  const referrer = \"0xFd0522277d30bB29fB69268987019F254B98519c\"\n\n\n  return masterChefContract.methods\n    .deposit(pid, '0', referrer)\n    .send({ from: account, gas: DEFAULT_GAS_LIMIT })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const soushHarvest = async (sousChefContract, account) => {\n  return sousChefContract.methods\n    .deposit('0')\n    .send({ from: account, gas: DEFAULT_GAS_LIMIT })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const soushHarvestBnb = async (sousChefContract, account) => {\n  return sousChefContract.methods\n    .deposit()\n    .send({ from: account, gas: DEFAULT_GAS_LIMIT, value: BIG_ZERO })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nconst chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\nconst cakeBnbPid = 1\nconst cakeBnbFarm = farms.find((farm) => farm.pid === cakeBnbPid)\n\nconst CAKE_TOKEN = new Token(chainId, getCakeAddress(), 18)\nconst WBNB_TOKEN = new Token(chainId, tokens.wbnb.address[chainId], 18)\nconst CAKE_BNB_TOKEN = new Token(chainId, getAddress(cakeBnbFarm.lpAddresses), 18)\n\n/**\n * Returns the total TTNP staked in the TTNP-BNB LP\n */\nexport const getUserStakeInCakeBnbLp = async (account: string, block?: number) => {\n  try {\n    const archivedWeb3 = getWeb3WithArchivedNodeProvider()\n    const masterContract = getMasterchefContract(archivedWeb3)\n    const cakeBnbContract = getLpContract(getAddress(cakeBnbFarm.lpAddresses), archivedWeb3)\n    const totalSupplyLP = await cakeBnbContract.methods.totalSupply().call(undefined, block)\n    const reservesLP = await cakeBnbContract.methods.getReserves().call(undefined, block)\n    const cakeBnbBalance = await masterContract.methods.userInfo(cakeBnbPid, account).call(undefined, block)\n\n    const pair: Pair = new Pair(\n      new TokenAmount(CAKE_TOKEN, reservesLP._reserve0.toString()),\n      new TokenAmount(WBNB_TOKEN, reservesLP._reserve1.toString()),\n    )\n    const cakeLPBalance = pair.getLiquidityValue(\n      pair.token0,\n      new TokenAmount(CAKE_BNB_TOKEN, totalSupplyLP.toString()),\n      new TokenAmount(CAKE_BNB_TOKEN, cakeBnbBalance.amount.toString()),\n      false,\n    )\n\n    return new BigNumber(cakeLPBalance.toSignificant(18))\n  } catch (error) {\n    console.error(`CAKE-BNB LP error: ${error}`)\n    return BIG_ZERO\n  }\n}\n\n/**\n * Gets the TTNP staked in the main pool\n */\nexport const getUserStakeInCakePool = async (account: string, block?: number) => {\n  try {\n    const archivedWeb3 = getWeb3WithArchivedNodeProvider()\n    const masterContract = getMasterchefContract(archivedWeb3)\n    const response = await masterContract.methods.userInfo(0, account).call(undefined, block)\n\n    return getBalanceAmount(new BigNumber(response.amount))\n  } catch (error) {\n    console.error('Error getting stake in TTNP pool', error)\n    return BIG_ZERO\n  }\n}\n\n/**\n * Returns total staked value of active pools\n */\nexport const getUserStakeInPools = async (account: string, block?: number) => {\n  try {\n    const multicallOptions = {\n      web3: getWeb3WithArchivedNodeProvider(),\n      blockNumber: block,\n      requireSuccess: false,\n    }\n    const eligiblePools = pools\n      .filter((pool) => pool.sousId !== 0)\n      .filter((pool) => pool.isFinished === false || pool.isFinished === undefined)\n\n    // Get the ending block is eligible pools\n    const endBlockCalls = eligiblePools.map((eligiblePool) => ({\n      address: getAddress(eligiblePool.contractAddress),\n      name: 'bonusEndBlock',\n    }))\n    const startBlockCalls = eligiblePools.map((eligiblePool) => ({\n      address: getAddress(eligiblePool.contractAddress),\n      name: 'startBlock',\n    }))\n    const endBlocks = await multicallv2(sousChefABI, endBlockCalls, multicallOptions)\n    const startBlocks = await multicallv2(sousChefABI, startBlockCalls, multicallOptions)\n\n    // Filter out pools that have ended\n    const activePools = eligiblePools.filter((eligiblePool, index) => {\n      const endBlock = new BigNumber(endBlocks[index])\n      const startBlock = new BigNumber(startBlocks[index])\n\n      return startBlock.lte(block) && endBlock.gte(block)\n    })\n\n    // Get the user info of each pool\n    const userInfoCalls = activePools.map((activePool) => ({\n      address: getAddress(activePool.contractAddress),\n      name: 'userInfo',\n      params: [account],\n    }))\n    const userInfos = await multicallv2(sousChefABI, userInfoCalls, multicallOptions)\n\n    return userInfos.reduce((accum: BigNumber, userInfo) => {\n      return accum.plus(new BigNumber(userInfo.amount._hex))\n    }, new BigNumber(0))\n  } catch (error) {\n    console.error('Error fetching staked values:', error)\n    return BIG_ZERO\n  }\n}\n","import React from 'react'\nimport { Tag, VerifiedIcon, CommunityIcon, BinanceIcon, RefreshIcon, AutoRenewIcon, TagProps } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst CoreTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"primary\" outline startIcon={<VerifiedIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\n      {t('Core')}\n    </Tag>\n  )\n}\n\nconst CommunityTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"failure\" outline startIcon={<CommunityIcon width=\"18px\" color=\"failure\" mr=\"4px\" />} {...props}>\n      {t('Community')}\n    </Tag>\n  )\n}\n\nconst BinanceTag: React.FC<TagProps> = (props) => {\n  return (\n    <Tag variant=\"binance\" outline startIcon={<BinanceIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\n      Binance\n    </Tag>\n  )\n}\n\nconst DualTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"textSubtle\" outline {...props}>\n      {t('Dual')}\n    </Tag>\n  )\n}\n\nconst ManualPoolTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"primary\" outline startIcon={<RefreshIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\n      {t('Manual')}\n    </Tag>\n  )\n}\n\nconst CompoundingPoolTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"success\" outline startIcon={<AutoRenewIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\n      {t('Auto')}\n    </Tag>\n  )\n}\n\nexport { CoreTag, CommunityTag, BinanceTag, DualTag, ManualPoolTag, CompoundingPoolTag }\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { updateUserStakedBalance, updateUserBalance } from 'state/actions'\nimport { stake, sousStake, sousStakeBnb } from 'utils/callHelpers'\nimport { useMasterchef, useSousChef } from './useContract'\n\nconst useStake = (pid: number) => {\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n\n  const handleStake = useCallback(\n    async (amount: string) => {\n      const txHash = await stake(masterChefContract, pid, amount, account)\n      console.info(txHash)\n    },\n    [account, masterChefContract, pid],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport const useSousStake = (sousId: number, isUsingBnb = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleStake = useCallback(\n    async (amount: string, decimals: number) => {\n      if (sousId === 0) {\n        await stake(masterChefContract, 0, amount, account)\n      } else if (isUsingBnb) {\n        await sousStakeBnb(sousChefContract, amount, account)\n      } else {\n        await sousStake(sousChefContract, amount, decimals, account)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n    },\n    [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport default useStake\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { updateUserStakedBalance, updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { unstake, sousUnstake, sousEmergencyUnstake } from 'utils/callHelpers'\nimport { useMasterchef, useSousChef } from './useContract'\n\nconst useUnstake = (pid: number) => {\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n\n  const handleUnstake = useCallback(\n    async (amount: string) => {\n      const txHash = await unstake(masterChefContract, pid, amount, account)\n      console.info(txHash)\n    },\n    [account, masterChefContract, pid],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport const useSousUnstake = (sousId, enableEmergencyWithdraw = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleUnstake = useCallback(\n    async (amount: string, decimals: number) => {\n      if (sousId === 0) {\n        const txHash = await unstake(masterChefContract, 0, amount, account)\n        console.info(txHash)\n      } else if (enableEmergencyWithdraw) {\n        const txHash = await sousEmergencyUnstake(sousChefContract, account)\n        console.info(txHash)\n      } else {\n        const txHash = await sousUnstake(sousChefContract, amount, decimals, account)\n        console.info(txHash)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n      dispatch(updateUserPendingReward(sousId, account))\n    },\n    [account, dispatch, enableEmergencyWithdraw, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport default useUnstake\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { soushHarvest, soushHarvestBnb, harvest } from 'utils/callHelpers'\nimport { useMasterchef, useSousChef } from './useContract'\n\nexport const useHarvest = (farmPid: number) => {\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    const txHash = await harvest(masterChefContract, farmPid, account)\n    return txHash\n  }, [account, farmPid, masterChefContract])\n\n  return { onReward: handleHarvest }\n}\n\nexport const useSousHarvest = (sousId, isUsingBnb = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const sousChefContract = useSousChef(sousId)\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    if (sousId === 0) {\n      await harvest(masterChefContract, 0, account)\n    } else if (isUsingBnb) {\n      await soushHarvestBnb(sousChefContract, account)\n    } else {\n      await soushHarvest(sousChefContract, account)\n    }\n    dispatch(updateUserPendingReward(sousId, account))\n    dispatch(updateUserBalance(sousId, account))\n  }, [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId])\n\n  return { onReward: handleHarvest }\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Modal, Text, LinkExternal, Flex, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { tokenEarnedPerThousandDollarsCompounding, getRoi } from 'utils/compoundApyHelpers'\n\ninterface ApyCalculatorModalProps {\n  onDismiss?: () => void\n  tokenPrice: number\n  apr: number\n  linkLabel: string\n  linkHref: string\n  earningTokenSymbol?: string\n  roundingDecimals?: number\n  compoundFrequency?: number\n  performanceFee?: number\n}\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, auto);\n  grid-template-rows: repeat(4, auto);\n  margin-bottom: 12px;\n`\n\nconst GridItem = styled.div``\n\nconst GridHeaderItem = styled.div`\n  max-width: 180px;\n`\n\nconst ApyCalculatorModal: React.FC<ApyCalculatorModalProps> = ({\n  onDismiss,\n  tokenPrice,\n  apr,\n  linkLabel,\n  linkHref,\n  earningTokenSymbol = 'TTNP',\n  roundingDecimals = 2,\n  compoundFrequency = 1,\n  performanceFee = 0,\n}) => {\n  const { t } = useTranslation()\n  const oneThousandDollarsWorthOfToken = 1000 / tokenPrice\n\n  const tokenEarnedPerThousand1D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 1,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n  const tokenEarnedPerThousand7D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 7,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n  const tokenEarnedPerThousand30D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 30,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n  const tokenEarnedPerThousand365D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 365,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n\n  return (\n    <Modal title={t('ROI')} onDismiss={onDismiss}>\n      <Grid>\n        <GridHeaderItem>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"12px\">\n            {t('Timeframe')}\n          </Text>\n        </GridHeaderItem>\n        <GridHeaderItem>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mr=\"12px\" ml=\"12px\" mb=\"12px\">\n            {t('ROI')}\n          </Text>\n        </GridHeaderItem>\n        <GridHeaderItem>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"12px\">\n            {t('%symbol% per $1,000', { symbol: earningTokenSymbol })}\n          </Text>\n        </GridHeaderItem>\n        {/* 1 day row */}\n        <GridItem>\n          <Text>{t('%num%d', { num: 1 })}</Text>\n        </GridItem>\n        <GridItem>\n          <Text mr=\"12px\" ml=\"12px\">\n            {getRoi({ amountEarned: tokenEarnedPerThousand1D, amountInvested: oneThousandDollarsWorthOfToken }).toFixed(\n              roundingDecimals,\n            )}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text>{tokenEarnedPerThousand1D}</Text>\n        </GridItem>\n        {/* 7 day row */}\n        <GridItem>\n          <Text>{t('%num%d', { num: 7 })}</Text>\n        </GridItem>\n        <GridItem>\n          <Text mr=\"12px\" ml=\"12px\">\n            {getRoi({ amountEarned: tokenEarnedPerThousand7D, amountInvested: oneThousandDollarsWorthOfToken }).toFixed(\n              roundingDecimals,\n            )}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text>{tokenEarnedPerThousand7D}</Text>\n        </GridItem>\n        {/* 30 day row */}\n        <GridItem>\n          <Text>{t('%num%d', { num: 30 })}</Text>\n        </GridItem>\n        <GridItem>\n          <Text mr=\"12px\" ml=\"12px\">\n            {getRoi({\n              amountEarned: tokenEarnedPerThousand30D,\n              amountInvested: oneThousandDollarsWorthOfToken,\n            }).toFixed(roundingDecimals)}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text>{tokenEarnedPerThousand30D}</Text>\n        </GridItem>\n        {/* 365 day / APY row */}\n        <GridItem style={{ maxWidth: '180px' }}>\n          <Text>{t('365d(APY)')}</Text>\n        </GridItem>\n        <GridItem>\n          <Text mr=\"12px\" ml=\"12px\">\n            {getRoi({\n              amountEarned: tokenEarnedPerThousand365D,\n              amountInvested: oneThousandDollarsWorthOfToken,\n            }).toFixed(roundingDecimals)}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text>{tokenEarnedPerThousand365D}</Text>\n        </GridItem>\n      </Grid>\n      <Flex justifyContent=\"center\">\n        <Box mb=\"28px\" maxWidth=\"280px\">\n          <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\">\n            {t(\n              'Calculated based on current rates. Compounding %freq%x daily. Rates are estimates provided for your convenience only, and by no means represent guaranteed returns.',\n              { freq: compoundFrequency.toLocaleString() },\n            )}\n          </Text>\n          {performanceFee > 0 && (\n            <Text mt=\"14px\" fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\">\n              {t('All estimated rates take into account this pool’s %fee%% performance fee', { fee: performanceFee })}\n            </Text>\n          )}\n        </Box>\n      </Flex>\n      <Flex justifyContent=\"center\">\n        <LinkExternal href={linkHref}>{linkLabel}</LinkExternal>\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default ApyCalculatorModal\n","import styled from 'styled-components'\n\nconst FlexLayout = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  & > * {\n    min-width: 280px;\n    max-width: 31.5%;\n    width: 100%;\n    margin: 0 8px;\n    margin-bottom: 32px;\n  }\n`\n\nexport default FlexLayout\n","export const Latinise = {\n  latin_map: {\n    τ: 't',\n    Τ: 'T',\n  },\n}\n\nexport const latinise = (input: string) => {\n  return input.replace(/[^A-Za-z0-9[\\] ]/g, (x) => Latinise.latin_map[x] || x)\n}\n","import React, { useState, useRef, useEffect } from 'react'\nimport styled, { css } from 'styled-components'\nimport { ArrowDropDownIcon, Text } from '@pancakeswap/uikit'\n\nconst DropDownHeader = styled.div`\n  width: 100%;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0px 16px;\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n  border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n  border-radius: 16px;\n  background: ${({ theme }) => theme.colors.input};\n  transition: border-radius 0.15s;\n`\n\nconst DropDownListContainer = styled.div`\n  min-width: 136px;\n  height: 0;\n  position: absolute;\n  overflow: hidden;\n  background: ${({ theme }) => theme.colors.input};\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n  transition: transform 0.15s, opacity 0.15s;\n  transform: scaleY(0);\n  transform-origin: top;\n  opacity: 0;\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n`\n\nconst DropDownContainer = styled.div<{ isOpen: boolean; width: number; height: number }>`\n  cursor: pointer;\n  width: ${({ width }) => width}px;\n  position: relative;\n  background: ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  height: 40px;\n  min-width: 136px;\n  user-select: none;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n\n  ${(props) =>\n    props.isOpen &&\n    css`\n      ${DropDownHeader} {\n        border-bottom: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\n        border-radius: 16px 16px 0 0;\n      }\n\n      ${DropDownListContainer} {\n        height: auto;\n        transform: scaleY(1);\n        opacity: 1;\n        border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        border-top-width: 0;\n        border-radius: 0 0 16px 16px;\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\n      }\n    `}\n\n  svg {\n    position: absolute;\n    right: 16px;\n    top: 50%;\n    transform: translateY(-50%);\n  }\n`\n\nconst DropDownList = styled.ul`\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n`\n\nconst ListItem = styled.li`\n  list-style: none;\n  padding: 8px 16px;\n  &:hover {\n    background: ${({ theme }) => theme.colors.inputSecondary};\n  }\n`\n\nexport interface SelectProps {\n  options: OptionProps[]\n  onChange?: (option: OptionProps) => void\n}\n\nexport interface OptionProps {\n  label: string\n  value: any\n}\n\nconst Select: React.FunctionComponent<SelectProps> = ({ options, onChange }) => {\n  const containerRef = useRef(null)\n  const dropdownRef = useRef(null)\n  const [isOpen, setIsOpen] = useState(false)\n  const [selectedOptionIndex, setSelectedOptionIndex] = useState(0)\n  const [containerSize, setContainerSize] = useState({ width: 0, height: 0 })\n\n  const toggling = () => setIsOpen(!isOpen)\n\n  const onOptionClicked = (selectedIndex: number) => () => {\n    setSelectedOptionIndex(selectedIndex)\n    setIsOpen(false)\n\n    if (onChange) {\n      onChange(options[selectedIndex])\n    }\n  }\n\n  useEffect(() => {\n    setContainerSize({\n      width: dropdownRef.current.offsetWidth, // Consider border\n      height: dropdownRef.current.offsetHeight,\n    })\n  }, [])\n\n  return (\n    <DropDownContainer isOpen={isOpen} ref={containerRef} {...containerSize}>\n      {containerSize.width !== 0 && (\n        <DropDownHeader onClick={toggling}>\n          <Text>{options[selectedOptionIndex].label}</Text>\n        </DropDownHeader>\n      )}\n      <ArrowDropDownIcon color=\"text\" onClick={toggling} />\n      <DropDownListContainer>\n        <DropDownList ref={dropdownRef}>\n          {options.map((option, index) =>\n            index !== selectedOptionIndex ? (\n              <ListItem onClick={onOptionClicked(index)} key={option.label}>\n                <Text>{option.label}</Text>\n              </ListItem>\n            ) : null,\n          )}\n        </DropDownList>\n      </DropDownListContainer>\n    </DropDownContainer>\n  )\n}\n\nexport default Select\n","import { useState, useEffect } from 'react'\n\n/**\n * Use this hook when you want to animate something when it appears on the screen (e.g. when some prop set to true)\n * but when its not on the screen you want it to be fully unmounted and not just hidden or height 0.\n * This is especially useful when you have a table of 100s rows and each row has expandable element that appears on click.\n * If you just set the expanding animation while keeping inactive elements mounted all those 100 elements will load the DOM,\n * and if they all receive updates via props you're looking at 100 DOM updates for hidden elements.\n * This hook \"shows\" element immediately when the isMounted is true\n * but keeps element mounted for delayTime to let unmounting animation happen, after which you unmount element completely.\n * delayTime should be the same as animation time in most cases.\n */\nconst useDelayedUnmount = (isMounted: boolean, delayTime: number) => {\n  const [shouldRender, setShouldRender] = useState(false)\n\n  useEffect(() => {\n    let timeoutId: ReturnType<typeof setTimeout>\n    if (isMounted && !shouldRender) {\n      setShouldRender(true)\n    } else if (!isMounted && shouldRender) {\n      timeoutId = setTimeout(() => setShouldRender(false), delayTime)\n    }\n    return () => clearTimeout(timeoutId)\n  }, [isMounted, delayTime, shouldRender])\n  return shouldRender\n}\n\nexport default useDelayedUnmount\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Box } from '@pancakeswap/uikit'\nimport Container from '../layout/Container'\n\nconst Outer = styled(Box)<{ background?: string }>`\n  background: ${({ theme, background }) => background || theme.colors.gradients.bubblegum};\n`\n\nconst Inner = styled(Container)`\n  padding-top: 32px;\n  padding-bottom: 32px;\n`\n\nconst PageHeader: React.FC<{ background?: string }> = ({ background, children, ...props }) => (\n  <Outer background={background} {...props}>\n    <Inner>{children}</Inner>\n  </Outer>\n)\n\nexport default PageHeader\n","import React, { useState, useMemo } from 'react'\nimport { Input } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport debounce from 'lodash/debounce'\nimport { useTranslation } from 'contexts/Localization'\n\nconst StyledInput = styled(Input)`\n  border-radius: 16px;\n  margin-left: auto;\n  ::placeholder {\n    color: #f7ad19;\n  }\n\n  :-ms-input-placeholder {\n    color: ${({ theme }) => theme.colors.primary};\n  }\n\n  ::-ms-input-placeholder {\n    color: ${({ theme }) => theme.colors.primary};\n  }\n`\n\nconst InputWrapper = styled.div`\n  position: relative;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    display: block;\n  }\n`\n\nconst Container = styled.div<{ toggled: boolean }>``\n\ninterface Props {\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void\n  placeholder?: string\n}\n\nconst SearchInput: React.FC<Props> = ({ onChange: onChangeCallback, placeholder = 'Search' }) => {\n  const [toggled, setToggled] = useState(false)\n  const [searchText, setSearchText] = useState('')\n\n  const { t } = useTranslation()\n\n  const debouncedOnChange = useMemo(\n    () => debounce((e: React.ChangeEvent<HTMLInputElement>) => onChangeCallback(e), 500),\n    [onChangeCallback],\n  )\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchText(e.target.value)\n    debouncedOnChange(e)\n  }\n\n  return (\n    <Container toggled={toggled}>\n      <InputWrapper>\n        <StyledInput\n          value={searchText}\n          onChange={onChange}\n          placeholder={t(placeholder)}\n          onBlur={() => setToggled(false)}\n        />\n      </InputWrapper>\n    </Container>\n  )\n}\n\nexport default SearchInput\n"],"sourceRoot":""}