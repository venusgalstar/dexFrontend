{"version":3,"sources":["config/constants/farms.ts","hooks/useRefresh.ts","utils/getRpcUrl.ts","config/constants/contracts.ts","utils/addressHelpers.ts","utils/bitKeepConnector.ts","utils/web3React.ts","config/constants/index.ts","config/constants/teams.ts","state/teams/helpers.ts","state/pools/helpers.ts","config/constants/campaigns.ts","hooks/useToast.ts","hooks/useAuth.ts","utils/collectibles.ts","config/constants/ifo.ts","state/block/index.ts","state/collectibles/index.ts","state/achievements/helpers.ts","state/achievements/index.ts","utils/farmsPriceHelpers.ts","contexts/ThemeContext.tsx","contexts/ToastsContext/Provider.tsx","hooks/useTabVisibility.ts","contexts/RefreshContext.tsx","utils/bigNumber.ts","utils/compoundApyHelpers.ts","utils/achievements.ts","state/predictions/index.ts","views/Pools/helpers.tsx","config/constants/meta.ts","components/layout/Page.tsx","hooks/useTheme.ts","components/layout/Container.tsx","utils/apr.ts","components/PageLoader.tsx","utils/wallet.ts","routerHistory.ts","config/constants/types.ts","config/constants/tokens.ts","utils/farmHelpers.ts","utils/settings.ts","utils/contractHelpers.ts","utils/multicall.ts","utils/formatBalance.ts","state/index.ts","config/constants/pools.ts","state/types.ts","utils/web3.ts","state/pools/fetchPools.ts","state/pools/fetchPoolsUser.ts","state/pools/fetchVaultPublic.ts","state/pools/fetchVaultUser.ts","state/pools/index.ts","state/predictions/helpers.ts","state/predictions/queries.ts","config/localization/languages.ts","config/index.ts","state/profile/helpers.ts","state/profile/getProfile.ts","state/profile/index.tsx","state/teams/index.tsx","config/constants/nfts.ts","state/hooks.ts","hooks/useEagerConnect.ts","style/Global.tsx","config/constants/chainName.ts","config/constants/chainLogos/BSCLogo.tsx","utils/getChainLogo.ts","utils/getChainName.ts","components/Menu/config.ts","components/Menu/index.tsx","components/SuspenseWithChunkError/index.tsx","components/ToastListener/index.tsx","components/EasterEgg/EasterEgg.tsx","App.tsx","Providers.tsx","index.tsx","utils/makeBatchRequest.ts","state/actions.ts","config/constants/endpoints.ts","contexts/Localization/helpers.ts","contexts/Localization/Provider.tsx","contexts/Localization/useTranslation.ts","config/constants/priceHelperLps.ts","state/farms/fetchPublicFarmData.ts","state/farms/fetchFarm.ts","state/farms/fetchFarms.ts","state/farms/fetchFarmsPrices.ts","state/farms/fetchFarmUser.ts","state/farms/index.ts"],"names":["farms","pid","lpSymbol","lpAddresses","97","56","token","tokens","soup","quoteToken","wbnb","bris","busd","tnd","useRefresh","useContext","RefreshContext","fastRefresh","fast","slowRefresh","slow","nodes","process","getNodeUrl","randomIndex","random","length","getAddress","address","MAINNET_CHAIN_ID","getCakeAddress","getMasterChefAddress","addresses","getMulticallAddress","getWbnbAddress","getLotteryAddress","getLotteryTicketAddress","getLotteryV2Address","getReferralAddress","getNewLotteryAddress","getPancakeProfileAddress","getPancakeRabbitsAddress","getBunnyFactoryAddress","getClaimRefundAddress","getPointCenterIfoAddress","getBunnySpecialAddress","getTradingCompetitionAddress","getEasterNftAddress","getCakeVaultAddress","getPredictionsAddress","getChainlinkOracleAddress","parseSendReturn","sendReturn","Object","prototype","hasOwnProperty","call","result","NoBitkeepProviderError","name","constructor","message","Error","UserRejectedRequestError","BitKeepConnector","kwargs","console","info","handleChainChanged","bind","handleAccountsChanged","handleClose","chainId","this","emitUpdate","provider","window","bitkeep","ethereum","accounts","emitDeactivate","account","code","reason","on","isBitKeep","autoRefreshOnNetworkChange","send","then","enable","method","isDapper","cachedResults","net_version","netVersion","networkVersion","_chainId","removeListener","AbstractConnector","rpcUrl","parseInt","injected","InjectedConnector","supportedChainIds","walletconnect","WalletConnectConnector","rpc","bridge","qrcode","pollingInterval","bscConnector","BscConnector","bitKeepConnector","connectorsByName","ConnectorNames","Injected","WalletConnect","BSC","BitKeep","getLibrary","teams","id","description","images","lg","md","sm","alt","ipfs","background","textColor","users","points","profileContract","getProfileContract","getTeam","teamId","a","methods","getTeamProfile","teamName","numberUsers","numberPoints","isJoinable","staticTeamInfo","teamsList","find","staticTeam","merge","getTeams","teamsById","reduce","accum","team","numberTeams","nbTeams","calls","i","push","makeBatchRequest","teamData","onChainTeamData","index","Number","transformUserData","userData","allowance","BigNumber","BIG_ZERO","stakingTokenBalance","stakedBalance","pendingReward","transformPool","pool","totalStaked","stakingLimit","rest","getTokenPricesFromFarm","prices","farm","quoteTokenAddress","toLocaleLowerCase","tokenAddress","busdPrice","toNumber","campaigns","type","title","badge","campaignMap","Map","forEach","campaign","set","useToast","toastContext","ToastsContext","undefined","useAuth","t","useTranslation","dispatch","useAppDispatch","useWeb3React","activate","deactivate","toastError","login","useCallback","connectorID","connector","error","UnsupportedChainIdError","setupNetwork","localStorage","removeItem","connectorLocalStorageKey","NoEthereumProviderError","NoBscProviderError","UserRejectedRequestErrorInjected","UserRejectedRequestErrorWalletConnect","walletConnectProvider","logout","profileClear","getItem","close","getIdentifierKeyFromAddress","nftAddress","nftSource","values","nftSources","nftSourceEntry","identifierKey","getTokenUrl","tokenUri","startsWith","IPFS_GATEWAY","slice","getAddressByType","getTokenUriData","tokenId","contract","getErc721Contract","tokenURI","fetch","uriDataResponse","ok","json","uriData","getNftByTokenId","Nfts","nft","includes","identifier","ifos","blockSlice","createSlice","initialState","currentBlock","initialBlock","reducers","setBlock","state","action","payload","actions","fetchWalletNfts","createAsyncThunk","nftSourcePromises","keys","map","nftSourceType","addressObj","getTokenIdAndData","tokenOfOwnerByIndex","walletNft","balanceOf","balanceOfResponse","nftDataFetchPromises","Promise","all","nftData","nftSourceData","flat","collectiblesSlice","isInitialized","isLoading","data","extraReducers","builder","addCase","pending","fulfilled","association","getUserPointIncreaseEvents","request","GRAPH_API_PROFILE","gql","toLowerCase","user","getAchievements","pointIncreaseEvents","userPoint","campaignMeta","get","campaignId","getAchievementTitle","getAchievementDescription","achievementSlice","addAchievement","addAchievements","setAchievements","clearAchievements","fetchAchievements","achievements","filterFarmsByQuoteToken","preferredQuoteTokens","preferredFarm","some","symbol","CACHE_KEY","ThemeContext","React","createContext","isDark","toggleTheme","ThemeContextProvider","children","useState","isDarkUserSetting","JSON","parse","setIsDark","Provider","value","prevState","setItem","stringify","theme","dark","light","ToastsProvider","toasts","setToasts","toast","prevToasts","kebabCase","currentToasts","filter","prevToast","clear","remove","toastTypes","DANGER","toastInfo","INFO","toastSuccess","SUCCESS","toastWarning","WARNING","useTabVisibility","tabVisibleRef","useRef","useEffect","onVisibilityChange","current","document","hidden","addEventListener","removeEventListener","RefreshContextProvider","setSlow","setFast","interval","setInterval","prev","clearInterval","BIG_ONE","BIG_NINE","BIG_TEN","tokenEarnedPerThousandDollarsCompounding","numberOfDays","farmApr","tokenPrice","roundingDecimals","compoundFrequency","performanceFee","timesCompounded","aprAsDecimal","daysAsDecimalOfYear","principal","finalAmount","parseFloat","toFixed","getRoi","amountEarned","amountInvested","key","getClaimableIfoData","ifoCampaigns","ifosList","ifoItem","ifoCampaignAddresses","pointCenterContract","getPointCenterIfoContract","checkClaimStatuses","claimStatuses","claimStatus","claimableIfoData","claimableIfoDataItem","has","ifoCampaign","status","PredictionStatus","INITIAL","isHistoryPaneOpen","isChartPaneOpen","isFetchingHistory","historyFilter","HistoryFilter","ALL","currentEpoch","currentRoundStartBlockNumber","intervalBlocks","bufferBlocks","minBetAmount","lastOraclePrice","toJSON","rounds","history","bets","fetchBet","getBet","response","bet","transformBetResponse","fetchRoundBet","roundId","getBetHistory","round","betResponses","betResponse","fetchCurrentBets","roundIds","round_in","fetchHistory","claimed","predictionsSlice","setPredictionStatus","setHistoryPaneState","setChartPaneState","setHistoryFilter","initialize","updateMarketData","market","newRoundData","makeRoundData","incomingCurrentRound","maxBy","epoch","newestRound","futureRound","transformRoundResponse","makeFutureRoundResponse","startBlock","paused","PAUSED","LIVE","setCurrentEpoch","markBetAsCollected","accountBets","markPositionAsEntered","setLastOraclePrice","betData","currentBet","rejected","convertSharesToCake","shares","cakePerFullShare","decimals","decimalsToRound","sharePriceNumber","getBalanceNumber","amountInCake","multipliedBy","cakeAsNumberBalance","cakeAsBigNumber","getDecimalAmount","cakeAsDisplayBalance","getFullDisplayBalance","convertCakeToShares","cake","amountInShares","dividedBy","sharesAsNumberBalance","sharesAsBigNumber","sharesAsDisplayBalance","getAprData","isAutoVault","earningTokenPrice","apr","isHighValueToken","Math","oneThousandDollarsWorthOfToken","tokenEarnedPerThousand365D","autoApr","log","getCakeVaultEarnings","cakeAtLastUserAction","userShares","pricePerFullShare","hasAutoEarnings","gt","autoCakeProfit","minus","autoCakeToDisplay","gte","autoUsdProfit","times","autoUsdToDisplay","getPoolBlockInfo","endBlock","isFinished","shouldShowBlockCountdown","Boolean","blocksUntilStart","max","blocksRemaining","hasPoolStarted","blocksToDisplay","DEFAULT_META","image","StyledPage","styled","Container","mediaQueries","PageMeta","pathname","useLocation","cakePriceUsd","usePriceCakeBusd","cakePriceUsdDisplay","toLocaleString","minimumFractionDigits","maximumFractionDigits","pageMeta","path","getCustomMeta","pageTitle","join","property","content","Page","props","useTheme","StyledThemeContext","div","getPoolApr","stakingTokenPrice","rewardTokenPrice","tokenPerBlock","totalRewardPricePerYear","BLOCKS_PER_YEAR","totalStakingTokenInPool","isNaN","isFinite","getFarmApr","poolWeight","poolLiquidityUsd","CAKE_PER_YEAR","Wrapper","PageLoader","getProvider","onto","params","toString","chainName","nativeCurrency","rpcUrls","blockExplorerUrls","BASE_BSC_SCAN_URL","registerToken","tokenSymbol","tokenDecimals","tokenImage","options","tokenAdded","createBrowserHistory","PoolIds","PoolCategory","NftType","bnb","projectLink","fswap","txl","cos","bunny","alice","for","bux","nuls","belt","ramp","bfi","dexe","bel","tpt","watch","xmark","bmxx","iotx","bor","bopen","dodo","swingby","bry","zee","swgb","swg","sfp","lina","lit","hget","bdo","egld","ust","wsote","front","helmet","btcst","bscx","ten","balbt","asr","atm","og","reef","ditto","juv","psg","vai","blink","unfi","twt","hard","broobee","stax","nar","nya","ctk","inj","sxp","alpha","xvs","sushi","comp","bifi","dusk","eth","beth","mamzn","mgoogl","mnflx","mtsla","ltc","usdc","dai","ada","band","dot","eos","link","usdt","btcb","xrp","atom","yfii","xtz","bch","yfi","uni","fil","bake","burger","bdigg","bbadger","trade","pnt","mir","pbtc","lto","pcws","zil","lien","swth","dft","gum","dego","nrv","easy","oddz","hoo","apys","bondly","tko","itam","arpa","eps","jgn","tlm","perl","alpa","hzn","suter","cgg","mix","hakka","xed","τbtc","alpaca","dfd","lmt","btt","trx","win","mcoin","math","kun","qsd","hyfi","oin","doge","fine","one","pmon","hotcross","τdoge","btr","ubxt","wmass","rfox","xend","cyc","chr","kalm","deri","well","popen","ez","vrt","tusd","mtrg","ktn","qkc","bcfx","mx","ata","mbox","boring","marsh","isArchivedPid","GAS_SETTINGS","default","DEFAULT_GAS_PRICE","reallyfast","getDefaultSettings","gasPrice","getStorageKey","getSettings","settingsFromLs","getContract","abi","web3","amountInGwei","_web3","web3NoAccount","TESTNET_CHAIN_ID","Contract","getBep20Contract","bep20Abi","erc721Abi","getLpContract","lpTokenAbi","getIfoV1Contract","ifoV1Abi","getIfoV2Contract","ifoV2Abi","getSouschefContract","config","poolsConfig","sousId","poolCategory","BINANCE","sousChefBnb","sousChef","contractAddress","getSouschefV2Contract","sousChefV2","pointCenterIfo","getCakeContract","cakeAbi","profileABI","getPancakeRabbitContract","pancakeRabbitsAbi","getBunnyFactoryContract","bunnyFactoryAbi","getBunnySpecialContract","bunnySpecialAbi","getNewLotteryContract","newlotteryAbi","getLotteryContract","lotteryAbi","getLotteryTicketContract","lotteryTicketAbi","getLotteryV2Contract","lotteryV2Abi","getReferralContract","referralAbi","getMasterchefContract","masterChef","getClaimRefundContract","claimRefundAbi","getTradingCompetitionContract","tradingCompetitionAbi","getEasterNftContract","easterNftAbi","getCakeVaultContract","cakeVaultAbi","getPredictionsContract","predictionsAbi","getChainlinkOracleContract","chainlinkOracleAbi","multicall","getWeb3NoAccount","multi","MultiCallAbi","itf","Interface","calldata","encodeFunctionData","aggregate","blockNumber","returnData","res","decodeFunctionResult","multicallv2","tryAggregate","requireSuccess","amount","pow","getBalanceAmount","balance","decimalsToAppear","formatNumber","number","minPrecision","maxPrecision","store","configureStore","devTools","reducer","achievementsReducer","block","blockReducer","farmsReducer","pools","poolsReducer","predictions","predictionsReducer","profile","profileReducer","teamsReducer","collectibles","collectiblesReducer","useDispatch","stakingToken","earningToken","CORE","harvest","sortOrder","BetPosition","RPC_URL","getRpcUrl","httpProvider","Web3","providers","HttpProvider","timeout","getWeb3WithArchivedNodeProvider","archivedHttpProvider","ARCHIVED_NODE","fetchPoolsBlockLimits","poolsWithEnd","p","callsStartBlock","poolConfig","callsEndBlock","sousChefABI","starts","ends","cakePoolConfig","fetchPoolsTotalStaking","nonBnbPools","bnbPool","callsNonBnbPools","callsBnbPools","cakeABI","nonBnbPoolsTotalStaked","wbnbABI","bnbPoolsTotalStaked","fetchPoolStakingLimit","sousContract","poolLimitPerUser","fetchPoolsStakingLimits","poolsWithStakingLimit","validPools","stakingLimitPromises","validPool","stakingLimits","bnbPools","nonMasterPools","masterChefContract","masterChefABI","fetchPoolsAllowance","erc20ABI","allowances","acc","fetchUserBalances","tokenBalancesRaw","tokenBalances","getBalance","bnbBalance","bnbBalances","fetchUserStakeBalances","userInfo","stakedBalances","_hex","masterPoolAmount","0","fetchUserPendingRewards","pendingRewards","pendingBris","cakeVaultContract","fetchPublicVaultData","getPricePerFullShare","totalShares","calculateHarvestBrisRewards","calculateTotalPendingBrisRewards","sharePrice","estimatedCakeBountyReward","totalPendingCakeHarvest","totalSharesAsBigNumber","sharePriceAsBigNumber","totalCakeInVaultEstimate","totalCakeInVault","fetchVaultFees","callFee","withdrawFee","withdrawFeePeriod","withdrawalFee","withdrawalFeePeriod","fetchVaultUser","userContractResponse","lastDepositedTime","lastUserActionTime","brisAtLastUserAction","userDataLoaded","cakeVault","fees","fetchPoolsPublicDataAsync","getState","blockLimits","totalStakings","liveData","blockLimit","entry","totalStaking","isPoolEndBlockExceeded","isPoolFinished","stakingTokenAddress","earningTokenAddress","setPoolsPublicData","fetchPoolsStakingLimitsAsync","stakingLimitData","fetchPoolsUserDataAsync","stakingTokenBalances","setPoolsUserData","updateUserAllowance","updatePoolsUserData","field","updateUserBalance","updateUserStakedBalance","updateUserPendingReward","fetchCakeVaultPublicData","publicVaultInfo","fetchCakeVaultFees","vaultFees","fetchCakeVaultUserData","PoolsSlice","livePoolsData","livePoolData","userPoolData","findIndex","Result","numberOrNull","valueNum","failed","startAt","lockAt","lockBlock","lockPrice","closePrice","totalBets","totalAmount","bearBets","bullBets","bearAmount","bullAmount","position","hash","BULL","BEAR","claimedHash","totalBNB","roundResponse","positionResponse","getRoundResult","CANCELED","roundResultPosition","WIN","LOSE","getCanClaim","getUnclaimedWinningBets","getStaticPredictionsData","isPaused","getMarketData","GRAPH_API_PREDICTION","marketResponse","where","first","skip","betId","EN","locale","language","languages","languageList","EXPONENTIAL_AT","DECIMAL_PLACES","BSC_BLOCK_TIME","CAKE_PER_BLOCK","BASE_URL","BASE_EXCHANGE_URL","BASE_ADD_LIQUIDITY_URL","LOTTERY_MAX_NUMBER_OF_TICKETS","LOTTERY_TICKET_PRICE","DEFAULT_TOKEN_DECIMAL","DEFAULT_GAS_LIMIT","transformProfileResponse","profileResponse","userId","isActive","getUsername","username","getProfile","hasRegistered","getUserProfile","Cookies","avatar","domain","secure","expires","profileSlice","profileFetchStart","profileFetchSucceeded","_state","profileFetchFailed","addPoints","fetchProfile","teamsSlice","fetchStart","fetchFailed","teamFetchSucceeded","teamsFetchSucceeded","fetchTeam","fetchTeams","PANCAKE","MIXIE","variationId","video","webm","mp4","blur","usePollFarmsData","includeArchive","pids","farmsConfig","nonArchivedFarms","farmToFetch","fetchFarmsPublicDataAsync","fetchFarmUserDataAsync","usePollCoreFarmData","usePollBlockNumber","getBlockNumber","useFarms","useSelector","useFarmFromPid","f","useFarmUser","tokenBalance","earnings","useBusdPriceFromPid","useLpTokenPrice","farmTokenPriceInUsd","lpTokenPrice","lpTotalSupply","lpTotalInQuoteToken","overallValueOfAllTokensInFarm","tokenAmountTotal","totalLpTokens","useFetchPublicPoolsData","fetchPoolsPublicData","usePools","useFetchCakeVault","useCakeVault","totalSharesAsString","pricePerFullShareAsString","totalCakeInVaultAsString","estimatedCakeBountyRewardAsString","totalPendingCakeHarvestAsString","userSharesAsString","cakeAtLastUserActionAsString","useMemo","useFetchProfile","useProfile","hasProfile","useTeam","useTeams","useFetchAchievements","useAchievements","usePriceBnbBusd","bnbBusdFarm","cakeBnbFarm","useBlock","useInitialBlock","useIsHistoryPaneOpen","useIsChartPaneOpen","useGetRounds","useGetSortedRounds","roundData","orderBy","useGetCurrentEpoch","useGetIntervalBlocks","useGetTotalIntervalBlocks","useGetPredictionsStatus","useGetHistoryFilter","useGetCurrentRoundBlockNumber","useGetMinBetAmount","useGetIsFetchingHistory","useGetHistoryByAccount","useGetBetByRoundId","useBetCanClaim","useGetLastOraclePrice","useGetCollectibles","identifiers","tokenIds","nftsInWallet","_binanceChainListener","resolve","defineProperty","bsc","useEagerConnect","connectorId","isConnectorBinanceChain","isBinanceChainDefined","Reflect","GlobalStyle","createGlobalStyle","colors","shortName","chainIdHex","networkId","logo","width","height","viewBox","fill","xmlns","opacity","d","fillRule","clipRule","getChainLogo","getChainName","label","icon","href","items","menuStatus","Menu","currentLanguage","setLanguage","netLogo","netName","platform","currentLang","langs","setLang","links","profileLink","noProfileLink","showPip","SuspenseWithChunkError","hasError","isJsChunkLoadError","isCssChunkLoadError","isChunkLoadError","isRecoveringFromChunkError","nextState","replaceState","location","reload","fallback","Component","ToastListener","onRemove","EasterEgg","show","setShow","startFalling","useKonamiCheatCode","onAnimationEnd","memo","Home","lazy","Farms","Pools","DefiZap","Lottery","Referral","Ifos","NotFound","Collectibles","Teams","Team","Profile","TradingCompetition","Predictions","App","Global","exact","to","component","iterations","Providers","ReactDOM","render","StrictMode","getElementById","batch","BatchRequest","promises","reject","add","err","execute","LS_KEY","fetchLocale","getLanguageCodeFromLS","isFetching","languageMap","translations","LanguageContext","LanguageProvider","codeFromStorage","setState","enLocale","currentLocale","fetchInitialLocales","translate","translatedText","match","interpolatedText","dataKey","templateKey","RegExp","replace","languageContext","priceHelperLps","fetchFarm","lpAddress","erc20","tokenBalanceLP","quoteTokenBalanceLP","lpTokenBalanceMC","quoteTokenDecimals","lpTokenRatio","quoteTokenAmountTotal","tokenAmountMc","quoteTokenAmountMc","masterchefABI","totalAllocPoint","allocPoint","tokenPriceVsQuote","multiplier","fetchPublicFarmData","farmPublicData","fetchFarms","farmsToFetch","farmConfig","getFarmFromTokenSymbol","farmsWithTokenSymbol","getFarmBaseTokenPrice","quoteTokenFarm","bnbPriceBusd","hasTokenPriceVsQuote","quoteTokenInBusd","getFarmQuoteTokenPrice","fetchFarmsPrices","farmsWithPrices","baseTokenPrice","quoteTokenPrice","fetchFarmUserAllowances","masterChefAddress","rawLpAllowances","parsedLpAllowances","lpBalance","fetchFarmUserTokenBalances","rawTokenBalances","parsedTokenBalances","fetchFarmUserStakedBalances","rawStakedBalances","parsedStakedBalances","fetchFarmUserEarnings","rawEarnings","parsedEarnings","loadArchivedFarmsData","farmsWithPriceHelpers","concat","priceHelperLpsConfig","farmsWithoutHelperLps","userFarmAllowances","userFarmTokenBalances","userStakedBalances","userFarmEarnings","farmAllowance","farmsSlice","setLoadArchivedFarmsData","liveFarmData","farmData","userDataEl"],"mappings":"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C,MAAO,WACPC,MAAO,oBAET,CACEnE,GAAI,YACJiE,KAAM,MACNC,MAAO,mBACPC,MAAO,eAET,CACEnE,GAAI,YACJiE,KAAM,MACNC,MAAO,OACPC,MAAO,gBAET,CACEnE,GAAI,YACJiE,KAAM,MACNC,MAAO,aACPC,MAAO,iBAET,CACEnE,GAAI,YACJiE,KAAM,MACNC,MAAO,QACPC,MAAO,eAET,CACEnE,GAAI,YACJiE,KAAM,MACNC,MAAO,UACPC,MAAO,iBAET,CACEnE,GAAI,YACJiE,KAAM,MACNC,MAAO,SACPC,MAAO,kBAET,CACEnE,GAAI,YACJiE,KAAM,MACNC,MAAO,QACPC,MAAO,eAET,CACEnE,GAAI,YACJiE,KAAM,MACNC,MAAO,QACPC,MAAO,iBAET,CACEnE,GAAI,YACJiE,KAAM,MACNC,MAAO,QACPC,MAAO,eAET,CACEnE,GAAI,YACJiE,KAAM,aACNC,MAAO,wBACPC,MAAO,4BAET,CACEnE,GAAI,YACJiE,KAAM,aACNC,MAAO,uBACPC,MAAO,2BAET,CACEnE,GAAI,YACJiE,KAAM,aACNC,MAAO,uBACPC,MAAO,2BAET,CACEnE,GAAI,YACJiE,KAAM,aACNC,MAAO,uBACPC,MAAO,2BAET,CACEnE,GAAI,YACJiE,KAAM,aACNC,MAAO,2BACPC,MAAO,+BAET,CACEnE,GAAI,YACJiE,KAAM,aACNC,MAAO,0BACPC,MAAO,8BAET,CACEnE,GAAI,YACJiE,KAAM,aACNC,MAAO,yBACPC,MAAO,6BAET,CACEnE,GAAI,YACJiE,KAAM,aACNC,MAAO,yBACPC,MAAO,6BAET,CACEnE,GAAI,YACJiE,KAAM,aACNC,MAAO,yBACPC,MAAO,6BAET,CACEnE,GAAI,YACJiE,KAAM,aACNC,MAAO,6BACPC,MAAO,iCAET,CACEnE,GAAI,YACJiE,KAAM,aACNC,MAAO,0BACPC,MAAO,8BAET,CACEnE,GAAI,YACJiE,KAAM,aACNC,MAAO,yBACPC,MAAO,6BAET,CACEnE,GAAI,YACJiE,KAAM,aACNC,MAAO,yBACPC,MAAO,6BAET,CACEnE,GAAI,YACJiE,KAA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","file":"static/js/main.b35a5f51.chunk.js","sourcesContent":["import tokens from './tokens'\nimport { FarmConfig } from './types'\n\nconst farms: FarmConfig[] = [\n  /**\n   * These 3 farms (PID 0, 251, 252) should always be at the top of the file.\n   */\n  {\n    pid: 0,\n    lpSymbol: 'BRIS',\n    lpAddresses: {\n      97: '',\n      56: '0x79De52900178bD90c98E278cC30A635E65B18B1A',\n    },\n    token: tokens.soup,\n    quoteToken: tokens.wbnb,\n  },\n  // {\n  //   pid: 7,\n  //   lpSymbol: 'BRIS-USDT LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x1b92FED083cFcd7158f37E4d95055Be0AEB51c59',\n  //   },\n  //   token: tokens.bris,\n  //   quoteToken: tokens.wbnb,\n  // },\n  {\n    pid: 1,\n    lpSymbol: 'BRIS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8B3b22B12bF85F8bC1C6e17Bd09329FbAaFF5f7D',\n    },\n    token: tokens.bris,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 2,\n    lpSymbol: 'BRIS-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x9ED391218177B6F498625Bf58b8F1c38612630FC',\n    },\n    token: tokens.bris,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 3,\n    lpSymbol: 'BUSD-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x5E7239dFc60D54a4c469bfb3a1804C27a4A214D5',\n    },\n    token: tokens.busd,\n    quoteToken: tokens.wbnb,\n  },\n\n  {\n    pid: 4,\n    lpSymbol: 'TND-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x5E270C50F392aeFC394D8Dad644Fb4ce07a8cc58',\n    },\n    token: tokens.tnd,\n    quoteToken: tokens.wbnb,\n  },\n  \n//   /**\n//    * V3 by order of release (some may be out of PID order due to multiplier boost)\n//    */\n//   {\n//     pid: 343,\n//     lpSymbol: 'ODDZ-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x3c2c77353E2F6AC1578807b6b2336Bf3a3CbB014',\n//     },\n//     token: tokens.oddz,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 409,\n//     lpSymbol: 'ETH-USDC LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xEa26B78255Df2bBC31C1eBf60010D78670185bD0',\n//     },\n//     token: tokens.eth,\n//     quoteToken: tokens.usdc,\n//   },\n//   {\n//     pid: 408,\n//     lpSymbol: 'BTCB-ETH LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xD171B26E4484402de70e3Ea256bE5A2630d7e88D',\n//     },\n//     token: tokens.btcb,\n//     quoteToken: tokens.eth,\n//   },\n//   {\n//     pid: 347,\n//     lpSymbol: 'BONDLY-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xb8b4383B49d451BBeA63BC4421466E1086da6f18',\n//     },\n//     token: tokens.bondly,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 407,\n//     lpSymbol: 'MARSH-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x222f93187f15f354d41ff6a7703ef7e18cdd5103',\n//     },\n//     token: tokens.marsh,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 406,\n//     lpSymbol: 'BORING-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xDfA808Da5CFB9ABA5Fb3748FF85888F79174F378',\n//     },\n//     token: tokens.boring,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 405,\n//     lpSymbol: 'MBOX-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x8FA59693458289914dB0097F5F366d771B7a7C3F',\n//     },\n//     token: tokens.mbox,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 404,\n//     lpSymbol: 'ATA-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xef7767677867552cfa699148b96a03358a9be779',\n//     },\n//     token: tokens.ata,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 403,\n//     lpSymbol: 'MX-BUSD LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x41f049d990d38305504631c9835f6f856bf1ba67',\n//     },\n//     token: tokens.mx,\n//     quoteToken: tokens.busd,\n//   },\n//   {\n//     pid: 402,\n//     lpSymbol: 'bCFX-BUSD LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xA0387eBeA6be90849c2261b911fBBD52B4C9eAC4',\n//     },\n//     token: tokens.bcfx,\n//     quoteToken: tokens.busd,\n//   },\n//   {\n//     pid: 401,\n//     lpSymbol: 'QKC-BUSD LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x8853e3309a31583ea438f7704681f46f0d4d909b',\n//     },\n//     token: tokens.qkc,\n//     quoteToken: tokens.busd,\n//   },\n//   {\n//     pid: 400,\n//     lpSymbol: 'KTN-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x48028de4a9b0d3d91180333d796021ec7757ba1b',\n//     },\n//     token: tokens.ktn,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 399,\n//     lpSymbol: 'MTRG-BUSD LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x4dcA4D427511bC327639b222DA18FA5e334F686F',\n//     },\n//     token: tokens.mtrg,\n//     quoteToken: tokens.busd,\n//   },\n//   {\n//     pid: 398,\n//     lpSymbol: 'SWG-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x226af4e918fcf3e62e5eeec867a3e78aaa7bb01d',\n//     },\n//     token: tokens.swg,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 397,\n//     lpSymbol: 'TUSD-BUSD LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x2e28b9b74d6d99d4697e913b82b41ef1cac51c6c',\n//     },\n//     token: tokens.tusd,\n//     quoteToken: tokens.busd,\n//   },\n//   {\n//     pid: 396,\n//     lpSymbol: 'VRT-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xef5212ada83ec2cc105c409df10b8806d20e3b35',\n//     },\n//     token: tokens.vrt,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 395,\n//     lpSymbol: 'EZ-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x51bf99bbae59b67e5ce2fa9c17b683384773f8b3',\n//     },\n//     token: tokens.ez,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 394,\n//     lpSymbol: 'KALM-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xc74f7243766269dec5b85b0ef4af186e909c1b06',\n//     },\n//     token: tokens.kalm,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 393,\n//     lpSymbol: 'pOPEN-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x1090c996fd1490d15dd7906322ee676a5cc3cf82',\n//     },\n//     token: tokens.popen,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 335,\n//     lpSymbol: 'LIEN-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xa4963B38b271c0D714593063497Fc786Fa4029Ce',\n//     },\n//     token: tokens.lien,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 392,\n//     lpSymbol: 'WELL-BUSD LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x1d94cb25895abd6ccfef863c53372bb462aa6b86',\n//     },\n//     token: tokens.well,\n//     quoteToken: tokens.busd,\n//   },\n//   {\n//     pid: 391,\n//     lpSymbol: 'DERI-BUSD LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xdc7188ac11e124b1fa650b73ba88bf615ef15256',\n//     },\n//     token: tokens.deri,\n//     quoteToken: tokens.busd,\n//   },\n//   {\n//     pid: 390,\n//     lpSymbol: 'CHR-BUSD LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x6045931e511ef7e53a4a817f971e0ca28c758809',\n//     },\n//     token: tokens.chr,\n//     quoteToken: tokens.busd,\n//   },\n//   {\n//     pid: 389,\n//     lpSymbol: 'CAKE-BUSD LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x804678fa97d91B974ec2af3c843270886528a9E6',\n//     },\n//     token: tokens.cake,\n//     quoteToken: tokens.busd,\n//   },\n//   {\n//     pid: 388,\n//     lpSymbol: 'CYC-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xecf30fbecfa642012f54212a3be92eef1e48edac',\n//     },\n//     token: tokens.cyc,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 387,\n//     lpSymbol: 'XEND-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xcecfc2789af72ed151589a96a59f3a1abc65c3b5',\n//     },\n//     token: tokens.xend,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 296,\n//     lpSymbol: 'HGET-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xF74ee1e10e097dc326a2ad004F9Cc95CB71088d3',\n//     },\n//     token: tokens.hget,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 386,\n//     lpSymbol: 'HOTCROSS-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xf23bad605e94de0e3b60c9718a43a94a5af43915',\n//     },\n//     token: tokens.hotcross,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 385,\n//     lpSymbol: 'RFOX-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x8e04b3972b5c25766c681dfd30a8a1cbf6dcc8c1',\n//     },\n//     token: tokens.rfox,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 384,\n//     lpSymbol: 'WMASS-BUSD LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xec95ff6281c3ad8e27372fa6675eb337640b8e5e',\n//     },\n//     token: tokens.wmass,\n//     quoteToken: tokens.busd,\n//   },\n//   {\n//     pid: 383,\n//     lpSymbol: 'UBXT-BUSD LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x8d3ff27d2ad6a9556b7c4f82f4d602d20114bc90',\n//     },\n//     token: tokens.ubxt,\n//     quoteToken: tokens.busd,\n//   },\n//   {\n//     pid: 381,\n//     lpSymbol: 'BTR-BUSD LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xbc7ac609fa730239190a70952e64ee1dfc2530ac',\n//     },\n//     token: tokens.btr,\n//     quoteToken: tokens.busd,\n//   },\n//   {\n//     pid: 380,\n//     lpSymbol: 'τDOGE-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x2030845Ce7d4224523fd2F03Ca20Afe4aAD1D890',\n//     },\n//     token: tokens.τdoge,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 379,\n//     lpSymbol: 'PMON-BUSD LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xcdb0016d97fd0e7ec2c3b78aa4786cbd8e19c14c',\n//     },\n//     token: tokens.pmon,\n//     quoteToken: tokens.busd,\n//   },\n//   {\n//     pid: 378,\n//     lpSymbol: 'ONE-BUSD LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x4d057f769d930eafd597b49d6fb2e1009a73a702',\n//     },\n//     token: tokens.one,\n//     quoteToken: tokens.busd,\n//   },\n//   {\n//     pid: 377,\n//     lpSymbol: 'FINE-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xc309a6d2f1537922e06f15aa2eb21caa1b2eedb6',\n//     },\n//     token: tokens.fine,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 376,\n//     lpSymbol: 'DOGE-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xac109c8025f272414fd9e2faa805a583708a017f',\n//     },\n//     token: tokens.doge,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 310,\n//     lpSymbol: 'bMXX-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xc20A92a1424b29b78DFaF92FD35D4cf8A06419B4',\n//     },\n//     token: tokens.bmxx,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 375,\n//     lpSymbol: 'OIN-BUSD LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x6a00e41561ac36a78dba1d09091b0f00c4e53724',\n//     },\n//     token: tokens.oin,\n//     quoteToken: tokens.busd,\n//   },\n//   {\n//     pid: 374,\n//     lpSymbol: 'HYFI-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x0716725d78081a9e0e1ff81516f5415b399e274d',\n//     },\n//     token: tokens.hyfi,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 373,\n//     lpSymbol: 'KUN-BUSD LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xea61020e5a128d2bec67d48f7cfbe3408db7e391',\n//     },\n//     token: tokens.kun,\n//     quoteToken: tokens.busd,\n//   },\n//   {\n//     pid: 372,\n//     lpSymbol: 'KUN-QSD LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x4eafbf68a2d50291ffd163d4e00ad0f040aae707',\n//     },\n//     token: tokens.kun,\n//     quoteToken: tokens.qsd,\n//   },\n//   {\n//     pid: 371,\n//     lpSymbol: 'MATH-BUSD LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xb7cada0f120ca46745a024e6b9fe907b2fe10cf3',\n//     },\n//     token: tokens.math,\n//     quoteToken: tokens.busd,\n//   },\n//   {\n//     pid: 370,\n//     lpSymbol: 'mCOIN-UST LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xbcf01a42f6bc42f3cfe81b05519565044d65d22a',\n//     },\n//     token: tokens.mcoin,\n//     quoteToken: tokens.ust,\n//   },\n//   {\n//     pid: 369,\n//     lpSymbol: 'WIN-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x894bd57afd8efc93d9171cb585d11d0977557425',\n//     },\n//     token: tokens.win,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 368,\n//     lpSymbol: 'TRX-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x3cd338c3bb249b6b3c55799f85a589febbbff9dd',\n//     },\n//     token: tokens.trx,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 367,\n//     lpSymbol: 'BTT-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x946696344e7d4346b223e1cf77035a76690d6a73',\n//     },\n//     token: tokens.btt,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 366,\n//     lpSymbol: 'PNT-pBTC LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xdaa89d335926628367b47852989bb22ee62ca5de',\n//     },\n//     token: tokens.pnt,\n//     quoteToken: tokens.pbtc,\n//   },\n//   {\n//     pid: 311,\n//     lpSymbol: 'xMARK-BUSD LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xAa40f1AC20AAFcFEE8595Da606D78C503C7e70A3',\n//     },\n//     token: tokens.xmark,\n//     quoteToken: tokens.busd,\n//   },\n//   {\n//     pid: 365,\n//     lpSymbol: 'BTCB-BUSD LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xf45cd219aef8618a92baa7ad848364a158a24f33',\n//     },\n//     token: tokens.btcb,\n//     quoteToken: tokens.busd,\n//   },\n//   {\n//     pid: 364,\n//     lpSymbol: 'LMT-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x8271d7eafeeb8f24d7c9fe1acce2ae20611972e5',\n//     },\n//     token: tokens.lmt,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 363,\n//     lpSymbol: 'DFD-BUSD LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x029d66f9c0469450b7b4834b8ddc6a1118cec3e1',\n//     },\n//     token: tokens.dfd,\n//     quoteToken: tokens.busd,\n//   },\n//   {\n//     pid: 362,\n//     lpSymbol: 'ALPACA-BUSD LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x7752e1fa9f3a2e860856458517008558deb989e3',\n//     },\n//     token: tokens.alpaca,\n//     quoteToken: tokens.busd,\n//   },\n//   {\n//     pid: 361,\n//     lpSymbol: 'τBTC-BTCB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x8046fa66753928F35f7Db23ae0188ee6743C2FBA',\n//     },\n//     token: tokens.τbtc,\n//     quoteToken: tokens.btcb,\n//   },\n//   {\n//     pid: 304,\n//     lpSymbol: 'SWINGBY-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x4Fd6D315bEf387fAD2322fbc64368fC443F0886D',\n//     },\n//     token: tokens.swingby,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 360,\n//     lpSymbol: 'XED-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xa7A0b605343dF36B748FF4B5f7578b3F2D0651CE',\n//     },\n//     token: tokens.xed,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 359,\n//     lpSymbol: 'HAKKA-BUSD LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x2C624C9Ecf16Cb81aB85cC2C0B0c5e12A09AFDa6',\n//     },\n//     token: tokens.hakka,\n//     quoteToken: tokens.busd,\n//   },\n//   {\n//     pid: 358,\n//     lpSymbol: 'CGG-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x0604471c532F9fEBAD3E37190B667f44BD0894b3',\n//     },\n//     token: tokens.cgg,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 357,\n//     lpSymbol: 'SUTER-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x2d5DB889392Bc3c8B023A8631ca230A033eEA1B8',\n//     },\n//     token: tokens.suter,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 356,\n//     lpSymbol: 'bROOBEE-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x950FD020F8E4B8C57285EC7020b7a204348dadFa',\n//     },\n//     token: tokens.broobee,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 355,\n//     lpSymbol: 'HZN-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xDc9a574b9B341D4a98cE29005b614e1E27430E74',\n//     },\n//     token: tokens.hzn,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 354,\n//     lpSymbol: 'ALPA-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x4cC442220BE1cE560C1f2573f8CA8f460B3E4172',\n//     },\n//     token: tokens.alpa,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 353,\n//     lpSymbol: 'PERL-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x61010e6CbA3b56ba47E9dFd56Da682daCFe76131',\n//     },\n//     token: tokens.perl,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 352,\n//     lpSymbol: 'TLM-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xE6b421a4408c82381b226Ab5B6F8C4b639044359',\n//     },\n//     token: tokens.tlm,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 351,\n//     lpSymbol: 'JGN-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x7275278C94b5e20708380561C4Af98F38dDC6374',\n//     },\n//     token: tokens.jgn,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 350,\n//     lpSymbol: 'EPS-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xddE420cbB3794ebD8FFC3Ac69F9c78e5d1411870',\n//     },\n//     token: tokens.eps,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 349,\n//     lpSymbol: 'ARPA-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x9730c791743300E9f984C9264395ce705A55Da7c',\n//     },\n//     token: tokens.arpa,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 348,\n//     lpSymbol: 'ITAM-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xd02DA76c813b9cd4516eD50442923E625f90228f',\n//     },\n//     token: tokens.itam,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 346,\n//     lpSymbol: 'TKO-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xFFd4B200d3C77A0B691B5562D804b3bd54294e6e',\n//     },\n//     token: tokens.tko,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 345,\n//     lpSymbol: 'APYS-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x510b29a93ebf098f3fC24A16541aAA0114D07056',\n//     },\n//     token: tokens.apys,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 344,\n//     lpSymbol: 'HOO-BUSD LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x3e42C1f7239231E3752B507764445dd8e6A570d5',\n//     },\n//     token: tokens.hoo,\n//     quoteToken: tokens.busd,\n//   },\n//   {\n//     pid: 342,\n//     lpSymbol: 'EASY-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x20c6De8983Fb2D641c55004646aEF40b4EA66E18',\n//     },\n//     token: tokens.easy,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 341,\n//     lpSymbol: 'NRV-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xE482249Cd295C0d1e9D2baAEE71e66de21024C68',\n//     },\n//     token: tokens.nrv,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 340,\n//     lpSymbol: 'DEGO-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xF1Ec67fA1881796BFf63Db3E1A301cE9cb787Fad',\n//     },\n//     token: tokens.dego,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 339,\n//     lpSymbol: 'GUM-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x28Ea5894D4DBbE90bB58eE3BAB2869387d711c87',\n//     },\n//     token: tokens.gum,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 338,\n//     lpSymbol: 'pBTC-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x0362ba706DFE8ED12Ec1470aB171d8Dcb1C72B8D',\n//     },\n//     token: tokens.pbtc,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 337,\n//     lpSymbol: 'DFT-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x24d3B0eD4C444A4f6882d527cBF67aDc8c026582',\n//     },\n//     token: tokens.dft,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 336,\n//     lpSymbol: 'SWTH-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x123D475E13aA54A43a7421d94CAa4459dA021c77',\n//     },\n//     token: tokens.swth,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 334,\n//     lpSymbol: 'ZIL-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x6A97867a4b7Eb7646ffB1F359ad582e9903aa1C2',\n//     },\n//     token: tokens.zil,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 333,\n//     lpSymbol: 'pCWS-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x6615CE60D71513aA4849269dD63821D324A23F8C',\n//     },\n//     token: tokens.pcws,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 332,\n//     lpSymbol: 'bBADGER-BTCB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x5A58609dA96469E9dEf3fE344bC39B00d18eb9A5',\n//     },\n//     token: tokens.bbadger,\n//     quoteToken: tokens.btcb,\n//   },\n//   {\n//     pid: 331,\n//     lpSymbol: 'bDIGG-BTCB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x81d776C90c89B8d51E9497D58338933127e2fA80',\n//     },\n//     token: tokens.bdigg,\n//     quoteToken: tokens.btcb,\n//   },\n//   {\n//     pid: 330,\n//     lpSymbol: 'LTO-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xa5Bb44c6F5fD9B836E5a654c8AbbCCc96A15deE5',\n//     },\n//     token: tokens.lto,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 329,\n//     lpSymbol: 'MIR-UST LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x89666d026696660e93Bf6edf57B71A68615768B7',\n//     },\n//     token: tokens.mir,\n//     quoteToken: tokens.ust,\n//   },\n//   {\n//     pid: 328,\n//     lpSymbol: 'TRADE-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x8F6baf368E7A4f6e2C9c995f22702d5e654A0237',\n//     },\n//     token: tokens.trade,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 327,\n//     lpSymbol: 'DUSK-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x678EDb8B268e73dB57b7694c163e1dc296b6e219',\n//     },\n//     token: tokens.dusk,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 326,\n//     lpSymbol: 'BIFI-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x3f1A9f3D9aaD8bD339eD4853F345d2eF89fbfE0c',\n//     },\n//     token: tokens.bifi,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 325,\n//     lpSymbol: 'TXL-BUSD LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x1434BB50196A0C7eA825940b1DFd8aAd25d79817',\n//     },\n//     token: tokens.txl,\n//     quoteToken: tokens.busd,\n//   },\n//   {\n//     pid: 324,\n//     lpSymbol: 'COS-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xe98585bBb2dc81854fF100A3d9D7B0F53E0dafEd',\n//     },\n//     token: tokens.cos,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 323,\n//     lpSymbol: 'BUNNY-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x5aFEf8567414F29f0f927A0F2787b188624c10E2',\n//     },\n//     token: tokens.bunny,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 322,\n//     lpSymbol: 'ALICE-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xcAD7019D6d84a3294b0494aEF02e73BD0f2572Eb',\n//     },\n//     token: tokens.alice,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 321,\n//     lpSymbol: 'FOR-BUSD LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xE60B4e87645093A42fa9dcC5d0C8Df6E67f1f9d2',\n//     },\n//     token: tokens.for,\n//     quoteToken: tokens.busd,\n//   },\n//   {\n//     pid: 320,\n//     lpSymbol: 'BUX-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x222C3CbB89647bF77822435Bd4c234A04272A77A',\n//     },\n//     token: tokens.bux,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 319,\n//     lpSymbol: 'NULS-BUSD LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x853784B7BDe87d858555715c0123374242db7943',\n//     },\n//     token: tokens.nuls,\n//     quoteToken: tokens.busd,\n//   },\n//   {\n//     pid: 318,\n//     lpSymbol: 'BELT-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xF3Bc6FC080ffCC30d93dF48BFA2aA14b869554bb',\n//     },\n//     token: tokens.belt,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 317,\n//     lpSymbol: 'RAMP-BUSD LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xE834bf723f5bDff34a5D1129F3c31Ea4787Bc76a',\n//     },\n//     token: tokens.ramp,\n//     quoteToken: tokens.busd,\n//   },\n//   {\n//     pid: 316,\n//     lpSymbol: 'BFI-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x153Ad7d25B0b810497483d0cEE8AF42Fc533FeC8',\n//     },\n//     token: tokens.bfi,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 315,\n//     lpSymbol: 'DEXE-BUSD LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x3578B1f9BCE98D2F4D293b422d8850fdf48B1f21',\n//     },\n//     token: tokens.dexe,\n//     quoteToken: tokens.busd,\n//   },\n//   {\n//     pid: 314,\n//     lpSymbol: 'BEL-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x69DEE989c30b5fFe40867f5FC14F00E4bCE7B681',\n//     },\n//     token: tokens.bel,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 313,\n//     lpSymbol: 'TPT-BUSD LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x6D0c831254221ba121fB53fb44Df289A6558867d',\n//     },\n//     token: tokens.tpt,\n//     quoteToken: tokens.busd,\n//   },\n//   {\n//     pid: 312,\n//     lpSymbol: 'WATCH-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x13321AcfF4A27f3d2bcA64b8bEaC6e5FdAAAf12C',\n//     },\n//     token: tokens.watch,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 309,\n//     lpSymbol: 'IOTX-BUSD LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xc13aA76AAc067c86aE38028019F414D731b3D86A',\n//     },\n//     token: tokens.iotx,\n//     quoteToken: tokens.busd,\n//   },\n//   {\n//     pid: 308,\n//     lpSymbol: 'BOR-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xe094c686aD6cDda57b9564457F541FBF099B948A',\n//     },\n//     token: tokens.bor,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 307,\n//     lpSymbol: 'bOPEN-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xc7A9c2af263ebB86139Cca9349e49b17129Ba033',\n//     },\n//     token: tokens.bopen,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 306,\n//     lpSymbol: 'SUSHI-ETH LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x16aFc4F2Ad82986bbE2a4525601F8199AB9c832D',\n//     },\n//     token: tokens.sushi,\n//     quoteToken: tokens.eth,\n//   },\n//   {\n//     pid: 305,\n//     lpSymbol: 'DODO-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xA9986Fcbdb23c2E8B11AB40102990a08f8E58f06',\n//     },\n//     token: tokens.dodo,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 303,\n//     lpSymbol: 'BRY-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x21dD71aB78EDE3033c976948f769D506E4F489eE',\n//     },\n//     token: tokens.bry,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 302,\n//     lpSymbol: 'ZEE-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x8e799cB0737525CeB8A6C6Ad07f748535fF6377B',\n//     },\n//     token: tokens.zee,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 301,\n//     lpSymbol: 'SWGb-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x856f9AD94cA8680B899214Bb1EB3d235a3C33Afe',\n//     },\n//     token: tokens.swgb,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 300,\n//     lpSymbol: 'COMP-ETH LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x37908620dEf1491Dd591b5a2d16022A33cDDA415',\n//     },\n//     token: tokens.comp,\n//     quoteToken: tokens.eth,\n//   },\n//   {\n//     pid: 299,\n//     lpSymbol: 'SFP-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x942b294e59a8c47a0F7F20DF105B082710F7C305',\n//     },\n//     token: tokens.sfp,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 298,\n//     lpSymbol: 'LINA-BUSD LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xC5768c5371568Cf1114cddD52CAeD163A42626Ed',\n//     },\n//     token: tokens.lina,\n//     quoteToken: tokens.busd,\n//   },\n//   {\n//     pid: 297,\n//     lpSymbol: 'LIT-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x1F37d4226d23d09044B8005c127C0517BD7e94fD',\n//     },\n//     token: tokens.lit,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 295,\n//     lpSymbol: 'BDO-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x4288706624e3dD839b069216eB03B8B9819C10d2',\n//     },\n//     token: tokens.bdo,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 294,\n//     lpSymbol: 'EGLD-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xcD68856b6E72E99b5eEaAE7d41Bb4A3b484c700D',\n//     },\n//     token: tokens.egld,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 293,\n//     lpSymbol: 'UST-BUSD LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x05faf555522Fa3F93959F86B41A3808666093210',\n//     },\n//     token: tokens.ust,\n//     quoteToken: tokens.busd,\n//   },\n//   {\n//     pid: 292,\n//     lpSymbol: 'mAMZN-UST LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xC05654C66756eBB82c518598c5f1ea1a0199a563',\n//     },\n//     token: tokens.mamzn,\n//     quoteToken: tokens.ust,\n//   },\n//   {\n//     pid: 291,\n//     lpSymbol: 'mGOOGL-UST LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xA3BfBbAd526C6B856B1Fdf73F99BCD894761fbf3',\n//     },\n//     token: tokens.mgoogl,\n//     quoteToken: tokens.ust,\n//   },\n//   {\n//     pid: 290,\n//     lpSymbol: 'mNFLX-UST LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x91417426C3FEaA3Ca795921eB9FdD9715ad92537',\n//     },\n//     token: tokens.mnflx,\n//     quoteToken: tokens.ust,\n//   },\n//   {\n//     pid: 289,\n//     lpSymbol: 'mTSLA-UST LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xEc6b56a736859AE8ea4bEdA16279Ecd8c60dA7EA',\n//     },\n//     token: tokens.mtsla,\n//     quoteToken: tokens.ust,\n//   },\n//   {\n//     pid: 288,\n//     lpSymbol: 'wSOTE-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x7653D2c31440f04d2c6520D482dC5DbD7650f70a',\n//     },\n//     token: tokens.wsote,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 287,\n//     lpSymbol: 'FRONT-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xC6b668548aA4A56792e8002A920d3159728121D5',\n//     },\n//     token: tokens.front,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 286,\n//     lpSymbol: 'Helmet-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xC869A9943b702B03770B6A92d2b2d25cf3a3f571',\n//     },\n//     token: tokens.helmet,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 285,\n//     lpSymbol: 'BTCST-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xB2678C414ebC63c9CC6d1a0fC45f43E249B50fdE',\n//     },\n//     token: tokens.btcst,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 284,\n//     lpSymbol: 'LTC-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x71b01eBdDD797c8E9E0b003ea2f4FD207fBF46cC',\n//     },\n//     token: tokens.ltc,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 283,\n//     lpSymbol: 'USDC-BUSD LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x2354ef4DF11afacb85a5C7f98B624072ECcddbB1',\n//     },\n//     token: tokens.usdc,\n//     quoteToken: tokens.busd,\n//   },\n//   {\n//     pid: 282,\n//     lpSymbol: 'DAI-BUSD LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x66FDB2eCCfB58cF098eaa419e5EfDe841368e489',\n//     },\n//     token: tokens.dai,\n//     quoteToken: tokens.busd,\n//   },\n//   {\n//     pid: 281,\n//     lpSymbol: 'BSCX-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x47C42b0A056A9C6e9C65b9Ef79020Af518e767A5',\n//     },\n//     token: tokens.bscx,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 280,\n//     lpSymbol: 'TEN-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x1B415C3ec8095AfBF9d78882b3a6263c4ad141B5',\n//     },\n//     token: tokens.ten,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 279,\n//     lpSymbol: 'bALBT-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x24EB18bA412701f278B172ef96697c4622b19da6',\n//     },\n//     token: tokens.balbt,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 278,\n//     lpSymbol: 'REEF-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xd63b5CecB1f40d626307B92706Df357709D05827',\n//     },\n//     token: tokens.reef,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 277,\n//     lpSymbol: 'Ditto-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x8645148dE4E339964bA480AE3478653b5bc6E211',\n//     },\n//     token: tokens.ditto,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 276,\n//     lpSymbol: 'VAI-BUSD LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x133ee93FE93320e1182923E1a640912eDE17C90C',\n//     },\n//     token: tokens.vai,\n//     quoteToken: tokens.busd,\n//   },\n//   {\n//     pid: 275,\n//     lpSymbol: 'BLK-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x356Dd24BfF8e23BdE0430f00ad0C290E33438bD7',\n//     },\n//     token: tokens.blink,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 274,\n//     lpSymbol: 'UNFI-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x44EA47F2765fd5D26b7eF0222736AD6FD6f61950',\n//     },\n//     token: tokens.unfi,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 273,\n//     lpSymbol: 'HARD-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x73566ca86248bD12F0979793e4671e99a40299A7',\n//     },\n//     token: tokens.hard,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 272,\n//     lpSymbol: 'CTK-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x460b4193Ec4C1a17372Aa5FDcd44c520ba658646',\n//     },\n//     token: tokens.ctk,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 271,\n//     lpSymbol: 'SXP-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xD8E2F8b6Db204c405543953Ef6359912FE3A88d6',\n//     },\n//     token: tokens.sxp,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 270,\n//     lpSymbol: 'INJ-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x1BdCebcA3b93af70b58C41272AEa2231754B23ca',\n//     },\n//     token: tokens.inj,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 269,\n//     lpSymbol: 'FIL-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xD9bCcbbbDFd9d67BEb5d2273102CE0762421D1e3',\n//     },\n//     token: tokens.fil,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 268,\n//     lpSymbol: 'UNI-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x014608E87AF97a054C9a49f81E1473076D51d9a3',\n//     },\n//     token: tokens.uni,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 267,\n//     lpSymbol: 'YFI-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xCE383277847f8217392eeA98C5a8B4a7D27811b0',\n//     },\n//     token: tokens.yfi,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 266,\n//     lpSymbol: 'ATOM-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x468b2DC8DC75990eE3E9dc0648965Ad6294E7914',\n//     },\n//     token: tokens.atom,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 265,\n//     lpSymbol: 'XRP-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x03F18135c44C64ebFdCBad8297fe5bDafdBbdd86',\n//     },\n//     token: tokens.xrp,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 264,\n//     lpSymbol: 'USDT-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x16b9a82891338f9bA80E2D6970FddA79D1eb0daE',\n//     },\n//     token: tokens.usdt,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 263,\n//     lpSymbol: 'ALPHA-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xACF47CBEaab5c8A6Ee99263cfE43995f89fB3206',\n//     },\n//     token: tokens.alpha,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 262,\n//     lpSymbol: 'BTCB-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x61EB789d75A95CAa3fF50ed7E47b96c132fEc082',\n//     },\n//     token: tokens.btcb,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 261,\n//     lpSymbol: 'ETH-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x74E4716E431f45807DCF19f284c7aA99F18a4fbc',\n//     },\n//     token: tokens.eth,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 260,\n//     lpSymbol: 'XVS-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x7EB5D86FD78f3852a3e0e064f2842d45a3dB6EA2',\n//     },\n//     token: tokens.xvs,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 259,\n//     lpSymbol: 'TWT-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x3DcB1787a95D2ea0Eb7d00887704EeBF0D79bb13',\n//     },\n//     token: tokens.twt,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 258,\n//     lpSymbol: 'USDT-BUSD LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x7EFaEf62fDdCCa950418312c6C91Aef321375A00',\n//     },\n//     token: tokens.usdt,\n//     quoteToken: tokens.busd,\n//   },\n//   {\n//     pid: 257,\n//     lpSymbol: 'LINK-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x824eb9faDFb377394430d2744fa7C42916DE3eCe',\n//     },\n//     token: tokens.link,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 256,\n//     lpSymbol: 'EOS-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xB6e34b5C65Eda51bb1BD4ea5F79d385Fb94b9504',\n//     },\n//     token: tokens.eos,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 255,\n//     lpSymbol: 'DOT-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xDd5bAd8f8b360d76d12FdA230F8BAF42fe0022CF',\n//     },\n//     token: tokens.dot,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 254,\n//     lpSymbol: 'BAND-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x168B273278F3A8d302De5E879aA30690B7E6c28f',\n//     },\n//     token: tokens.band,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 253,\n//     lpSymbol: 'ADA-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x28415ff2C35b65B9E5c7de82126b4015ab9d031F',\n//     },\n//     token: tokens.ada,\n//     quoteToken: tokens.wbnb,\n//   },\n//   /**\n//    * V2 farms, set to be removed once unstaked\n//    */\n//   {\n//     pid: 139,\n//     lpSymbol: 'CAKE-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xFB7E9FE9D13561AdA7131Fa746942a14F7dd4Cf6',\n//     },\n//     token: tokens.cake,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 250,\n//     lpSymbol: 'τBTC-BTCB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xFD09CDbd6A7dCAd8AC47df4F139443a729264763',\n//     },\n//     token: tokens.τbtc,\n//     quoteToken: tokens.btcb,\n//   },\n//   {\n//     pid: 193,\n//     lpSymbol: 'SWINGBY-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xA0e3F72BAFcc5d52F0052a39165FD40D3d4d34Fc',\n//     },\n//     token: tokens.swingby,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 249,\n//     lpSymbol: 'XED-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xBbE20dA99db94Fa1077F1C9A5d256761dAf89C60',\n//     },\n//     token: tokens.xed,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 248,\n//     lpSymbol: 'HAKKA-BUSD LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x9ed1ca73AA8F1ccdc3c3a174E77014f8900411CE',\n//     },\n//     token: tokens.hakka,\n//     quoteToken: tokens.busd,\n//   },\n//   {\n//     pid: 247,\n//     lpSymbol: 'CGG-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xB9aA8B0d67DE546aaa82091065a64B7F1C4B1a1F',\n//     },\n//     token: tokens.cgg,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 246,\n//     lpSymbol: 'SUTER-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x6f41c9226fa89a552009c3AC087BA74b83772C52',\n//     },\n//     token: tokens.suter,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 245,\n//     lpSymbol: 'bROOBEE-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x5Ac5184eA06dE24ce8ED2133f58b4Aa2CEd2dC3b',\n//     },\n//     token: tokens.broobee,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 244,\n//     lpSymbol: 'HZN-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xF7fcD7e7B3853bf59bCA9183476F218ED07eD3B0',\n//     },\n//     token: tokens.hzn,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 243,\n//     lpSymbol: 'ALPA-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xBB41898A3051A6b6D4A36a1c43e906b05799B744',\n//     },\n//     token: tokens.alpa,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 242,\n//     lpSymbol: 'PERL-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xB1C2e08A992a619DA570425E78828A8508654f4F',\n//     },\n//     token: tokens.perl,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 241,\n//     lpSymbol: 'TLM-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x25f15Cb3D3B3753702E1d5c4E5f6F0720b197843',\n//     },\n//     token: tokens.tlm,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 240,\n//     lpSymbol: 'JGN-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x8fD5ca41B2B44e4713590584f97c85f9FF59F00D',\n//     },\n//     token: tokens.jgn,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 239,\n//     lpSymbol: 'EPS-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x43bc6C256240e657Ad84aFb86825E21B48FEDe78',\n//     },\n//     token: tokens.eps,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 238,\n//     lpSymbol: 'ARPA-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xD55e5A7b886aE9657b95641c6A7dc5A662EcAbF3',\n//     },\n//     token: tokens.arpa,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 237,\n//     lpSymbol: 'ITAM-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x3e78b0eD211a49e263fF9b3F0B410932a021E368',\n//     },\n//     token: tokens.itam,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 236,\n//     lpSymbol: 'BONDLY-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x2205a6424ec4D74a7588450fB71ffd0C4A3Ead65',\n//     },\n//     token: tokens.bondly,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 235,\n//     lpSymbol: 'TKO-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xc43EdF4a7e89160135C2553E9868446fef9C18DD',\n//     },\n//     token: tokens.tko,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 234,\n//     lpSymbol: 'APYS-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x7A5523f50a80790cAD011167E20bD21056A2f04A',\n//     },\n//     token: tokens.apys,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 233,\n//     lpSymbol: 'HOO-BUSD LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xc12dAD966505443b5aad7b0C55716c13d285B520',\n//     },\n//     token: tokens.hoo,\n//     quoteToken: tokens.busd,\n//   },\n//   {\n//     pid: 232,\n//     lpSymbol: 'ODDZ-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x3B0a7d1030bcDFf45ABB7B03C04110FcCc8095BC',\n//     },\n//     token: tokens.oddz,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 231,\n//     lpSymbol: 'EASY-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x4b0ec41404a7FF59BaE33C8Dc420804c58B7bF24',\n//     },\n//     token: tokens.easy,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 230,\n//     lpSymbol: 'NRV-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x25dea33a42c7775F6945fae22A8fFBfAC9fB22CD',\n//     },\n//     token: tokens.nrv,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 229,\n//     lpSymbol: 'DEGO-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x6108aBd546AF17D8f7aFAe59EBfb4A01132A11Bb',\n//     },\n//     token: tokens.dego,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 228,\n//     lpSymbol: 'GUM-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xA99d1926a3c15DC4Fb83aB3Fafd63B6C3E87CF22',\n//     },\n//     token: tokens.gum,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 227,\n//     lpSymbol: 'pBTC-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xaccd6673FFc24cD56B080D71384327f78fD92496',\n//     },\n//     token: tokens.pbtc,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 226,\n//     lpSymbol: 'DFT-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xe86d075051f20eb8c741007Cb8e262f4519944ee',\n//     },\n//     token: tokens.dft,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 225,\n//     lpSymbol: 'SWTH-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x4f6dfFc9795d35dc1D92c2a7B23Cb7d6EF190B33',\n//     },\n//     token: tokens.swth,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 224,\n//     lpSymbol: 'LIEN-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xbe7BDE4aD1c136038Dc9f57ef94d1d16e6F9CbF7',\n//     },\n//     token: tokens.lien,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 223,\n//     lpSymbol: 'ZIL-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xcBDf499db66Df19A66aB48F16C790FF9eE872add',\n//     },\n//     token: tokens.zil,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 222,\n//     lpSymbol: 'pCWS-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xe3D941e74141311436F82523817EBaa26462967d',\n//     },\n//     token: tokens.pcws,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 221,\n//     lpSymbol: 'bBADGER-BTCB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x87Ae7b5c43D4e160cDB9427a78BA87B9503ee37b',\n//     },\n//     token: tokens.bbadger,\n//     quoteToken: tokens.btcb,\n//   },\n//   {\n//     pid: 220,\n//     lpSymbol: 'bDIGG-BTCB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xfbfa92e037e37F946c0105902640914E3aCe6752',\n//     },\n//     token: tokens.bdigg,\n//     quoteToken: tokens.btcb,\n//   },\n//   {\n//     pid: 219,\n//     lpSymbol: 'LTO-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xF62e92292772F24EAa6B6B8a105c9FC7B8F31EC5',\n//     },\n//     token: tokens.lto,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 218,\n//     lpSymbol: 'MIR-UST LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x905186a70ba3Eb50090d1d0f6914F5460B4DdB40',\n//     },\n//     token: tokens.mir,\n//     quoteToken: tokens.ust,\n//   },\n//   {\n//     pid: 217,\n//     lpSymbol: 'TRADE-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x52fCfB6d91Bcf1F1f6d375D0f6c303688b0E8550',\n//     },\n//     token: tokens.trade,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 216,\n//     lpSymbol: 'DUSK-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x69773f622cE228Ca7dEd42D8C34Eba8582e85dcA',\n//     },\n//     token: tokens.dusk,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 215,\n//     lpSymbol: 'BIFI-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x01956F08A55e4FF9775bc01aF6ACb09144564837',\n//     },\n//     token: tokens.bifi,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 214,\n//     lpSymbol: 'TXL-BUSD LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x8Ba7eB4056338fd7271E1b7431C8ca3827eF907c',\n//     },\n//     token: tokens.txl,\n//     quoteToken: tokens.busd,\n//   },\n//   {\n//     pid: 213,\n//     lpSymbol: 'COS-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xAfB2e729A24629aBdE8E55CEB0e1f899bEe0f70f',\n//     },\n//     token: tokens.cos,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 212,\n//     lpSymbol: 'BUNNY-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x283FA8d459Da6e3165B2faF7FA0DD0137503DECf',\n//     },\n//     token: tokens.bunny,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 211,\n//     lpSymbol: 'ALICE-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x9e1BB5033d47BF8F16FC017CEC0959De7FF00833',\n//     },\n//     token: tokens.alice,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 210,\n//     lpSymbol: 'FOR-BUSD LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xaBB817B07663521Cf64B006EC9D0FF185b65cfE5',\n//     },\n//     token: tokens.for,\n//     quoteToken: tokens.busd,\n//   },\n//   {\n//     pid: 209,\n//     lpSymbol: 'BUX-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x7aA4eb5c3bF33e3AD41A47e26b3Bd9b902984610',\n//     },\n//     token: tokens.bux,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 208,\n//     lpSymbol: 'NULS-BUSD LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xaB46737CAAFbB99999f8b91E4D3C6D4D28E10e05',\n//     },\n//     token: tokens.nuls,\n//     quoteToken: tokens.busd,\n//   },\n//   {\n//     pid: 207,\n//     lpSymbol: 'BELT-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x446ff2C0F5350bF2dadD0e0F1AaAA573b362CA6B',\n//     },\n//     token: tokens.belt,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 206,\n//     lpSymbol: 'RAMP-BUSD LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x6ED589e69D1927AC45054cBb6E57877879384d6F',\n//     },\n//     token: tokens.ramp,\n//     quoteToken: tokens.busd,\n//   },\n//   {\n//     pid: 205,\n//     lpSymbol: 'BFI-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xFFA2357f1E6f48d74b1c18c363c3Fe58A032405a',\n//     },\n//     token: tokens.bfi,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 204,\n//     lpSymbol: 'DEXE-BUSD LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x534b0b0700c0cfF9785852707f07f60E7C0bc07E',\n//     },\n//     token: tokens.dexe,\n//     quoteToken: tokens.busd,\n//   },\n//   {\n//     pid: 203,\n//     lpSymbol: 'BEL-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x2013265224E3cB6A53C67130F9Fe53Ae36CFcfdd',\n//     },\n//     token: tokens.bel,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 202,\n//     lpSymbol: 'TPT-BUSD LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xC14c2dd21d6aEA3C2068A1F8e58d41D3c28F9288',\n//     },\n//     token: tokens.tpt,\n//     quoteToken: tokens.busd,\n//   },\n//   {\n//     pid: 201,\n//     lpSymbol: 'WATCH-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xD5fBfFf5faB9d29f614d9bd50AF9b1356C53049C',\n//     },\n//     token: tokens.watch,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 200,\n//     lpSymbol: 'xMARK-BUSD LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x601aE41C5a65b2089a6af2CcfaF984896a1f52AD',\n//     },\n//     token: tokens.xmark,\n//     quoteToken: tokens.busd,\n//   },\n//   {\n//     pid: 199,\n//     lpSymbol: 'bMXX-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x037d38c7DfF5732DAA5f8C05478Eb75cdf24f42B',\n//     },\n//     token: tokens.bmxx,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 198,\n//     lpSymbol: 'IOTX-BUSD LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x8503462D0d4D3ce73e857bCC7D0Ef1125B0d66fF',\n//     },\n//     token: tokens.iotx,\n//     quoteToken: tokens.busd,\n//   },\n//   {\n//     pid: 197,\n//     lpSymbol: 'BOR-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xE0243Ce3b50bd551168cE6964F178507d0a1acD5',\n//     },\n//     token: tokens.bor,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 196,\n//     lpSymbol: 'bOPEN-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xD2FcF98EaeD2c08e9BcA854802C07b93D27913aC',\n//     },\n//     token: tokens.bopen,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 195,\n//     lpSymbol: 'SUSHI-ETH LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x3BECbb09F622187B544C0892EeDeB58C004117e1',\n//     },\n//     token: tokens.sushi,\n//     quoteToken: tokens.eth,\n//   },\n//   {\n//     pid: 194,\n//     lpSymbol: 'DODO-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x220e34306a93002fB7947C9Fc633d6f538bd5032',\n//     },\n//     token: tokens.dodo,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 192,\n//     lpSymbol: 'BRY-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xC3E303647cbD43EC22989275e7ecFA8952A6BA02',\n//     },\n//     token: tokens.bry,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 191,\n//     lpSymbol: 'ZEE-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x6d1299B158bd13F4B50e951aaBf2Aa501FD87E52',\n//     },\n//     token: tokens.zee,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 190,\n//     lpSymbol: 'SWGb-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xd2A5008d555371e97F30B6dD71597b4F1eDB0f20',\n//     },\n//     token: tokens.swgb,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 189,\n//     lpSymbol: 'COMP-ETH LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x6A55a9176f11c1118f01CBaf6c4033a5c1B22a81',\n//     },\n//     token: tokens.comp,\n//     quoteToken: tokens.eth,\n//   },\n//   {\n//     pid: 188,\n//     lpSymbol: 'SFP-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x01744B868fe98dB669EBf4e9CA557462BAA6097c',\n//     },\n//     token: tokens.sfp,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 187,\n//     lpSymbol: 'LINA-BUSD LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xb923A2Beeb0834528D20b8973A2c69088571aA9E',\n//     },\n//     token: tokens.lina,\n//     quoteToken: tokens.busd,\n//   },\n//   {\n//     pid: 186,\n//     lpSymbol: 'LIT-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x41D69Beda3AFF2FFE48E715e2f4248Cb272cFf30',\n//     },\n//     token: tokens.lit,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 185,\n//     lpSymbol: 'HGET-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x239aD1874114B2235485e34b14c48dB73CCA3ffb',\n//     },\n//     token: tokens.hget,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 184,\n//     lpSymbol: 'BDO-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xF7045D7dE334a3F6c1254f98167b2af130eEA8E6',\n//     },\n//     token: tokens.bdo,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 183,\n//     lpSymbol: 'EGLD-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xB4670bBEce2D02c4D30786D173985A984686042C',\n//     },\n//     token: tokens.egld,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 182,\n//     lpSymbol: 'UST-BUSD LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x1719606031F1E0B3CCaCa11A2CF550Ef8feBEB0F',\n//     },\n//     token: tokens.ust,\n//     quoteToken: tokens.busd,\n//   },\n//   {\n//     pid: 181,\n//     lpSymbol: 'mAMZN-UST LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x2c065E42B464ef38480778B0624A207A09042481',\n//     },\n//     token: tokens.mamzn,\n//     quoteToken: tokens.ust,\n//   },\n//   {\n//     pid: 180,\n//     lpSymbol: 'mGOOGL-UST LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x74d8Dbac5053d31E904a821A3B4C411Bd4dd2307',\n//     },\n//     token: tokens.mgoogl,\n//     quoteToken: tokens.ust,\n//   },\n//   {\n//     pid: 179,\n//     lpSymbol: 'mNFLX-UST LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xe1d76359FE4Eb7f0dAd1D719256c22890864718E',\n//     },\n//     token: tokens.mnflx,\n//     quoteToken: tokens.ust,\n//   },\n//   {\n//     pid: 178,\n//     lpSymbol: 'mTSLA-UST LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x36285DDD149949f366b5aFb3f41Cea71d35B8c9e',\n//     },\n//     token: tokens.mtsla,\n//     quoteToken: tokens.ust,\n//   },\n//   {\n//     pid: 177,\n//     lpSymbol: 'wSOTE-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xe5909de3822d589c220Fb4FA1660A0Fd251Fa87d',\n//     },\n//     token: tokens.wsote,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 176,\n//     lpSymbol: 'FRONT-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x84Df48B3e900C79539F6c523D6F528802BeAa713',\n//     },\n//     token: tokens.front,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 175,\n//     lpSymbol: 'Helmet-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xD09648792d7e77523ae311Fa5A8F38E4684A5f15',\n//     },\n//     token: tokens.helmet,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 174,\n//     lpSymbol: 'BTCST-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xf967845A6D30C44b555C49C50530076dF5D7fd75',\n//     },\n//     token: tokens.btcst,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 173,\n//     lpSymbol: 'LTC-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x286E8d71722c585c9A82876B1B2FB4dEe9fc536E',\n//     },\n//     token: tokens.ltc,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 172,\n//     lpSymbol: 'USDC-BUSD LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x05FC2ac8a4FA697501087C916c87b8a5dc4f7b46',\n//     },\n//     token: tokens.usdc,\n//     quoteToken: tokens.busd,\n//   },\n//   {\n//     pid: 171,\n//     lpSymbol: 'DAI-BUSD LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xdaFE10aA3AB6758596aDAC70f6873C49F5a9bf86',\n//     },\n//     token: tokens.dai,\n//     quoteToken: tokens.busd,\n//   },\n//   {\n//     pid: 170,\n//     lpSymbol: 'BSCX-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x5fE5394BBc394345737b8e6e48be2804E89eC0eB',\n//     },\n//     token: tokens.bscx,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 169,\n//     lpSymbol: 'TEN-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x003C4d60de42eAD30739dD204BD153fE69E20Fb2',\n//     },\n//     token: tokens.ten,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 168,\n//     lpSymbol: 'bALBT-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x1B8ab50d894CfE793B44057F681A950E87Bd0331',\n//     },\n//     token: tokens.balbt,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 167,\n//     lpSymbol: 'REEF-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x074ed2De503580887073A0F788E035C0fbe13F48',\n//     },\n//     token: tokens.reef,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 166,\n//     lpSymbol: 'Ditto-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xb33D432eACe45DF62F0145228B550b214DCaA6D4',\n//     },\n//     token: tokens.ditto,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 165,\n//     lpSymbol: 'VAI-BUSD LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x9d95063661fa34B67E0Be0cc71Cf92fc6126aF37',\n//     },\n//     token: tokens.vai,\n//     quoteToken: tokens.busd,\n//   },\n//   {\n//     pid: 164,\n//     lpSymbol: 'BLK-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xdA5a79fFe24739876a52AEF0d419aBB3b2517922',\n//     },\n//     token: tokens.blink,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 163,\n//     lpSymbol: 'UNFI-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x029f944CD3afa7c229122b19c706d8B7c01e062a',\n//     },\n//     token: tokens.unfi,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 162,\n//     lpSymbol: 'HARD-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x158e337e7Dcfcd8FC512840208BB522d122bB19d',\n//     },\n//     token: tokens.hard,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 161,\n//     lpSymbol: 'CTK-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xcbb3fCE7134aF9ef2f3DCe0EAE96db68961b1337',\n//     },\n//     token: tokens.ctk,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 160,\n//     lpSymbol: 'SXP-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x6294D8518b7321dc22E32AA907A89B1DAfc1aDbB',\n//     },\n//     token: tokens.sxp,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 159,\n//     lpSymbol: 'INJ-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x0444712EE8DFF8913B2b44CB1D2a0273b4CDaBe9',\n//     },\n//     token: tokens.inj,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 158,\n//     lpSymbol: 'FIL-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xD027c0B352578b1Cf57f472107591CaE5fa27Eb1',\n//     },\n//     token: tokens.fil,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 157,\n//     lpSymbol: 'UNI-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x2937202a53C82E36bC8beCFBe79795bedF284804',\n//     },\n//     token: tokens.uni,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 156,\n//     lpSymbol: 'YFI-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xfffad7374c894E65b498BDBD489a9a5324A59F60',\n//     },\n//     token: tokens.yfi,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 155,\n//     lpSymbol: 'YFII-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x237E7016Ff50D3B704A7e07571aE08628909A116',\n//     },\n//     token: tokens.yfii,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 154,\n//     lpSymbol: 'ATOM-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x7DD05eF533b1eBCE7815c90678D4B7344E32b8c9',\n//     },\n//     token: tokens.atom,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 153,\n//     lpSymbol: 'XRP-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x0F640E3ec77415Fd810D18B3ac000cD8a172E22f',\n//     },\n//     token: tokens.xrp,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 152,\n//     lpSymbol: 'USDT-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x4160910ca32eAD83B6d4b32107974397D2579c2d',\n//     },\n//     token: tokens.usdt,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 151,\n//     lpSymbol: 'ALPHA-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x0edAA38Bd263E83fAECbC8476822800F30eE6028',\n//     },\n//     token: tokens.alpha,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 150,\n//     lpSymbol: 'BTCB-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x356b7d0d3c54F22C82B7a670C6Ba9E2381b0624c',\n//     },\n//     token: tokens.btcb,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 149,\n//     lpSymbol: 'ETH-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x4D7078a6B348766E7a16cD6e6fCb3064721bc6a6',\n//     },\n//     token: tokens.eth,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 148,\n//     lpSymbol: 'XVS-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x77B5dB64fD4Cf5B699855420fF2608B2EA6708B3',\n//     },\n//     token: tokens.xvs,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 147,\n//     lpSymbol: 'TWT-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x34910518Faf5bfd3a4D15ccFE104B63f06ee3d85',\n//     },\n//     token: tokens.twt,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 146,\n//     lpSymbol: 'USDT-BUSD LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x28b81C6b155fd9152AE4A09c4eeB7E7F1C114FaC',\n//     },\n//     token: tokens.usdt,\n//     quoteToken: tokens.busd,\n//   },\n//   {\n//     pid: 145,\n//     lpSymbol: 'LINK-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x380941fFd7b7cbf4AEbBfa8A26aa80c2f6570909',\n//     },\n//     token: tokens.link,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 144,\n//     lpSymbol: 'EOS-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x082A80b3a55BD3B320a16678784186a979882b21',\n//     },\n//     token: tokens.eos,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 143,\n//     lpSymbol: 'DOT-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x3aFfc4dd05286ed6B7206Fc85219d222130e35a9',\n//     },\n//     token: tokens.dot,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 142,\n//     lpSymbol: 'BAND-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x473390697036E7611a670575eA9141583471fF47',\n//     },\n//     token: tokens.band,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 141,\n//     lpSymbol: 'ADA-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xec0C5719cC100DfB6c6F371bb48d3D079ab6A6D2',\n//     },\n//     token: tokens.ada,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 140,\n//     lpSymbol: 'BUSD-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x9bdEdb0c876fC0Da79D945DF28942b898Af89Fc7',\n//     },\n//     token: tokens.busd,\n//     quoteToken: tokens.wbnb,\n//   },\n//   /**\n//    * All farms below here are from v1 and are to be set to 0x\n//    */\n//   {\n//     pid: 1,\n//     lpSymbol: 'CAKE-BNB LP',\n//     lpAddresses: {\n//       97: '0x3ed8936cAFDF85cfDBa29Fbe5940A5b0524824F4',\n//       56: '0xA527a61703D82139F8a06Bc30097cC9CAA2df5A6',\n//     },\n//     token: tokens.cake,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 136,\n//     lpSymbol: 'τBTC-BTCB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x2d4e52c48fd18ee06d3959e82ab0f773c41b9277',\n//     },\n//     token: tokens.τbtc,\n//     quoteToken: tokens.btcb,\n//   },\n//   {\n//     pid: 76,\n//     lpSymbol: 'SWINGBY-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x4576C456AF93a37a096235e5d83f812AC9aeD027',\n//     },\n//     token: tokens.swingby,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 135,\n//     lpSymbol: 'XED-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x718d3baa161e1a38758bb0f1fe751e401f431ac4',\n//     },\n//     token: tokens.xed,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 134,\n//     lpSymbol: 'HAKKA-BUSD LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x56bc8de6e90a8454cb2614b33e750d960aecdf12',\n//     },\n//     token: tokens.hakka,\n//     quoteToken: tokens.busd,\n//   },\n//   {\n//     pid: 133,\n//     lpSymbol: 'CGG-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x484c60f6202c8043DCA0236bB3101ada7ec50AD4',\n//     },\n//     token: tokens.cgg,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 132,\n//     lpSymbol: 'SUTER-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x6Ff75C20656A0E4745E7c114972D361F483AFa5f',\n//     },\n//     token: tokens.suter,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 131,\n//     lpSymbol: 'bROOBEE-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x9e6f9f3382f9edc683203b528222c554c92382c2',\n//     },\n//     token: tokens.broobee,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 130,\n//     lpSymbol: 'HZN-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xee4ca18e91012bf87fefde3dd6723a8834347a4d',\n//     },\n//     token: tokens.hzn,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 129,\n//     lpSymbol: 'ALPA-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x837cd42282801e340f1f17aadf3166fee99fb07c',\n//     },\n//     token: tokens.alpa,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 128,\n//     lpSymbol: 'PERL-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x044e9985c14a547d478b1e3d4a4e562e69c8f936',\n//     },\n//     token: tokens.perl,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 127,\n//     lpSymbol: 'TLM-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x34e821e785A93261B697eBD2797988B3AA78ca33',\n//     },\n//     token: tokens.tlm,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 125,\n//     lpSymbol: 'JGN-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x890479844484D67e34B99e1BBc1468231b254c08',\n//     },\n//     token: tokens.jgn,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 124,\n//     lpSymbol: 'EPS-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xf9045866e7b372def1eff3712ce55fac1a98daf0',\n//     },\n//     token: tokens.eps,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 123,\n//     lpSymbol: 'ARPA-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xfb29fca952b478ddcb8a43f57176161e498225b1',\n//     },\n//     token: tokens.arpa,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 122,\n//     lpSymbol: 'ITAM-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xCdC53345192D0e31eEAD03D7E9e008Ee659FAEbE',\n//     },\n//     token: tokens.itam,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 121,\n//     lpSymbol: 'BONDLY-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x67581bfb4fc13bb73c71489b504e9b5354769063',\n//     },\n//     token: tokens.bondly,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 120,\n//     lpSymbol: 'TKO-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x496a8b716A3A3410B16e71E3c906968CE4488e52',\n//     },\n//     token: tokens.tko,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 119,\n//     lpSymbol: 'APYS-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xE5783Cc9dFb3E7e474B81B07369a008e80F1cEdb',\n//     },\n//     token: tokens.apys,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 118,\n//     lpSymbol: 'HOO-BUSD LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x3c9e55edbd937ae0ad8c084a1a8302110612a371',\n//     },\n//     token: tokens.hoo,\n//     quoteToken: tokens.busd,\n//   },\n//   {\n//     pid: 117,\n//     lpSymbol: 'ODDZ-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x61376b56ff33c618b115131712a4138f98810a6a',\n//     },\n//     token: tokens.oddz,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 116,\n//     lpSymbol: 'EASY-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xbd1ec00b0d1cca9d5b28fbe0bb7d664238af2ffa',\n//     },\n//     token: tokens.easy,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 115,\n//     lpSymbol: 'NRV-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x5a805994a2e30ac710e7376ccc0211285bd4dd92',\n//     },\n//     token: tokens.nrv,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 114,\n//     lpSymbol: 'DEGO-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x17F0b998B81cE75074a7CDAdAe6D63Da3cb23572',\n//     },\n//     token: tokens.dego,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 113,\n//     lpSymbol: 'GUM-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x155645cDF8e4B28d5B7790b65d9f79efc222740C',\n//     },\n//     token: tokens.gum,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 112,\n//     lpSymbol: 'pBTC-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xb5f6f7dad23132d40d778085d795bd0fd4b859cd',\n//     },\n//     token: tokens.pbtc,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 111,\n//     lpSymbol: 'DFT-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x8FbCbD7e30b1733965a8980bf7Ae2ca1c0C456cc',\n//     },\n//     token: tokens.dft,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 110,\n//     lpSymbol: 'SWTH-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x8c5cFfad6cddb96Ee33DA685D0d50a37e030E115',\n//     },\n//     token: tokens.swth,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 109,\n//     lpSymbol: 'LIEN-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xcd14855150335AAE984aa6D281E090c27035C692',\n//     },\n//     token: tokens.lien,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 108,\n//     lpSymbol: 'ZIL-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xc746337b5f800a0e19ed4eb3bda03ff1401b8167',\n//     },\n//     token: tokens.zil,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 107,\n//     lpSymbol: 'pCWS-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x889e81d25bffba437b2a5d3e0e4fc58a0e2749c5',\n//     },\n//     token: tokens.pcws,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 106,\n//     lpSymbol: 'bBADGER-BTCB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x10F461CEAC7A17F59e249954Db0784d42EfF5DB5',\n//     },\n//     token: tokens.bbadger,\n//     quoteToken: tokens.btcb,\n//   },\n//   {\n//     pid: 104,\n//     lpSymbol: 'bDIGG-BTCB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xE1E33459505bB3763843a426F7Fd9933418184ae',\n//     },\n//     token: tokens.bdigg,\n//     quoteToken: tokens.btcb,\n//   },\n//   {\n//     pid: 103,\n//     lpSymbol: 'LTO-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x85644fcd00c401e1a0a0a10d2ae6bbe04a73e4ab',\n//     },\n//     token: tokens.lto,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 102,\n//     lpSymbol: 'MIR-UST LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xf64a269F0A06dA07D23F43c1Deb217101ee6Bee7',\n//     },\n//     token: tokens.mir,\n//     quoteToken: tokens.ust,\n//   },\n//   {\n//     pid: 101,\n//     lpSymbol: 'TRADE-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x2562f94E90dE6D9eb4fB6B3b8Eab56b15Aa4FC72',\n//     },\n//     token: tokens.trade,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 100,\n//     lpSymbol: 'DUSK-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xB7918560273FD56e50E9c215CC0DFE8D764C36C5',\n//     },\n//     token: tokens.dusk,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 99,\n//     lpSymbol: 'BIFI-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xd132D2C24F29EE8ABb64a66559d1b7aa627Bd7fD',\n//     },\n//     token: tokens.bifi,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 98,\n//     lpSymbol: 'TXL-BUSD LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xD20E0BcCa8B29409bf5726CB24DD779Fe337020e',\n//     },\n//     token: tokens.txl,\n//     quoteToken: tokens.busd,\n//   },\n//   {\n//     pid: 97,\n//     lpSymbol: 'COS-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x7b1e440240B220244761C9D9A3B07fbA1995BD84',\n//     },\n//     token: tokens.cos,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 96,\n//     lpSymbol: 'BUNNY-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x7Bb89460599Dbf32ee3Aa50798BBcEae2A5F7f6a',\n//     },\n//     token: tokens.bunny,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 95,\n//     lpSymbol: 'ALICE-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xe022baa3E5E87658f789c9132B10d7425Fd3a389',\n//     },\n//     token: tokens.alice,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 94,\n//     lpSymbol: 'FOR-BUSD LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xfEc200A5E3adDD4a7915a556DDe3F5850e644020',\n//     },\n//     token: tokens.for,\n//     quoteToken: tokens.busd,\n//   },\n//   {\n//     pid: 93,\n//     lpSymbol: 'BUX-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x0F556f4E47513d1a19Be456a9aF778d7e1A226B9',\n//     },\n//     token: tokens.bux,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 92,\n//     lpSymbol: 'NULS-BUSD LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xCA01F5D89d5b1d24ca5D6Ecc856D21e8a61DAFCc',\n//     },\n//     token: tokens.nuls,\n//     quoteToken: tokens.busd,\n//   },\n//   {\n//     pid: 91,\n//     lpSymbol: 'NULS-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xad7e515409e5a7d516411a85acc88c5e993f570a',\n//     },\n//     token: tokens.nuls,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 90,\n//     lpSymbol: 'BELT-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x83B92D283cd279fF2e057BD86a95BdEfffED6faa',\n//     },\n//     token: tokens.belt,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 89,\n//     lpSymbol: 'RAMP-BUSD LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xbF36959939982D0D34B37Fb3f3425da9676C13a3',\n//     },\n//     token: tokens.ramp,\n//     quoteToken: tokens.busd,\n//   },\n//   {\n//     pid: 88,\n//     lpSymbol: 'BFI-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x45a9e8d48bc560416008d122c9437927fed50e7d',\n//     },\n//     token: tokens.bfi,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 87,\n//     lpSymbol: 'DEXE-BUSD LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x69ab367bc1bea1d2c0fb4dbaec6b7197951da56c',\n//     },\n//     token: tokens.dexe,\n//     quoteToken: tokens.busd,\n//   },\n//   {\n//     pid: 86,\n//     lpSymbol: 'BEL-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xAB97952a2806D5c92b7046c7aB13a72A87e0097b',\n//     },\n//     token: tokens.bel,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 85,\n//     lpSymbol: 'TPT-BUSD LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x4db28767d1527ba545ca5bbda1c96a94ed6ff242',\n//     },\n//     token: tokens.tpt,\n//     quoteToken: tokens.busd,\n//   },\n//   {\n//     pid: 84,\n//     lpSymbol: 'WATCH-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xdc6c130299e53acd2cc2d291fa10552ca2198a6b',\n//     },\n//     token: tokens.watch,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 83,\n//     lpSymbol: 'xMARK-BUSD LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x292ca56ed5b3330a19037f835af4a9c0098ea6fa',\n//     },\n//     token: tokens.xmark,\n//     quoteToken: tokens.busd,\n//   },\n//   {\n//     pid: 82,\n//     lpSymbol: 'bMXX-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x4D5aA94Ce6BbB1BC4eb73207a5a5d4D052cFcD67',\n//     },\n//     token: tokens.bmxx,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 81,\n//     lpSymbol: 'IOTX-BUSD LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x36b8b28d37f93372188f2aa2507b68a5cd8b2664',\n//     },\n//     token: tokens.iotx,\n//     quoteToken: tokens.busd,\n//   },\n//   {\n//     pid: 80,\n//     lpSymbol: 'BOR-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x86e650350c40a5178a5d014ba37fe8556232b898',\n//     },\n//     token: tokens.bor,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 79,\n//     lpSymbol: 'bOPEN-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x9d8b7e4a9d53654d82f12c83448d8f92732bc761',\n//     },\n//     token: tokens.bopen,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 78,\n//     lpSymbol: 'SUSHI-ETH LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x17580340f3daedae871a8c21d15911742ec79e0f',\n//     },\n//     token: tokens.sushi,\n//     quoteToken: tokens.eth,\n//   },\n//   {\n//     pid: 77,\n//     lpSymbol: 'DODO-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x9e642d174b14faea31d842dc83037c42b53236e6',\n//     },\n//     token: tokens.dodo,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 75,\n//     lpSymbol: 'BRY-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x5E3CD27F36932Bc0314aC4e2510585798C34a2fC',\n//     },\n//     token: tokens.bry,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 74,\n//     lpSymbol: 'ZEE-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xb5ab3996808c7e489dcdc0f1af2ab212ae0059af',\n//     },\n//     token: tokens.zee,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 73,\n//     lpSymbol: 'SWGb-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xc1800c29cf91954357cd0bf3f0accaada3d0109c',\n//     },\n//     token: tokens.swgb,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 72,\n//     lpSymbol: 'COMP-ETH LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x0392957571f28037607c14832d16f8b653edd472',\n//     },\n//     token: tokens.comp,\n//     quoteToken: tokens.eth,\n//   },\n//   {\n//     pid: 71,\n//     lpSymbol: 'SFP-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xcbe2cf3bd012e9c1ade2ee4d41db3dac763e78f3',\n//     },\n//     token: tokens.sfp,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 70,\n//     lpSymbol: 'BETH-ETH LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x99d865ed50d2c32c1493896810fa386c1ce81d91',\n//     },\n//     token: tokens.beth,\n//     quoteToken: tokens.eth,\n//   },\n//   {\n//     pid: 69,\n//     lpSymbol: 'LINA-BUSD LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xeb325a8ea1c5abf40c7ceaf645596c1f943d0948',\n//     },\n//     token: tokens.lina,\n//     quoteToken: tokens.busd,\n//   },\n//   {\n//     pid: 68,\n//     lpSymbol: 'LIT-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x60bB03D1010b99CEAdD0dd209b64bC8bd83da161',\n//     },\n//     token: tokens.lit,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 67,\n//     lpSymbol: 'HGET-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x66b9e1eac8a81f3752f7f3a5e95de460688a17ee',\n//     },\n//     token: tokens.hget,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 66,\n//     lpSymbol: 'BDO-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x74690f829fec83ea424ee1f1654041b2491a7be9',\n//     },\n//     token: tokens.bdo,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 65,\n//     lpSymbol: 'EGLD-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x3ef4952c7a9afbe374ea02d1bf5ed5a0015b7716',\n//     },\n//     token: tokens.egld,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 63,\n//     lpSymbol: 'UST-BUSD LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xD1F12370b2ba1C79838337648F820a87eDF5e1e6',\n//     },\n//     token: tokens.ust,\n//     quoteToken: tokens.busd,\n//   },\n//   {\n//     pid: 62,\n//     lpSymbol: 'mAMZN-UST LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xc92Dc34665c8a21f98E1E38474580b61b4f3e1b9',\n//     },\n//     token: tokens.mamzn,\n//     quoteToken: tokens.ust,\n//   },\n//   {\n//     pid: 61,\n//     lpSymbol: 'mGOOGL-UST LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x852A68181f789AE6d1Da3dF101740a59A071004f',\n//     },\n//     token: tokens.mgoogl,\n//     quoteToken: tokens.ust,\n//   },\n//   {\n//     pid: 60,\n//     lpSymbol: 'mNFLX-UST LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xF609ade3846981825776068a8eD7746470029D1f',\n//     },\n//     token: tokens.mnflx,\n//     quoteToken: tokens.ust,\n//   },\n//   {\n//     pid: 59,\n//     lpSymbol: 'mTSLA-UST LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xD5664D2d15cdffD597515f1c0D945c6c1D3Bf85B',\n//     },\n//     token: tokens.mtsla,\n//     quoteToken: tokens.ust,\n//   },\n//   {\n//     pid: 58,\n//     lpSymbol: 'wSOTE-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xffb9e2d5ce4378f1a89b29bf53f80804cc078102',\n//     },\n//     token: tokens.wsote,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 57,\n//     lpSymbol: 'FRONT-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x36b7d2e5c7877392fb17f9219efad56f3d794700',\n//     },\n//     token: tokens.front,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 56,\n//     lpSymbol: 'Helmet-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x6411310c07d8c48730172146fd6f31fa84034a8b',\n//     },\n//     token: tokens.helmet,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 55,\n//     lpSymbol: 'BTCST-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x91589786D36fEe5B27A5539CfE638a5fc9834665',\n//     },\n//     token: tokens.btcst,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 54,\n//     lpSymbol: 'LTC-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xbc765fd113c5bdb2ebc25f711191b56bb8690aec',\n//     },\n//     token: tokens.ltc,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 53,\n//     lpSymbol: 'USDC-BUSD LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x680dd100e4b394bda26a59dd5c119a391e747d18',\n//     },\n//     token: tokens.usdc,\n//     quoteToken: tokens.busd,\n//   },\n//   {\n//     pid: 52,\n//     lpSymbol: 'DAI-BUSD LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x3aB77e40340AB084c3e23Be8e5A6f7afed9D41DC',\n//     },\n//     token: tokens.dai,\n//     quoteToken: tokens.busd,\n//   },\n//   {\n//     pid: 51,\n//     lpSymbol: 'BSCX-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x20781bc3701c5309ac75291f5d09bdc23d7b7fa8',\n//     },\n//     token: tokens.bscx,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 50,\n//     lpSymbol: 'TEN-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x01ecc44ddd2d104f44d2aa1a2bd9dfbc91ae8275',\n//     },\n//     token: tokens.ten,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 49,\n//     lpSymbol: 'bALBT-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xbe14f3a89a4f7f279af9d99554cf12e8c29db921',\n//     },\n//     token: tokens.balbt,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 46,\n//     lpSymbol: 'OG-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x64373608f2e93ea97ad4d8ca2cce6b2575db2f55',\n//     },\n//     token: tokens.og,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 47,\n//     lpSymbol: 'ASR-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xd6b900d5308356317299dafe303e661271aa12f1',\n//     },\n//     token: tokens.asr,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 48,\n//     lpSymbol: 'ATM-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xd5b3ebf1a85d32c73a82b40f75e1cd929caf4029',\n//     },\n//     token: tokens.atm,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 45,\n//     lpSymbol: 'REEF-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x58B58cab6C5cF158f63A2390b817710826d116D0',\n//     },\n//     token: tokens.reef,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 44,\n//     lpSymbol: 'Ditto-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x470bc451810b312bbb1256f96b0895d95ea659b1',\n//     },\n//     token: tokens.ditto,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 43,\n//     lpSymbol: 'JUV-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x51a2ffa5b7de506f9a22549e48b33f6cf0d9030e',\n//     },\n//     token: tokens.juv,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 42,\n//     lpSymbol: 'PSG-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x9c4f6a5050cf863e67a402e8b377973b4e3372c1',\n//     },\n//     token: tokens.psg,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 39,\n//     lpSymbol: 'UNFI-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xbEA35584b9a88107102ABEf0BDeE2c4FaE5D8c31',\n//     },\n//     token: tokens.unfi,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 41,\n//     lpSymbol: 'VAI-BUSD LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xff17ff314925dff772b71abdff2782bc913b3575',\n//     },\n//     token: tokens.vai,\n//     quoteToken: tokens.busd,\n//   },\n//   {\n//     pid: 40,\n//     lpSymbol: 'BLK-BNB LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0xC743Dc05F03D25E1aF8eC5F8228f4BD25513c8d0',\n//     },\n//     token: tokens.blink,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 37,\n//     lpSymbol: 'HARD-BNB LP',\n//     lpAddresses: {\n//       97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n//       56: '0x9f40e8a2fcaa267a0c374b6c661e0b372264cc3d',\n//     },\n//     token: tokens.hard,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 2,\n//     lpSymbol: 'BUSD-BNB LP',\n//     lpAddresses: {\n//       97: '0x2f7682b64b88149ba3250aee32db712964de5fa9',\n//       56: '0x1b96b92314c44b159149f7e0303511fb2fc4774f',\n//     },\n//     token: tokens.busd,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 3,\n//     lpSymbol: 'ADA-BNB LP',\n//     lpAddresses: {\n//       97: '0xcbe3282a562e23b8c61ed04bb72ffdbb9233b1ce',\n//       56: '0xba51d1ab95756ca4eab8737ecd450cd8f05384cf',\n//     },\n//     token: tokens.ada,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 4,\n//     lpSymbol: 'BAND-BNB LP',\n//     lpAddresses: {\n//       97: '0xcbe3282a562e23b8c61ed04bb72ffdbb9233b1ce',\n//       56: '0xc639187ef82271d8f517de6feae4faf5b517533c',\n//     },\n//     token: tokens.band,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 5,\n//     lpSymbol: 'DOT-BNB LP',\n//     lpAddresses: {\n//       97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n//       56: '0xbcd62661a6b1ded703585d3af7d7649ef4dcdb5c',\n//     },\n//     token: tokens.dot,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 6,\n//     lpSymbol: 'EOS-BNB LP',\n//     lpAddresses: {\n//       97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n//       56: '0x981d2ba1b298888408d342c39c2ab92e8991691e',\n//     },\n//     token: tokens.eos,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 7,\n//     lpSymbol: 'LINK-BNB LP',\n//     lpAddresses: {\n//       97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n//       56: '0xaebe45e3a03b734c68e5557ae04bfc76917b4686',\n//     },\n//     token: tokens.link,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 11,\n//     lpSymbol: 'USDT-BUSD LP',\n//     lpAddresses: {\n//       97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n//       56: '0xc15fa3E22c912A276550F3E5FE3b0Deb87B55aCd',\n//     },\n//     token: tokens.usdt,\n//     quoteToken: tokens.busd,\n//   },\n//   {\n//     pid: 12,\n//     lpSymbol: 'TWT-BNB LP',\n//     lpAddresses: {\n//       97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n//       56: '0x610e7a287c27dfFcaC0F0a94f547Cc1B770cF483',\n//     },\n//     token: tokens.twt,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 13,\n//     lpSymbol: 'XVS-BNB LP',\n//     lpAddresses: {\n//       97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n//       56: '0x41182c32F854dd97bA0e0B1816022e0aCB2fc0bb',\n//     },\n//     token: tokens.xvs,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 14,\n//     lpSymbol: 'ETH-BNB LP',\n//     lpAddresses: {\n//       97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n//       56: '0x70D8929d04b60Af4fb9B58713eBcf18765aDE422',\n//     },\n//     token: tokens.eth,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 15,\n//     lpSymbol: 'BTCB-BNB LP',\n//     lpAddresses: {\n//       97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n//       56: '0x7561EEe90e24F3b348E1087A005F78B4c8453524',\n//     },\n//     token: tokens.btcb,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 16,\n//     lpSymbol: 'ALPHA-BNB LP',\n//     lpAddresses: {\n//       97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n//       56: '0x4e0f3385d932F7179DeE045369286FFa6B03d887',\n//     },\n//     token: tokens.alpha,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 17,\n//     lpSymbol: 'USDT-BNB LP',\n//     lpAddresses: {\n//       97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n//       56: '0x20bcc3b8a0091ddac2d0bc30f68e6cbb97de59cd',\n//     },\n//     token: tokens.usdt,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 18,\n//     lpSymbol: 'XRP-BNB LP',\n//     lpAddresses: {\n//       97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n//       56: '0xc7b4b32a3be2cb6572a1c9959401f832ce47a6d2',\n//     },\n//     token: tokens.xrp,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 19,\n//     lpSymbol: 'ATOM-BNB LP',\n//     lpAddresses: {\n//       97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n//       56: '0x2333c77fc0b2875c11409cdcd3c75d42d402e834',\n//     },\n//     token: tokens.atom,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 20,\n//     lpSymbol: 'YFII-BNB LP',\n//     lpAddresses: {\n//       97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n//       56: '0x574a978c2d0d36d707a05e459466c7a1054f1210',\n//     },\n//     token: tokens.yfii,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 21,\n//     lpSymbol: 'DAI-BNB LP',\n//     lpAddresses: {\n//       97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n//       56: '0x56c77d59e82f33c712f919d09fceddf49660a829',\n//     },\n//     token: tokens.dai,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 22,\n//     lpSymbol: 'XTZ-BNB LP',\n//     lpAddresses: {\n//       97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n//       56: '0x5acac332f0f49c8badc7afd0134ad19d3db972e6',\n//     },\n//     token: tokens.xtz,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 23,\n//     lpSymbol: 'BCH-BNB LP',\n//     lpAddresses: {\n//       97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n//       56: '0x54edd846db17f43b6e43296134ecd96284671e81',\n//     },\n//     token: tokens.bch,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 24,\n//     lpSymbol: 'YFI-BNB LP',\n//     lpAddresses: {\n//       97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n//       56: '0x68Ff2ca47D27db5Ac0b5c46587645835dD51D3C1',\n//     },\n//     token: tokens.yfi,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 25,\n//     lpSymbol: 'UNI-BNB LP',\n//     lpAddresses: {\n//       97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n//       56: '0x4269e7F43A63CEA1aD7707Be565a94a9189967E9',\n//     },\n//     token: tokens.uni,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 26,\n//     lpSymbol: 'FIL-BNB LP',\n//     lpAddresses: {\n//       97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n//       56: '0x35fe9787f0ebf2a200bac413d3030cf62d312774',\n//     },\n//     token: tokens.fil,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 27,\n//     lpSymbol: 'INJ-BNB LP',\n//     lpAddresses: {\n//       97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n//       56: '0x7a34bd64d18e44CfdE3ef4B81b87BAf3EB3315B6',\n//     },\n//     token: tokens.inj,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 29,\n//     lpSymbol: 'USDC-BNB LP',\n//     lpAddresses: {\n//       97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n//       56: '0x30479874f9320a62bce3bc0e315c920e1d73e278',\n//     },\n//     token: tokens.usdc,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 30,\n//     lpSymbol: 'SXP-BNB LP',\n//     lpAddresses: {\n//       97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n//       56: '0x752E713fB70E3FA1Ac08bCF34485F14A986956c4',\n//     },\n//     token: tokens.sxp,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 32,\n//     lpSymbol: 'CTK-BNB LP',\n//     lpAddresses: {\n//       97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n//       56: '0x7793870484647a7278907498ec504879d6971EAb',\n//     },\n//     token: tokens.ctk,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 34,\n//     lpSymbol: 'STAX-CAKE LP',\n//     lpAddresses: {\n//       97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n//       56: '0x7cd05f8b960ba071fdf69c750c0e5a57c8366500',\n//     },\n//     token: tokens.stax,\n//     quoteToken: tokens.cake,\n//     isCommunity: true,\n//   },\n//   {\n//     pid: 35,\n//     lpSymbol: 'NAR-CAKE LP',\n//     lpAddresses: {\n//       97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n//       56: '0x745c4fd226e169d6da959283275a8e0ecdd7f312',\n//     },\n//     token: tokens.nar,\n//     quoteToken: tokens.cake,\n//     isCommunity: true,\n//   },\n//   {\n//     pid: 36,\n//     lpSymbol: 'NYA-CAKE LP',\n//     lpAddresses: {\n//       97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n//       56: '0x2730bf486d658838464a4ef077880998d944252d',\n//     },\n//     token: tokens.nya,\n//     quoteToken: tokens.cake,\n//     isCommunity: true,\n//   },\n//   {\n//     pid: 38,\n//     lpSymbol: 'bROOBEE-CAKE LP',\n//     lpAddresses: {\n//       97: '',\n//       56: '0x970858016C963b780E06f7DCfdEf8e809919BcE8',\n//     },\n//     token: tokens.broobee,\n//     quoteToken: tokens.cake,\n//     isCommunity: true,\n//   },\n//   {\n//     pid: 8,\n//     lpSymbol: 'BAKE-BNB Bakery LP',\n//     lpAddresses: {\n//       97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n//       56: '0xc2eed0f5a0dc28cfa895084bc0a9b8b8279ae492',\n//     },\n//     token: tokens.bake,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 9,\n//     lpSymbol: 'BURGER-BNB LP',\n//     lpAddresses: {\n//       97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n//       56: '0xd937FB9E6e47F3805981453BFB277a49FFfE04D7',\n//     },\n//     token: tokens.burger,\n//     quoteToken: tokens.wbnb,\n//   },\n//   {\n//     pid: 10,\n//     lpSymbol: 'BAKE-BNB LP',\n//     lpAddresses: {\n//       97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n//       56: '0x3Da30727ed0626b78C212e81B37B97A8eF8A25bB',\n//     },\n//     token: tokens.bake,\n//     quoteToken: tokens.wbnb,\n//    },\n]\n\nexport default farms\n","import { useContext } from 'react'\nimport { RefreshContext } from 'contexts/RefreshContext'\n\nconst useRefresh = () => {\n  const { fast, slow } = useContext(RefreshContext)\n  return { fastRefresh: fast, slowRefresh: slow }\n}\n\nexport default useRefresh\n","import random from 'lodash/random'\n\n// Array of available nodes to connect to\nexport const nodes = [process.env.REACT_APP_NODE_1, process.env.REACT_APP_NODE_2, process.env.REACT_APP_NODE_3]\n\nconst getNodeUrl = () => {\n  const randomIndex = random(0, nodes.length - 1)\n  return nodes[randomIndex]\n}\n\nexport default getNodeUrl\n","export default {\n  masterChef: {\n    97: '0x1d32c2945C8FDCBc7156c553B7cEa4325a17f4f9',\n    56: '0x0fb702557f4c0ab1ce0d9a1c37296409c5f57d06',\n  },\n  sousChef: {\n    97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n    56: '0x6ab8463a4185b80905e05a9ff80a2d6b714b9e95',\n  },\n  newlottery: {\n    97: '',\n    56: '0x57477f43a22F6b8D729428153D2B85cE71d1a587',\n  },\n  lottery: {\n    97: '0x99c2EcD51d52c036B00130d882Bc65f20Fdecf9f',\n    56: '0x367A943Ef1547728f3e536DF512d80D6235CB124',\n  },\n  lotteryNFT: {\n    97: '0x8175c10383511b3a1C68f9dB222dc14A19CC950e',\n    56: '0x5e74094Cd416f55179DBd0E45b1a8ED030e396A1',\n  },\n  lotteryV2: {\n    97: '0x4D8B718b4e617ea49bCe6B508c23353Cc7bADd28',\n    56: '',\n  },\n  referral: {\n    97: '',\n    56: '0xE04111e39273Dde1CE37Dc7C1cc5ECB41c966FA1',\n  },\n  multiCall: {\n    56: '0xfF6FD90A470Aaa0c1B8A54681746b07AcdFedc9B',\n    97: '',\n  },\n  pancakeProfile: {\n    56: '0xDf4dBf6536201370F95e06A0F8a7a70fE40E388a',\n    97: '0x4B683C7E13B6d5D7fd1FeA9530F451954c1A7c8A',\n  },\n  pancakeRabbits: {\n    56: '0xDf7952B35f24aCF7fC0487D01c8d5690a60DBa07',\n    97: '0x60935F36e4631F73f0f407e68642144e07aC7f5E',\n  },\n  bunnyFactory: {\n    56: '0xfa249Caa1D16f75fa159F7DFBAc0cC5EaB48CeFf',\n    97: '0x707CBF373175fdB601D34eeBF2Cf665d08f01148',\n  },\n  claimRefund: {\n    56: '0xE7e53A7e9E3Cf6b840f167eF69519175c497e149',\n    97: '',\n  },\n  pointCenterIfo: {\n    56: '0x3C6919b132462C1FEc572c6300E83191f4F0012a',\n    97: '0xd2Ac1B1728Bb1C11ae02AB6e75B76Ae41A2997e3',\n  },\n  bunnySpecial: {\n    56: '0xFee8A195570a18461146F401d6033f5ab3380849',\n    97: '0x7b7b1583De1DeB32Ce6605F6deEbF24A0671c17C',\n  },\n  tradingCompetition: {\n    56: '0xd718baa0B1F4f70dcC8458154042120FFE0DEFFA',\n    97: '0xC787F45B833721ED3aC46E99b703B3E1E01abb97',\n  },\n  easterNft: {\n    56: '0x23c41D28A239dDCAABd1bb1deF8d057189510066',\n    97: '0x24ec6962dbe874F6B67B5C50857565667fA0854F',\n  },\n  cakeVault: {\n    56: '0x44229450a406b5d478f50344157B98f7b21EB9c4',\n    97: '',\n  },\n  predictions: {\n    56: '0x516ffd7D1e0Ca40b1879935B2De87cb20Fc1124b',\n    97: '0x4f3140C74789F1D809420343ea83BcE52B7bbAA5',\n  },\n  chainlinkOracle: {\n    56: '0x0567F2323251f0Aab15c8dFb1967E4e8A7D42aeE',\n    97: '',\n  },\n}\n","import { MAINNET_CHAIN_ID } from 'config'\nimport addresses from 'config/constants/contracts'\nimport tokens from 'config/constants/tokens'\nimport { Address } from 'config/constants/types'\n\nexport const getAddress = (address: Address): string => {\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  return address[chainId] ? address[chainId] : address[MAINNET_CHAIN_ID]\n}\n\nexport const getCakeAddress = () => {\n  return getAddress(tokens.bris.address)\n}\nexport const getMasterChefAddress = () => {\n  return getAddress(addresses.masterChef)\n}\nexport const getMulticallAddress = () => {\n  return getAddress(addresses.multiCall)\n}\nexport const getWbnbAddress = () => {\n  return getAddress(tokens.wbnb.address)\n}\nexport const getLotteryAddress = () => {\n  return getAddress(addresses.lottery)\n}\nexport const getLotteryTicketAddress = () => {\n  return getAddress(addresses.lotteryNFT)\n}\nexport const getLotteryV2Address = () => {\n  return getAddress(addresses.lotteryV2)\n}\nexport const getReferralAddress = () => {\n  return getAddress(addresses.referral)\n}\nexport const getNewLotteryAddress = () => {\n  return getAddress(addresses.newlottery)\n}\nexport const getPancakeProfileAddress = () => {\n  return getAddress(addresses.pancakeProfile)\n}\nexport const getPancakeRabbitsAddress = () => {\n  return getAddress(addresses.pancakeRabbits)\n}\nexport const getBunnyFactoryAddress = () => {\n  return getAddress(addresses.bunnyFactory)\n}\nexport const getClaimRefundAddress = () => {\n  return getAddress(addresses.claimRefund)\n}\nexport const getPointCenterIfoAddress = () => {\n  return getAddress(addresses.pointCenterIfo)\n}\nexport const getBunnySpecialAddress = () => {\n  return getAddress(addresses.bunnySpecial)\n}\nexport const getTradingCompetitionAddress = () => {\n  return getAddress(addresses.tradingCompetition)\n}\nexport const getEasterNftAddress = () => {\n  return getAddress(addresses.easterNft)\n}\nexport const getCakeVaultAddress = () => {\n  return getAddress(addresses.cakeVault)\n}\nexport const getPredictionsAddress = () => {\n  return getAddress(addresses.predictions)\n}\nexport const getChainlinkOracleAddress = () => {\n  return getAddress(addresses.chainlinkOracle)\n}\n","import { AbstractConnector } from '@web3-react/abstract-connector';\nimport { AbstractConnectorArguments, ConnectorUpdate } from '@web3-react/types';\n\nexport type SendReturnResult = { result: any }\nexport type SendReturn = any\ntype Send = (method: string, params?: any[]) => Promise<SendReturnResult | SendReturn>;\nexport type SendOld = ({ method }: { method: string }) => Promise<SendReturnResult | SendReturn>;\n\nfunction parseSendReturn(sendReturn: SendReturnResult | SendReturn): any {\n  return Object.prototype.hasOwnProperty.call(sendReturn, 'result') ? sendReturn.result : sendReturn\n}\n\nexport class NoBitkeepProviderError extends Error {\n  public constructor() {\n    super()\n    this.name = this.constructor.name\n    this.message = 'No BitKeep provider was found on window.bitkeep.'\n  }\n}\n\nexport class UserRejectedRequestError extends Error {\n  public constructor() {\n    super()\n    this.name = this.constructor.name\n    this.message = 'The user rejected the request.'\n  }\n}\n\nexport class BitKeepConnector extends AbstractConnector {\n  constructor(kwargs: AbstractConnectorArguments) {\n    super(kwargs);\n    console.info(kwargs);\n    this.handleChainChanged = this.handleChainChanged.bind(this);\n    this.handleAccountsChanged = this.handleAccountsChanged.bind(this)\n    this.handleClose = this.handleClose.bind(this)\n  }\n\n  private handleChainChanged(chainId: string | number): void {\n    console.info(\"Handling 'chainChanged' event with payload\", chainId)\n    this.emitUpdate({ chainId, provider: window.bitkeep.ethereum })\n  }\n\n  private handleAccountsChanged(accounts: string[]): void {\n    console.info(\"Handling 'accountsChanged' event with payload\", accounts)\n    if (accounts.length === 0) {\n      this.emitDeactivate()\n    } else {\n      this.emitUpdate({ account: accounts[0] })\n    }\n  }\n\n  private handleClose(code: number, reason: string): void {\n    console.info(\"Handling 'close' event with payload\", code, reason)\n    this.emitDeactivate()\n  }\n\n  public async activate() : Promise<ConnectorUpdate> {\n    if (!window.bitkeep.ethereum)\n      throw new NoBitkeepProviderError();\n    const ethereum = window?.bitkeep?.ethereum;\n    if (ethereum.on) {\n      ethereum.on('chainChanged', this.handleChainChanged)\n      ethereum.on('accountsChanged', this.handleAccountsChanged)\n      ethereum.on('close', this.handleClose)\n    }\n    if ((ethereum as any).isBitKeep) {\n      (ethereum as any).autoRefreshOnNetworkChange = false;\n    }\n    // try to activate + get account via eth_requestAccounts\n    let account\n    try {\n      account = await (ethereum.send as Send)('eth_requestAccounts').then(\n        sendReturn => parseSendReturn(sendReturn)[0]\n      )\n    } catch (error) {\n      if ((error as any).code === 4001) {\n        throw new UserRejectedRequestError()\n      }\n    }\n\n    // if unsuccessful, try enable\n    if (!account) {\n      // if enable is successful but doesn't return accounts, fall back to getAccount (not happy i have to do this...)\n      account = await ethereum.enable().then(sendReturn => sendReturn && parseSendReturn(sendReturn)[0])\n    }\n\n    return { provider: ethereum, ...(account ? { account } : {}) }\n  }\n\n  public async getProvider(): Promise<any> {\n    return window.bitkeep.ethereum;\n  }\n\n  public async getChainId(): Promise<number | string> {\n    if (!window.bitkeep || !window.bitkeep.ethereum) {\n      throw new NoBitkeepProviderError();\n    }\n    \n    const ethereum = window?.bitkeep?.ethereum;\n    let chainId;\n    try {\n      chainId = await (ethereum.send as Send)('eth_chainId').then(parseSendReturn)\n    } catch {\n      throw new Error('eth_chainId was unsuccessful, falling back to net_version');\n    }\n\n    if (!chainId) {\n      try {\n        chainId = await (ethereum.send as Send)('net_version').then(parseSendReturn)\n      } catch {\n        throw new Error('net_version was unsuccessful, falling back to net version v2')\n      }\n    }\n\n    if (!chainId) {\n      try {\n        chainId = parseSendReturn((ethereum.send as SendOld)({ method: 'net_version' }))\n      } catch {\n        throw new Error('net_version v2 was unsuccessful, falling back to manual matches and static properties')\n      }\n    }\n\n    if (!chainId) {\n      if ((ethereum as any).isDapper) {\n        chainId = parseSendReturn((ethereum as any).cachedResults.net_version)\n      } else {\n        chainId =\n          (ethereum as any).chainId ||\n          (ethereum as any).netVersion ||\n          (ethereum as any).networkVersion ||\n          (ethereum as any)._chainId\n      }\n    }\n\n    return chainId\n  }\n\n  public async getAccount(): Promise<null | string> {\n    if (!window.bitkeep || !window.bitkeep.ethereum) {\n      throw new NoBitkeepProviderError()\n    }\n\n    const ethereum = window?.bitkeep?.ethereum;\n    let account\n    try {\n      account = await (ethereum.send as Send)('eth_accounts').then(sendReturn => parseSendReturn(sendReturn)[0])\n    } catch {\n      throw new Error('eth_accounts was unsuccessful, falling back to enable');\n    }\n\n    if (!account) {\n      try {\n        account = await ethereum.enable().then(sendReturn => parseSendReturn(sendReturn)[0])\n      } catch {\n        throw new Error('enable was unsuccessful, falling back to eth_accounts v2')\n      }\n    }\n\n    if (!account) {\n      account = parseSendReturn((ethereum.send as SendOld)({ method: 'eth_accounts' }))[0]\n    }\n\n    return account\n  }\n\n  public deactivate() {\n    if (window.bitkeep && window.bitkeep.ethereum && window.bitkeep.ethereum.removeListener) {\n      window.bitkeep.ethereum.removeListener('chainChanged', this.handleChainChanged)\n      window.bitkeep.ethereum.removeListener('accountsChanged', this.handleAccountsChanged)\n      window.bitkeep.ethereum.removeListener('close', this.handleClose)\n    }\n  }\n}\n\nconst bitkeepName = \"\";\nexport default bitkeepName;","import { InjectedConnector } from '@web3-react/injected-connector'\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\nimport { BscConnector } from '@binance-chain/bsc-connector'\nimport { ConnectorNames } from '@pancakeswap/uikit'\nimport Web3 from 'web3'\nimport {BitKeepConnector} from './bitKeepConnector'\nimport getNodeUrl from './getRpcUrl'\n\nconst POLLING_INTERVAL = 12000\nconst rpcUrl = getNodeUrl()\nconst chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\n\nconst injected = new InjectedConnector({ supportedChainIds: [chainId] })\n\nconst walletconnect = new WalletConnectConnector({\n  rpc: { [chainId]: rpcUrl },\n  bridge: 'https://pancakeswap.bridge.walletconnect.org/',\n  qrcode: true,\n  pollingInterval: POLLING_INTERVAL,\n})\n\nconst bscConnector = new BscConnector({ supportedChainIds: [chainId] })\nconst bitKeepConnector = new BitKeepConnector({ supportedChainIds: [chainId] })\nexport const connectorsByName: { [connectorName in ConnectorNames]: any } = {\n  [ConnectorNames.Injected]: injected,\n  [ConnectorNames.WalletConnect]: walletconnect,\n  [ConnectorNames.BSC]: bscConnector,\n  [ConnectorNames.BitKeep]: bitKeepConnector,\n}\n\nexport const getLibrary = (provider): Web3 => {\n  return provider\n}\n","export { default as farmsConfig } from './farms'\nexport { default as poolsConfig } from './pools'\nexport { default as ifosConfig } from './ifo'\n","import { Team } from './types'\n\nconst teams: Team[] = [\n  {\n    id: 1,\n    name: 'Syrup Storm',\n    description: \"The storm's a-comin! Watch out! These bulls are stampeding in a syrupy surge!\",\n    images: {\n      lg: 'syrup-storm-lg.png',\n      md: 'syrup-storm-md.png',\n      sm: 'syrup-storm-sm.png',\n      alt: 'syrup-storm-alt.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/syrup-storm.png',\n    },\n    background: 'syrup-storm-bg.svg',\n    textColor: '#191326',\n    users: 0,\n    points: 0,\n  },\n  {\n    id: 2,\n    name: 'Fearsome Flippers',\n    description: \"The flippening is coming. Don't get in these bunnies' way, or you'll get flipped, too!\",\n    images: {\n      lg: 'fearsome-flippers-lg.png',\n      md: 'fearsome-flippers-md.png',\n      sm: 'fearsome-flippers-sm.png',\n      alt: 'fearsome-flippers-alt.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/fearsome-flippers.png',\n    },\n    background: 'fearsome-flippers-bg.svg',\n    textColor: '#FFFFFF',\n    users: 0,\n    points: 0,\n  },\n  {\n    id: 3,\n    name: 'Chaotic Cakers',\n    description: 'Can you stand the heat? Stay out of the kitchen or you might get burned to a crisp!',\n    images: {\n      lg: 'chaotic-cakers-lg.png',\n      md: 'chaotic-cakers-md.png',\n      sm: 'chaotic-cakers-sm.png',\n      alt: 'chaotic-cakers-alt.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/chaotic-cakers.png',\n    },\n    background: 'chaotic-cakers-bg.svg',\n    textColor: '#191326',\n    users: 0,\n    points: 0,\n  },\n]\n\nexport default teams\n","import merge from 'lodash/merge'\nimport teamsList from 'config/constants/teams'\nimport { getProfileContract } from 'utils/contractHelpers'\nimport { Team } from 'config/constants/types'\nimport makeBatchRequest from 'utils/makeBatchRequest'\nimport { TeamsById, TeamResponse } from 'state/types'\n\nconst profileContract = getProfileContract()\n\nexport const getTeam = async (teamId: number): Promise<Team> => {\n  try {\n    const {\n      0: teamName,\n      2: numberUsers,\n      3: numberPoints,\n      4: isJoinable,\n    } = await profileContract.methods.getTeamProfile(teamId).call()\n    const staticTeamInfo = teamsList.find((staticTeam) => staticTeam.id === teamId)\n\n    return merge({}, staticTeamInfo, {\n      isJoinable,\n      name: teamName,\n      users: numberUsers,\n      points: numberPoints,\n    })\n  } catch (error) {\n    return null\n  }\n}\n\n/**\n * Gets on-chain data and merges it with the existing static list of teams\n */\nexport const getTeams = async (): Promise<TeamsById> => {\n  try {\n    const teamsById = teamsList.reduce((accum, team) => {\n      return {\n        ...accum,\n        [team.id]: team,\n      }\n    }, {})\n    const nbTeams = await profileContract.methods.numberTeams().call()\n    const calls = []\n\n    for (let i = 1; i <= nbTeams; i++) {\n      calls.push(profileContract.methods.getTeamProfile(i).call)\n    }\n\n    const teamData = (await makeBatchRequest(calls)) as TeamResponse[]\n    const onChainTeamData = teamData.reduce((accum, team, index) => {\n      const { 0: teamName, 2: numberUsers, 3: numberPoints, 4: isJoinable } = team\n\n      return {\n        ...accum,\n        [index + 1]: {\n          name: teamName,\n          users: Number(numberUsers),\n          points: Number(numberPoints),\n          isJoinable,\n        },\n      }\n    }, {})\n\n    return merge({}, teamsById, onChainTeamData)\n  } catch (error) {\n    return null\n  }\n}\n","import BigNumber from 'bignumber.js'\nimport { Farm, Pool } from 'state/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\n\ntype UserData =\n  | Pool['userData']\n  | {\n      allowance: number | string\n      stakingTokenBalance: number | string\n      stakedBalance: number | string\n      pendingReward: number | string\n    }\n\nexport const transformUserData = (userData: UserData) => {\n  return {\n    allowance: userData ? new BigNumber(userData.allowance) : BIG_ZERO,\n    stakingTokenBalance: userData ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO,\n    stakedBalance: userData ? new BigNumber(userData.stakedBalance) : BIG_ZERO,\n    pendingReward: userData ? new BigNumber(userData.pendingReward) : BIG_ZERO,\n  }\n}\n\nexport const transformPool = (pool: Pool): Pool => {\n  const { totalStaked, stakingLimit, userData, ...rest } = pool\n\n  return {\n    ...rest,\n    userData: transformUserData(userData),\n    totalStaked: new BigNumber(totalStaked),\n    stakingLimit: new BigNumber(stakingLimit),\n  } as Pool\n}\n\nexport const getTokenPricesFromFarm = (farms: Farm[]) => {\n  return farms.reduce((prices, farm) => {\n    const quoteTokenAddress = getAddress(farm.quoteToken.address).toLocaleLowerCase()\n    const tokenAddress = getAddress(farm.token.address).toLocaleLowerCase()\n    /* eslint-disable no-param-reassign */\n    if (!prices[quoteTokenAddress]) {\n      prices[quoteTokenAddress] = new BigNumber(farm.quoteToken.busdPrice).toNumber()\n    }\n    if (!prices[tokenAddress]) {\n      prices[tokenAddress] = new BigNumber(farm.token.busdPrice).toNumber()\n    }\n    /* eslint-enable no-param-reassign */\n    return prices\n  }, {})\n}\n","import { Campaign } from './types'\n\n/**\n * id: The campaign id (required)\n * type: The type of the achievement\n * title: A string or an object to be translated.\n * Note: If the value is a string it is likely used as data in a translation object\n *\n * badge: Achievement avatar\n */\n\nconst campaigns: Campaign[] = [\n  {\n    id: '511110000',\n    type: 'ifo',\n    title: 'Kalmar',\n    badge: 'ifo-kalm.svg',\n  },\n  {\n    id: '511100000',\n    type: 'ifo',\n    title: 'Hotcross',\n    badge: 'ifo-hotcross.svg',\n  },\n  {\n    id: '511090000',\n    type: 'ifo',\n    title: 'Horizon Protocol',\n    badge: 'ifo-hzn.svg',\n  },\n  {\n    id: '511080000',\n    type: 'ifo',\n    title: 'Belt',\n    badge: 'ifo-belt.svg',\n  },\n  {\n    id: '511070000',\n    type: 'ifo',\n    title: 'Yieldwatch',\n    badge: 'ifo-watch.svg',\n  },\n  {\n    id: '511060000',\n    type: 'ifo',\n    title: 'Berry',\n    badge: 'ifo-bry.svg',\n  },\n  {\n    id: '511050000',\n    type: 'ifo',\n    title: 'Soteria',\n    badge: 'ifo-wsote.svg',\n  },\n  {\n    id: '511040000',\n    type: 'ifo',\n    title: 'Helmet',\n    badge: 'ifo-helmet.svg',\n  },\n  {\n    id: '511030000',\n    type: 'ifo',\n    title: 'Tenet',\n    badge: 'ifo-ten.svg',\n  },\n  {\n    id: '511020000',\n    type: 'ifo',\n    title: 'Ditto',\n    badge: 'ifo-ditto.svg',\n  },\n  {\n    id: '511010000',\n    type: 'ifo',\n    title: 'Blink',\n    badge: 'ifo-blk.svg',\n  },\n  {\n    id: '512010001',\n    type: 'teambattle',\n    title: 'Easter Champion: Gold',\n    badge: 'easter-champion-gold.svg',\n  },\n  {\n    id: '512010002',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010003',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010004',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010005',\n    type: 'teambattle',\n    title: 'Easter Participant: Gold',\n    badge: 'easter-participant-gold.svg',\n  },\n  {\n    id: '512010006',\n    type: 'teambattle',\n    title: 'Easter Champion: Silver',\n    badge: 'easter-champion-silver.svg',\n  },\n  {\n    id: '512010007',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010008',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010009',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010010',\n    type: 'teambattle',\n    title: 'Easter Participant: Silver',\n    badge: 'easter-participant-silver.svg',\n  },\n  {\n    id: '512010011',\n    type: 'teambattle',\n    title: 'Easter Champion: Bronze',\n    badge: 'easter-champion-bronze.svg',\n  },\n  {\n    id: '512010012',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010013',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010014',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010015',\n    type: 'teambattle',\n    title: 'Easter Participant: Bronze',\n    badge: 'easter-participant-bronze.svg',\n  },\n]\n\n/**\n * Transform the campaign config into a map. Keeps the config the same\n * as the others and allows easy access to a campaign by id\n */\nexport const campaignMap = new Map<string, Campaign>()\n\ncampaigns.forEach((campaign) => {\n  campaignMap.set(campaign.id, campaign)\n})\n\nexport default campaigns\n","import { useContext } from 'react'\nimport { ToastsContext } from 'contexts/ToastsContext'\n\nconst useToast = () => {\n  const toastContext = useContext(ToastsContext)\n\n  if (toastContext === undefined) {\n    throw new Error('Toasts context undefined')\n  }\n\n  return toastContext\n}\n\nexport default useToast\n","import { useCallback } from 'react'\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\nimport { NoBscProviderError } from '@binance-chain/bsc-connector'\nimport {\n  NoEthereumProviderError,\n  UserRejectedRequestError as UserRejectedRequestErrorInjected,\n} from '@web3-react/injected-connector'\nimport {\n  UserRejectedRequestError as UserRejectedRequestErrorWalletConnect,\n  WalletConnectConnector,\n} from '@web3-react/walletconnect-connector'\nimport { ConnectorNames, connectorLocalStorageKey } from '@pancakeswap/uikit'\nimport { connectorsByName } from 'utils/web3React'\nimport { setupNetwork } from 'utils/wallet'\nimport useToast from 'hooks/useToast'\nimport { profileClear } from 'state/profile'\nimport { useAppDispatch } from 'state'\nimport { useTranslation } from 'contexts/Localization'\n\ndeclare global { interface Window {bitkeep: any;}}\nconst useAuth = () => {\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const { activate, deactivate } = useWeb3React()\n  const { toastError } = useToast()\n\n  const login = useCallback(\n    async (connectorID: ConnectorNames) => {\n      const connector = connectorsByName[connectorID]\n      if (connector) {\n        activate(connector, async (error: Error) => {\n          if (error instanceof UnsupportedChainIdError) {\n            const hasSetup = await setupNetwork(connector)\n            if (hasSetup) {\n              activate(connector)\n            }\n          } else {\n            window.localStorage.removeItem(connectorLocalStorageKey)\n            if (error instanceof NoEthereumProviderError || error instanceof NoBscProviderError) {\n              toastError(t('Provider Error'), t('No provider was found'))\n            } else if (\n              error instanceof UserRejectedRequestErrorInjected ||\n              error instanceof UserRejectedRequestErrorWalletConnect\n            ) {\n              if (connector instanceof WalletConnectConnector) {\n                const walletConnector = connector as WalletConnectConnector\n                walletConnector.walletConnectProvider = null\n              }\n              toastError(t('Authorization Error'), t('Please authorize to access your account'))\n            } else {\n              toastError(error.name, error.message)\n            }\n          }\n        })\n      } else {\n        toastError(t('Unable to find connector'), t('The connector config is wrong'))\n      }\n    },\n    [t, activate, toastError],\n  )\n\n  const logout = useCallback(() => {\n    dispatch(profileClear())\n    deactivate()\n    // This localStorage key is set by @web3-react/walletconnect-connector\n    if (window.localStorage.getItem('walletconnect')) {\n      connectorsByName.walletconnect.close()\n      connectorsByName.walletconnect.walletConnectProvider = null\n    }\n  }, [deactivate, dispatch])\n\n  return { login, logout }\n}\n\nexport default useAuth\n","import Nfts, { IPFS_GATEWAY, nftSources } from 'config/constants/nfts'\nimport { Nft, NftType } from 'config/constants/types'\nimport { getAddress } from './addressHelpers'\nimport { getErc721Contract } from './contractHelpers'\n\n/**\n * Gets the identifier key based on the nft address\n * Helpful for looking up the key when all you have is the address\n */\nexport const getIdentifierKeyFromAddress = (nftAddress: string) => {\n  const nftSource = Object.values(nftSources).find((nftSourceEntry) => {\n    const address = getAddress(nftSourceEntry.address)\n    return address === nftAddress\n  })\n\n  return nftSource ? nftSource.identifierKey : null\n}\n\n/**\n * Some sources like Pancake do not return HTTP tokenURI's\n */\nexport const getTokenUrl = (tokenUri: string) => {\n  if (tokenUri.startsWith('ipfs://')) {\n    return `${IPFS_GATEWAY}/ipfs/${tokenUri.slice(6)}`\n  }\n\n  return tokenUri\n}\n\nexport const getAddressByType = (type: NftType) => {\n  return getAddress(nftSources[type].address)\n}\n\nexport const getTokenUriData = async (nftAddress: string, tokenId: number) => {\n  try {\n    const contract = getErc721Contract(nftAddress)\n    const tokenUri = await contract.methods.tokenURI(tokenId).call()\n    const uriDataResponse = await fetch(getTokenUrl(tokenUri))\n\n    if (!uriDataResponse.ok) {\n      return null\n    }\n\n    const uriData = await uriDataResponse.json()\n    return uriData\n  } catch (error) {\n    console.error('getTokenUriData', error)\n    return null\n  }\n}\n\nexport const getNftByTokenId = async (nftAddress: string, tokenId: number): Promise<Nft | null> => {\n  const uriData = await getTokenUriData(nftAddress, tokenId)\n  const identifierKey = getIdentifierKeyFromAddress(nftAddress)\n\n  // Bail out early if we have no uriData, identifierKey, or the value does not\n  // exist in the object\n  if (!uriData) {\n    return null\n  }\n\n  if (!identifierKey) {\n    return null\n  }\n\n  if (!uriData[identifierKey]) {\n    return null\n  }\n\n  return Nfts.find((nft) => {\n    return uriData[identifierKey].includes(nft.identifier)\n  })\n}\n","import tokens from './tokens'\nimport farms from './farms'\nimport { Ifo, Token } from './types'\n\n// const cakeBnbLpToken: Token = {\n//   symbol: farms[1].lpSymbol,\n//   address: farms[1].lpAddresses,\n//   decimals: 18,\n// }\n\nconst ifos: Ifo[] = [\n//   {\n//     id: 'kalmar',\n//     address: '0x1aFB32b76696CdF05593Ca3f3957AEFB23a220FB',\n//     isActive: true,\n//     name: 'Kalmar (KALM)',\n//     poolBasic: {\n//       saleAmount: '375,000 KALM',\n//       raiseAmount: '$750,000',\n//       cakeToBurn: '$375,000',\n//       distributionRatio: 0.3,\n//     },\n//     poolUnlimited: {\n//       saleAmount: '875,000 KALM',\n//       raiseAmount: '$2,500,000',\n//       cakeToBurn: '$1,250,000',\n//       distributionRatio: 0.7,\n//     },\n//     currency: cakeBnbLpToken,\n//     token: tokens.kalm,\n//     releaseBlockNumber: 7707736,\n//     campaignId: '511110000',\n//     articleUrl: 'https://pancakeswap.medium.com/kalmar-kalm-ifo-to-be-hosted-on-pancakeswap-4540059753e4',\n//     tokenOfferingPrice: 2.0,\n//     version: 2,\n//   },\n//   {\n//     id: 'hotcross',\n//     address: '0xb664cdbe385656F8c54031c0CB12Cea55b584b63',\n//     isActive: false,\n//     name: 'Hot Cross (HOTCROSS)',\n//     poolBasic: {\n//       saleAmount: '15,000,000 HOTCROSS',\n//       raiseAmount: '$750,000',\n//       cakeToBurn: '$375,000',\n//       distributionRatio: 0.3,\n//     },\n//     poolUnlimited: {\n//       saleAmount: '35,000,000 HOTCROSS',\n//       raiseAmount: '$1,750,000',\n//       cakeToBurn: '$875,000',\n//       distributionRatio: 0.7,\n//     },\n//     currency: cakeBnbLpToken,\n//     token: tokens.hotcross,\n//     releaseBlockNumber: 7477900,\n//     campaignId: '511100000',\n//     articleUrl: 'https://pancakeswap.medium.com/hot-cross-hotcross-ifo-to-be-hosted-on-pancakeswap-10e70f1f6841',\n//     tokenOfferingPrice: 0.05,\n//     version: 2,\n//   },\n//   {\n//     id: 'horizon',\n//     address: '0x6137B571f7F1E44839ae10310a08be86D1A4D03B',\n//     isActive: false,\n//     name: 'Horizon Protocol (HZN)',\n//     poolBasic: {\n//       saleAmount: '3,000,000 HZN',\n//       raiseAmount: '$750,000',\n//       cakeToBurn: '$375,000',\n//       distributionRatio: 0.3,\n//     },\n//     poolUnlimited: {\n//       saleAmount: '7,000,000 HZN',\n//       raiseAmount: '$1,750,000',\n//       cakeToBurn: '$875,000',\n//       distributionRatio: 0.7,\n//     },\n//     currency: cakeBnbLpToken,\n//     token: tokens.hzn,\n//     releaseBlockNumber: 6581111,\n//     campaignId: '511090000',\n//     articleUrl: 'https://pancakeswap.medium.com/horizon-protocol-hzn-ifo-to-be-hosted-on-pancakeswap-51f79601c9d8',\n//     tokenOfferingPrice: 0.25,\n//     version: 2,\n//   },\n//   {\n//     id: 'belt',\n//     address: '0xc9FBedC033a1c479a6AD451ffE463025E92a1d38',\n//     isActive: false,\n//     name: 'Belt (BELT)',\n//     poolUnlimited: {\n//       saleAmount: '150,000 BELT',\n//       raiseAmount: '$3,000,000',\n//       cakeToBurn: '$1,500,000',\n//       distributionRatio: 1,\n//     },\n//     currency: cakeBnbLpToken,\n//     token: tokens.belt,\n//     releaseBlockNumber: 5493919,\n//     campaignId: '511080000',\n//     articleUrl: 'https://pancakeswap.medium.com/belt-fi-belt-ifo-to-be-hosted-on-pancakeswap-353585117e32',\n//     tokenOfferingPrice: null,\n//     version: 1,\n//   },\n//   {\n//     id: 'watch',\n//     address: '0x55344b55C71Ad8834C397E6e08dF5195cF84fe6d',\n//     isActive: false,\n//     name: 'Yieldwatch (WATCH)',\n//     poolUnlimited: {\n//       saleAmount: '8,000,000 WATCH',\n//       raiseAmount: '$800,000',\n//       cakeToBurn: '$400,000',\n//       distributionRatio: 1,\n//     },\n//     currency: cakeBnbLpToken,\n//     token: tokens.watch,\n//     releaseBlockNumber: 5294924,\n//     campaignId: '511070000',\n//     articleUrl: 'https://pancakeswap.medium.com/yieldwatch-watch-ifo-to-be-hosted-on-pancakeswap-d24301f17241',\n//     tokenOfferingPrice: null,\n//     version: 1,\n//   },\n//   {\n//     id: 'berry',\n//     address: '0x5d028cE3435B2bB9AceBfaC599EEbA1ccD63d7dd',\n//     isActive: false,\n//     name: 'Berry (BRY)',\n//     poolUnlimited: {\n//       saleAmount: '2,000,000 BRY',\n//       raiseAmount: '$1,000,000',\n//       cakeToBurn: '$500,000',\n//       distributionRatio: 1,\n//     },\n//     currency: cakeBnbLpToken,\n//     token: tokens.bry,\n//     releaseBlockNumber: 4750968,\n//     campaignId: '511060000',\n//     articleUrl: 'https://pancakeswap.medium.com/berry-bry-ifo-to-be-hosted-on-pancakeswap-b4f9095e9cdb',\n//     tokenOfferingPrice: null,\n//     version: 1,\n//   },\n//   {\n//     id: 'soteria',\n//     address: '0x9C21123D94b93361a29B2C2EFB3d5CD8B17e0A9e',\n//     isActive: false,\n//     name: 'Soteria (wSOTE)',\n//     poolUnlimited: {\n//       saleAmount: '1,500,000 wSOTE',\n//       raiseAmount: '$525,000',\n//       cakeToBurn: '$262,500',\n//       distributionRatio: 1,\n//     },\n//     currency: cakeBnbLpToken,\n//     token: tokens.wsote,\n//     releaseBlockNumber: 4086064,\n//     campaignId: '511050000',\n//     articleUrl: 'https://pancakeswap.medium.com/soteria-sota-ifo-to-be-hosted-on-pancakeswap-64b727c272ae',\n//     tokenOfferingPrice: null,\n//     version: 1,\n//   },\n//   {\n//     id: 'helmet',\n//     address: '0xa32509d760ee47Eb2Be96D338b5d69B5FBa4eFEB',\n//     isActive: false,\n//     name: 'Helmet.insure (Helmet)',\n//     poolUnlimited: {\n//       saleAmount: '10,000,000 Helmet',\n//       raiseAmount: '$1,000,000',\n//       cakeToBurn: '$500,000',\n//       distributionRatio: 1,\n//     },\n//     currency: cakeBnbLpToken,\n//     token: tokens.helmet,\n//     releaseBlockNumber: 3771926,\n//     campaignId: '511040000',\n//     articleUrl: 'https://pancakeswap.medium.com/1-000-000-helmet-helmet-ifo-to-be-hosted-on-pancakeswap-3379a2a89a67',\n//     tokenOfferingPrice: null,\n//     version: 1,\n//   },\n//   {\n//     id: 'tenet',\n//     address: '0xB922aA19A2603A07C6C9ED6c236618C9bac51f06',\n//     isActive: false,\n//     name: 'Tenet (TEN)',\n//     poolUnlimited: {\n//       saleAmount: '1,000,000 TEN',\n//       raiseAmount: '$1,000,000',\n//       cakeToBurn: '$500,000',\n//       distributionRatio: 1,\n//     },\n//     currency: cakeBnbLpToken,\n//     token: tokens.ten,\n//     releaseBlockNumber: 3483883,\n//     campaignId: '511030000',\n//     articleUrl: 'https://pancakeswap.medium.com/tenet-ten-ifo-to-be-hosted-on-pancakeswap-b7e1eb4cb272',\n//     tokenOfferingPrice: null,\n//     version: 1,\n//   },\n//   {\n//     id: 'ditto',\n//     address: '0x570c9eB19553526Fb35895a531928E19C7D20788',\n//     isActive: false,\n//     name: 'Ditto (DITTO)',\n//     poolUnlimited: {\n//       saleAmount: '700,000 DITTO',\n//       raiseAmount: '$630,000',\n//       cakeToBurn: '$315,000',\n//       distributionRatio: 1,\n//     },\n//     currency: cakeBnbLpToken,\n//     token: tokens.ditto,\n//     releaseBlockNumber: 3279767,\n//     campaignId: '511020000',\n//     articleUrl: 'https://pancakeswap.medium.com/ditto-money-ditto-ifo-to-be-hosted-on-pancakeswap-342da3059a66',\n//     tokenOfferingPrice: null,\n//     version: 1,\n//   },\n//   {\n//     id: 'blink',\n//     address: '0x44a9Cc8463EC00937242b660BF65B10365d99baD',\n//     isActive: false,\n//     name: 'BLINk (BLK)',\n//     poolUnlimited: {\n//       saleAmount: '100,000,000 BLINK',\n//       raiseAmount: '$1,000,000',\n//       cakeToBurn: '$500,000',\n//       distributionRatio: 1,\n//     },\n//     currency: cakeBnbLpToken,\n//     token: tokens.blink,\n//     releaseBlockNumber: 3279767,\n//     campaignId: '511010000',\n//     articleUrl: 'https://medium.com/pancakeswap/1-000-000-ifo-blink-joins-pancakeswap-15841800bdd8',\n//     tokenOfferingPrice: null,\n//     version: 1,\n//   },\n]\n\nexport default ifos\n","/* eslint-disable no-param-reassign */\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { BlockState } from '../types'\n\nconst initialState: BlockState = { currentBlock: 0, initialBlock: 0 }\n\nexport const blockSlice = createSlice({\n  name: 'Block',\n  initialState,\n  reducers: {\n    setBlock: (state, action: PayloadAction<number>) => {\n      if (state.initialBlock === 0) {\n        state.initialBlock = action.payload\n      }\n\n      state.currentBlock = action.payload\n    },\n  },\n})\n\n// Actions\nexport const { setBlock } = blockSlice.actions\n\nexport default blockSlice.reducer\n","/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { CollectiblesState } from 'state/types'\nimport { nftSources } from 'config/constants/nfts'\nimport { NftType } from 'config/constants/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport { getErc721Contract } from 'utils/contractHelpers'\nimport { getNftByTokenId } from 'utils/collectibles'\n\nconst initialState: CollectiblesState = {\n  isInitialized: false,\n  isLoading: true,\n  data: {},\n}\n\ntype NftSourceItem = [number, string]\n\n// Thunks\nexport const fetchWalletNfts = createAsyncThunk<NftSourceItem[], string>(\n  'collectibles/fetchWalletNfts',\n  async (account) => {\n    // For each nft source get nft data\n    const nftSourcePromises = Object.keys(nftSources).map(async (nftSourceType) => {\n      const { address: addressObj } = nftSources[nftSourceType as NftType]\n      const address = getAddress(addressObj)\n      const contract = getErc721Contract(address)\n\n      const getTokenIdAndData = async (index: number) => {\n        try {\n          const tokenId = await contract.methods.tokenOfOwnerByIndex(account, index).call()\n          const walletNft = await getNftByTokenId(address, tokenId)\n          return [Number(tokenId), walletNft.identifier]\n        } catch (error) {\n          console.error('getTokenIdAndData', error)\n          return null\n        }\n      }\n\n      const balanceOfResponse = await contract.methods.balanceOf(account).call()\n      const balanceOf = Number(balanceOfResponse)\n\n      if (balanceOf === 0) {\n        return []\n      }\n\n      const nftDataFetchPromises = []\n\n      // For each index get the tokenId and data associated with it\n      for (let i = 0; i < balanceOf; i++) {\n        nftDataFetchPromises.push(getTokenIdAndData(i))\n      }\n\n      const nftData = await Promise.all(nftDataFetchPromises)\n      return nftData\n    })\n\n    const nftSourceData = await Promise.all(nftSourcePromises)\n\n    return nftSourceData.flat()\n  },\n)\n\nexport const collectiblesSlice = createSlice({\n  name: 'collectibles',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(fetchWalletNfts.pending, (state) => {\n      state.isLoading = true\n    })\n    builder.addCase(fetchWalletNfts.fulfilled, (state, action) => {\n      state.isLoading = false\n      state.isInitialized = true\n      state.data = action.payload.reduce((accum, association) => {\n        if (!association) {\n          return accum\n        }\n\n        const [tokenId, identifier] = association as NftSourceItem\n\n        return {\n          ...accum,\n          [identifier]: accum[identifier] ? [...accum[identifier], tokenId] : [tokenId],\n        }\n      }, {})\n    })\n  },\n})\n\nexport default collectiblesSlice.reducer\n","import { request, gql } from 'graphql-request'\nimport { campaignMap } from 'config/constants/campaigns'\nimport { GRAPH_API_PROFILE } from 'config/constants/endpoints'\nimport { Achievement } from 'state/types'\nimport { getAchievementTitle, getAchievementDescription } from 'utils/achievements'\n\ninterface UserPointIncreaseEvent {\n  campaignId: string\n  id: string // wallet address\n  points: string\n}\n\n/**\n * Gets all user point increase events on the profile filtered by wallet address\n */\nexport const getUserPointIncreaseEvents = async (account: string): Promise<UserPointIncreaseEvent[]> => {\n  try {\n    const { user } = await request(\n      GRAPH_API_PROFILE,\n      gql`\n        query getUserPointIncreaseEvents($account: ID!) {\n          user(id: $account) {\n            points {\n              id\n              campaignId\n              points\n            }\n          }\n        }\n      `,\n      {\n        account: account.toLowerCase(),\n      },\n    )\n\n    return user.points\n  } catch (error) {\n    return null\n  }\n}\n\n/**\n * Gets all user point increase events and adds achievement meta\n */\nexport const getAchievements = async (account: string): Promise<Achievement[]> => {\n  const pointIncreaseEvents = await getUserPointIncreaseEvents(account)\n\n  if (!pointIncreaseEvents) {\n    return []\n  }\n\n  return pointIncreaseEvents.reduce((accum, userPoint) => {\n    const campaignMeta = campaignMap.get(userPoint.campaignId)\n\n    return [\n      ...accum,\n      {\n        id: userPoint.campaignId,\n        type: campaignMeta.type,\n        address: userPoint.id,\n        title: getAchievementTitle(campaignMeta),\n        description: getAchievementDescription(campaignMeta),\n        badge: campaignMeta.badge,\n        points: Number(userPoint.points),\n      },\n    ]\n  }, [])\n}\n","/* eslint-disable no-param-reassign */\nimport { createSlice, Dispatch, PayloadAction } from '@reduxjs/toolkit'\nimport { AchievementState, Achievement } from '../types'\nimport { getAchievements } from './helpers'\n\nconst initialState: AchievementState = {\n  data: [],\n}\n\nexport const achievementSlice = createSlice({\n  name: 'achievements',\n  initialState,\n  reducers: {\n    addAchievement: (state, action: PayloadAction<Achievement>) => {\n      state.data.push(action.payload)\n    },\n    addAchievements: (state, action: PayloadAction<Achievement[]>) => {\n      state.data = [...state.data, ...action.payload]\n    },\n    setAchievements: (state, action: PayloadAction<Achievement[]>) => {\n      state.data = action.payload\n    },\n    clearAchievements: (state) => {\n      state.data = []\n    },\n  },\n})\n\n// Actions\nexport const { addAchievement, addAchievements, setAchievements, clearAchievements } = achievementSlice.actions\n\n// Thunks\nexport const fetchAchievements = (account: string) => async (dispatch: Dispatch) => {\n  try {\n    const achievements = await getAchievements(account)\n    dispatch(setAchievements(achievements))\n  } catch (error) {\n    console.error(error)\n  }\n}\n\nexport default achievementSlice.reducer\n","import { Farm } from 'state/types'\n\n/**\n * Returns the first farm with a quote token that matches from an array of preferred quote tokens\n * @param farms Array of farms\n * @param preferredQuoteTokens Array of preferred quote tokens\n * @returns A preferred farm, if found - or the first element of the farms array\n */\nexport const filterFarmsByQuoteToken = (farms: Farm[], preferredQuoteTokens: string[] = ['BUSD', 'wBNB']): Farm => {\n  const preferredFarm = farms.find((farm) => {\n    return preferredQuoteTokens.some((quoteToken) => {\n      return farm.quoteToken.symbol === quoteToken\n    })\n  })\n  return preferredFarm || farms[0]\n}\n\nexport default filterFarmsByQuoteToken\n","import React, { useState } from 'react'\nimport { ThemeProvider as SCThemeProvider } from 'styled-components'\nimport { light, dark } from '@pancakeswap/uikit'\n\nconst CACHE_KEY = 'IS_DARK'\n\nconst ThemeContext = React.createContext({ isDark: null, toggleTheme: () => null })\n\nconst ThemeContextProvider = ({ children }) => {\n  const [isDark, setIsDark] = useState(() => {\n    const isDarkUserSetting = localStorage.getItem(CACHE_KEY)\n    return isDarkUserSetting ? JSON.parse(isDarkUserSetting) : false\n  })\n\n  const toggleTheme = () => {\n    setIsDark((prevState) => {\n      localStorage.setItem(CACHE_KEY, JSON.stringify(!prevState))\n      return !prevState\n    })\n  }\n\n  return (\n    <ThemeContext.Provider value={{ isDark, toggleTheme }}>\n      <SCThemeProvider theme={isDark ? dark : light}>{children}</SCThemeProvider>\n    </ThemeContext.Provider>\n  )\n}\n\nexport { ThemeContext, ThemeContextProvider }\n","import React, { createContext, ReactNode, useCallback, useState } from 'react'\nimport { kebabCase } from 'lodash'\nimport { Toast, toastTypes } from '@pancakeswap/uikit'\nimport { ToastContextApi } from './types'\n\nexport const ToastsContext = createContext<ToastContextApi>(undefined)\n\nexport const ToastsProvider: React.FC = ({ children }) => {\n  const [toasts, setToasts] = useState<ToastContextApi['toasts']>([])\n\n  const toast = useCallback(\n    ({ title, description, type }: Omit<Toast, 'id'>) => {\n      setToasts((prevToasts) => {\n        const id = kebabCase(title)\n\n        // Remove any existing toasts with the same id\n        const currentToasts = prevToasts.filter((prevToast) => prevToast.id !== id)\n\n        return [\n          {\n            id,\n            title,\n            description,\n            type,\n          },\n          ...currentToasts,\n        ]\n      })\n    },\n    [setToasts],\n  )\n\n  const toastError = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.DANGER })\n  }\n  const toastInfo = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.INFO })\n  }\n  const toastSuccess = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.SUCCESS })\n  }\n  const toastWarning = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.WARNING })\n  }\n  const clear = () => setToasts([])\n  const remove = (id: string) => {\n    setToasts((prevToasts) => prevToasts.filter((prevToast) => prevToast.id !== id))\n  }\n\n  return (\n    <ToastsContext.Provider value={{ toasts, clear, remove, toastError, toastInfo, toastSuccess, toastWarning }}>\n      {children}\n    </ToastsContext.Provider>\n  )\n}\n","import { useEffect, useRef } from 'react'\n\nconst useTabVisibility = () => {\n  const tabVisibleRef = useRef(true)\n\n  useEffect(() => {\n    const onVisibilityChange = () => {\n      tabVisibleRef.current = !document.hidden\n    }\n\n    window.addEventListener('visibilitychange', onVisibilityChange)\n\n    return () => {\n      window.removeEventListener('visibilitychange', onVisibilityChange)\n    }\n  }, [])\n\n  return { tabVisibleRef }\n}\n\nexport default useTabVisibility\n","import React, { useState, useEffect } from 'react'\nimport useTabVisibility from 'hooks/useTabVisibility'\n\nconst FAST_INTERVAL = 10000\nconst SLOW_INTERVAL = 60000\n\nconst RefreshContext = React.createContext({ slow: 0, fast: 0 })\n\n// This context maintain 2 counters that can be used as a dependencies on other hooks to force a periodic refresh\nconst RefreshContextProvider = ({ children }) => {\n  const [slow, setSlow] = useState(0)\n  const [fast, setFast] = useState(0)\n  const { tabVisibleRef } = useTabVisibility()\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      if (tabVisibleRef.current) {\n        setFast((prev) => prev + 1)\n      }\n    }, FAST_INTERVAL)\n    return () => clearInterval(interval)\n  }, [tabVisibleRef])\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      if (tabVisibleRef.current) {\n        setSlow((prev) => prev + 1)\n      }\n    }, SLOW_INTERVAL)\n    return () => clearInterval(interval)\n  }, [tabVisibleRef])\n\n  return <RefreshContext.Provider value={{ slow, fast }}>{children}</RefreshContext.Provider>\n}\n\nexport { RefreshContext, RefreshContextProvider }\n","import BigNumber from 'bignumber.js'\n\nexport const BIG_ZERO = new BigNumber(0)\nexport const BIG_ONE = new BigNumber(1)\nexport const BIG_NINE = new BigNumber(9)\nexport const BIG_TEN = new BigNumber(10)\n","export const tokenEarnedPerThousandDollarsCompounding = ({\n  numberOfDays,\n  farmApr,\n  tokenPrice,\n  roundingDecimals = 2,\n  compoundFrequency = 1,\n  performanceFee = 0,\n}) => {\n  // Everything here is worked out relative to a year, with the asset compounding at the compoundFrequency rate. 1 = once per day\n  const timesCompounded = 365 * compoundFrequency\n  // We use decimal values rather than % in the math for both APY and the number of days being calculates as a proportion of the year\n  let aprAsDecimal = farmApr / 100\n\n  if (performanceFee) {\n    // Reduce the APR by the % performance fee\n    const feeRelativeToApr = (farmApr / 100) * performanceFee\n    const aprAfterFee = farmApr - feeRelativeToApr\n    aprAsDecimal = aprAfterFee / 100\n  }\n\n  const daysAsDecimalOfYear = numberOfDays / 365\n  // Calculate the starting TOKEN balance with a dollar balance of $1000.\n  const principal = 1000 / tokenPrice\n  // This is a translation of the typical mathematical compounding APY formula. Details here: https://www.calculatorsoup.com/calculators/financial/compound-interest-calculator.php\n  const finalAmount = principal * (1 + aprAsDecimal / timesCompounded) ** (timesCompounded * daysAsDecimalOfYear)\n  // To get the TOKEN amount earned, deduct the amount after compounding (finalAmount) from the starting TOKEN balance (principal)\n  const interestEarned = finalAmount - principal\n\n  return parseFloat(interestEarned.toFixed(roundingDecimals))\n}\n\nexport const getRoi = ({ amountEarned, amountInvested }) => {\n  const percentage = (amountEarned / amountInvested) * 100\n  return percentage\n}\n","import { Campaign } from 'config/constants/types'\nimport { getPointCenterIfoContract } from 'utils/contractHelpers'\nimport ifosList from 'config/constants/ifo'\nimport { campaignMap } from 'config/constants/campaigns'\nimport { Achievement, TranslatableText } from 'state/types'\nimport makeBatchRequest from './makeBatchRequest'\n\ninterface IfoMapResponse {\n  thresholdToClaim: string\n  campaignId: string\n  numberPoints: string\n}\n\nexport const getAchievementTitle = (campaign: Campaign): TranslatableText => {\n  switch (campaign.type) {\n    case 'ifo':\n      return {\n        key: 'IFO Shopper: %title%',\n        data: {\n          title: campaign.title as string,\n        },\n      }\n    default:\n      return campaign.title\n  }\n}\n\nexport const getAchievementDescription = (campaign: Campaign): TranslatableText => {\n  switch (campaign.type) {\n    case 'ifo':\n      return {\n        key: 'Committed more than $5 worth of LP in the %title% IFO',\n        data: {\n          title: campaign.title as string,\n        },\n      }\n    default:\n      return campaign.description\n  }\n}\n\n/**\n * Checks if a wallet is eligible to claim points from valid IFO's\n */\nexport const getClaimableIfoData = async (account: string): Promise<Achievement[]> => {\n  const ifoCampaigns = ifosList.filter((ifoItem) => ifoItem.campaignId !== undefined)\n  const ifoCampaignAddresses = ifoCampaigns.map((ifoItem) => ifoItem.address)\n  const pointCenterContract = getPointCenterIfoContract()\n\n  // Returns the claim status of every IFO with a campaign ID\n  const claimStatuses = (await pointCenterContract.methods\n    .checkClaimStatuses(account, ifoCampaignAddresses)\n    .call()) as boolean[]\n\n  // Get IFO data for all IFO's that are eligible to claim\n  const claimableIfoData = (await makeBatchRequest(\n    claimStatuses.reduce((accum, claimStatus, index) => {\n      if (claimStatus === true) {\n        return [...accum, pointCenterContract.methods.ifos(ifoCampaignAddresses[index]).call]\n      }\n\n      return accum\n    }, []),\n  )) as IfoMapResponse[]\n\n  // Transform response to an Achievement\n  return claimableIfoData.reduce((accum, claimableIfoDataItem) => {\n    if (!campaignMap.has(claimableIfoDataItem.campaignId)) {\n      return accum\n    }\n\n    const campaignMeta = campaignMap.get(claimableIfoDataItem.campaignId)\n    const { address } = ifoCampaigns.find((ifoCampaign) => ifoCampaign.campaignId === claimableIfoDataItem.campaignId)\n\n    return [\n      ...accum,\n      {\n        address,\n        id: claimableIfoDataItem.campaignId,\n        type: 'ifo',\n        title: getAchievementTitle(campaignMeta),\n        description: getAchievementDescription(campaignMeta),\n        badge: campaignMeta.badge,\n        points: Number(claimableIfoDataItem.numberPoints),\n      },\n    ]\n  }, [])\n}\n","/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport maxBy from 'lodash/maxBy'\nimport merge from 'lodash/merge'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Bet, HistoryFilter, Market, PredictionsState, PredictionStatus, Round } from 'state/types'\nimport {\n  makeFutureRoundResponse,\n  transformRoundResponse,\n  getBetHistory,\n  transformBetResponse,\n  getBet,\n  makeRoundData,\n} from './helpers'\n\nconst initialState: PredictionsState = {\n  status: PredictionStatus.INITIAL,\n  isLoading: false,\n  isHistoryPaneOpen: false,\n  isChartPaneOpen: false,\n  isFetchingHistory: false,\n  historyFilter: HistoryFilter.ALL,\n  currentEpoch: 0,\n  currentRoundStartBlockNumber: 0,\n  intervalBlocks: 100,\n  bufferBlocks: 2,\n  minBetAmount: '1000000000000000',\n  lastOraclePrice: BIG_ZERO.toJSON(),\n  rounds: {},\n  history: {},\n  bets: {},\n}\n\n// Thunks\nexport const fetchBet = createAsyncThunk<{ account: string; bet: Bet }, { account: string; id: string }>(\n  'predictions/fetchBet',\n  async ({ account, id }) => {\n    const response = await getBet(id)\n    const bet = transformBetResponse(response)\n    return { account, bet }\n  },\n)\n\nexport const fetchRoundBet = createAsyncThunk<\n  { account: string; roundId: string; bet: Bet },\n  { account: string; roundId: string }\n>('predictions/fetchRoundBet', async ({ account, roundId }) => {\n  const betResponses = await getBetHistory({\n    user: account.toLowerCase(),\n    round: roundId,\n  })\n\n  // This should always return 0 or 1 bet because a user can only place\n  // one bet per round\n  if (betResponses && betResponses.length === 1) {\n    const [betResponse] = betResponses\n    return { account, roundId, bet: transformBetResponse(betResponse) }\n  }\n\n  return { account, roundId, bet: null }\n})\n\n/**\n * Used to poll the user bets of the current round cards\n */\nexport const fetchCurrentBets = createAsyncThunk<\n  { account: string; bets: Bet[] },\n  { account: string; roundIds: string[] }\n>('predictions/fetchCurrentBets', async ({ account, roundIds }) => {\n  const betResponses = await getBetHistory({\n    user: account.toLowerCase(),\n    round_in: roundIds,\n  })\n\n  return { account, bets: betResponses.map(transformBetResponse) }\n})\n\nexport const fetchHistory = createAsyncThunk<{ account: string; bets: Bet[] }, { account: string; claimed?: boolean }>(\n  'predictions/fetchHistory',\n  async ({ account, claimed }) => {\n    const response = await getBetHistory({\n      user: account.toLowerCase(),\n      claimed,\n    })\n    const bets = response.map(transformBetResponse)\n\n    return { account, bets }\n  },\n)\n\nexport const predictionsSlice = createSlice({\n  name: 'predictions',\n  initialState,\n  reducers: {\n    setPredictionStatus: (state, action: PayloadAction<PredictionStatus>) => {\n      state.status = action.payload\n    },\n    setHistoryPaneState: (state, action: PayloadAction<boolean>) => {\n      state.isHistoryPaneOpen = action.payload\n      state.historyFilter = HistoryFilter.ALL\n    },\n    setChartPaneState: (state, action: PayloadAction<boolean>) => {\n      state.isChartPaneOpen = action.payload\n    },\n    setHistoryFilter: (state, action: PayloadAction<HistoryFilter>) => {\n      state.historyFilter = action.payload\n    },\n    initialize: (state, action: PayloadAction<PredictionsState>) => {\n      return {\n        ...state,\n        ...action.payload,\n      }\n    },\n    updateMarketData: (state, action: PayloadAction<{ rounds: Round[]; market: Market }>) => {\n      const { rounds, market } = action.payload\n      const newRoundData = makeRoundData(rounds)\n      const incomingCurrentRound = maxBy(rounds, 'epoch')\n\n      if (state.currentEpoch !== incomingCurrentRound.epoch) {\n        // Add new round\n        const newestRound = maxBy(rounds, 'epoch') as Round\n        const futureRound = transformRoundResponse(\n          makeFutureRoundResponse(newestRound.epoch + 2, newestRound.startBlock + state.intervalBlocks),\n        )\n\n        newRoundData[futureRound.id] = futureRound\n      }\n\n      state.currentEpoch = incomingCurrentRound.epoch\n      state.currentRoundStartBlockNumber = incomingCurrentRound.startBlock\n      state.status = market.paused ? PredictionStatus.PAUSED : PredictionStatus.LIVE\n      state.rounds = { ...state.rounds, ...newRoundData }\n    },\n    setCurrentEpoch: (state, action: PayloadAction<number>) => {\n      state.currentEpoch = action.payload\n    },\n    markBetAsCollected: (state, action: PayloadAction<{ account: string; roundId: string }>) => {\n      const { account, roundId } = action.payload\n      const accountBets = state.bets[account]\n\n      if (accountBets && accountBets[roundId]) {\n        accountBets[roundId].claimed = true\n      }\n    },\n    markPositionAsEntered: (state, action: PayloadAction<{ account: string; roundId: string; bet: Bet }>) => {\n      const { account, roundId, bet } = action.payload\n\n      state.bets = {\n        ...state.bets,\n        [account]: {\n          ...state.bets[account],\n          [roundId]: bet,\n        },\n      }\n    },\n    setLastOraclePrice: (state, action: PayloadAction<string>) => {\n      state.lastOraclePrice = action.payload\n    },\n  },\n  extraReducers: (builder) => {\n    // Get unclaimed bets\n    builder.addCase(fetchCurrentBets.fulfilled, (state, action) => {\n      const { account, bets } = action.payload\n      const betData = bets.reduce((accum, bet) => {\n        return {\n          ...accum,\n          [bet.round.id]: bet,\n        }\n      }, {})\n\n      state.bets = merge({}, state.bets, {\n        [account]: betData,\n      })\n    })\n\n    // Get round bet\n    builder.addCase(fetchRoundBet.fulfilled, (state, action) => {\n      const { account, roundId, bet } = action.payload\n\n      if (bet) {\n        state.bets = {\n          ...state.bets,\n          [account]: {\n            ...state.bets[account],\n            [roundId]: bet,\n          },\n        }\n      }\n    })\n\n    // Update Bet\n    builder.addCase(fetchBet.fulfilled, (state, action) => {\n      const { account, bet } = action.payload\n      state.history[account] = [...state.history[account].filter((currentBet) => currentBet.id !== bet.id), bet]\n    })\n\n    // Show History\n    builder.addCase(fetchHistory.pending, (state) => {\n      state.isFetchingHistory = true\n    })\n    builder.addCase(fetchHistory.rejected, (state) => {\n      state.isFetchingHistory = false\n      state.isHistoryPaneOpen = true\n    })\n    builder.addCase(fetchHistory.fulfilled, (state, action) => {\n      const { account, bets } = action.payload\n\n      state.isFetchingHistory = false\n      state.isHistoryPaneOpen = true\n      state.history[account] = bets\n\n      // Save any fetched bets in the \"bets\" namespace\n      const betData = bets.reduce((accum, bet) => {\n        return {\n          ...accum,\n          [bet.round.id]: bet,\n        }\n      }, {})\n\n      state.bets = merge({}, state.bets, {\n        [account]: betData,\n      })\n    })\n  },\n})\n\n// Actions\nexport const {\n  initialize,\n  setChartPaneState,\n  setCurrentEpoch,\n  setHistoryFilter,\n  setHistoryPaneState,\n  updateMarketData,\n  markBetAsCollected,\n  setPredictionStatus,\n  markPositionAsEntered,\n  setLastOraclePrice,\n} = predictionsSlice.actions\n\nexport default predictionsSlice.reducer\n","import BigNumber from 'bignumber.js'\nimport { Pool } from 'state/types'\nimport { getRoi, tokenEarnedPerThousandDollarsCompounding } from 'utils/compoundApyHelpers'\nimport { getBalanceNumber, getFullDisplayBalance, getDecimalAmount } from 'utils/formatBalance'\n\nexport const convertSharesToCake = (\n  shares: BigNumber,\n  cakePerFullShare: BigNumber,\n  decimals = 18,\n  decimalsToRound = 3,\n) => {\n  const sharePriceNumber = getBalanceNumber(cakePerFullShare, decimals)\n  const amountInCake = new BigNumber(shares.multipliedBy(sharePriceNumber))\n  const cakeAsNumberBalance = getBalanceNumber(amountInCake, decimals)\n  const cakeAsBigNumber = getDecimalAmount(new BigNumber(cakeAsNumberBalance), decimals)\n  const cakeAsDisplayBalance = getFullDisplayBalance(amountInCake, decimals, decimalsToRound)\n  return { cakeAsNumberBalance, cakeAsBigNumber, cakeAsDisplayBalance }\n}\n\nexport const convertCakeToShares = (\n  cake: BigNumber,\n  cakePerFullShare: BigNumber,\n  decimals = 18,\n  decimalsToRound = 3,\n) => {\n  const sharePriceNumber = getBalanceNumber(cakePerFullShare, decimals)\n  const amountInShares = new BigNumber(cake.dividedBy(sharePriceNumber))\n  const sharesAsNumberBalance = getBalanceNumber(amountInShares, decimals)\n  const sharesAsBigNumber = getDecimalAmount(new BigNumber(sharesAsNumberBalance), decimals)\n  const sharesAsDisplayBalance = getFullDisplayBalance(amountInShares, decimals, decimalsToRound)\n  return { sharesAsNumberBalance, sharesAsBigNumber, sharesAsDisplayBalance }\n}\n\nconst AUTO_VAULT_COMPOUND_FREQUENCY = 288\nconst MANUAL_POOL_COMPOUND_FREQUENCY = 1\n\nexport const getAprData = (pool: Pool, performanceFee: number) => {\n  const { isAutoVault, earningTokenPrice, apr } = pool\n  // special handling for tokens like tBTC or BIFI where the daily token rewards for $1000 dollars will be less than 0.001 of that token\n  const isHighValueToken = Math.round(earningTokenPrice / 1000) > 0\n  const roundingDecimals = isHighValueToken ? 4 : 2\n\n  //   Estimate & manual for now. 288 = once every 5 mins. We can change once we have a better sense of this\n  const compoundFrequency = isAutoVault ? AUTO_VAULT_COMPOUND_FREQUENCY : MANUAL_POOL_COMPOUND_FREQUENCY\n\n  if (isAutoVault) {\n    const oneThousandDollarsWorthOfToken = 1000 / earningTokenPrice\n    const tokenEarnedPerThousand365D = tokenEarnedPerThousandDollarsCompounding({\n      numberOfDays: 365,\n      farmApr: apr,\n      tokenPrice: earningTokenPrice,\n      roundingDecimals,\n      compoundFrequency,\n      performanceFee,\n    })\n    const autoApr = getRoi({\n      amountEarned: tokenEarnedPerThousand365D,\n      amountInvested: oneThousandDollarsWorthOfToken,\n    })\n    console.log(\"[DAVID] autoApr = \", autoApr);\n    return { apr: autoApr, isHighValueToken, roundingDecimals, compoundFrequency }\n  }\n  return { apr, isHighValueToken, roundingDecimals, compoundFrequency }\n}\n\nexport const getCakeVaultEarnings = (\n  account: string,\n  cakeAtLastUserAction: BigNumber,\n  userShares: BigNumber,\n  pricePerFullShare: BigNumber,\n  earningTokenPrice: number,\n) => {\n  const hasAutoEarnings =\n    account && cakeAtLastUserAction && cakeAtLastUserAction.gt(0) && userShares && userShares.gt(0)\n  const { cakeAsBigNumber } = convertSharesToCake(userShares, pricePerFullShare)\n  const autoCakeProfit = cakeAsBigNumber.minus(cakeAtLastUserAction)\n  const autoCakeToDisplay = autoCakeProfit.gte(0) ? getBalanceNumber(autoCakeProfit, 18) : 0\n\n  const autoUsdProfit = autoCakeProfit.times(earningTokenPrice)\n  const autoUsdToDisplay = autoUsdProfit.gte(0) ? getBalanceNumber(autoUsdProfit, 18) : 0\n  return { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay }\n}\n\nexport const getPoolBlockInfo = (pool: Pool, currentBlock: number) => {\n  const { startBlock, endBlock, isFinished } = pool\n  const shouldShowBlockCountdown = Boolean(!isFinished && startBlock && endBlock)\n  const blocksUntilStart = Math.max(startBlock - currentBlock, 0)\n  const blocksRemaining = Math.max(endBlock - currentBlock, 0)\n  const hasPoolStarted = blocksUntilStart === 0 && blocksRemaining > 0\n  const blocksToDisplay = hasPoolStarted ? blocksRemaining : blocksUntilStart\n  return { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay }\n}\n","import { ContextApi } from 'contexts/Localization/types'\nimport { PageMeta } from './types'\n\nexport const DEFAULT_META: PageMeta = {\n  title: 'BridgeSwap',\n  description:\n    'The AMM you can trust on the BSC network. Bringing you the true meaning of DeFi. Trade and farm tokens, passively, on our platform.',\n  image: 'https://bridgeswap.app/images/hero.svg',\n}\n\nexport const getCustomMeta = (path: string, t: ContextApi['t']): PageMeta => {\n  switch (path) {\n    case '/':\n      return {\n        title: `${t('Home')} | ${t('BridgeSwap')}`,\n      }\n    case '/competition':\n      return {\n        title: `${t('Trading Battle')} | ${t('BridgeSwap')}`,\n      }\n    case '/prediction':\n      return {\n        title: `${t('Prediction')} | ${t('BridgeSwap')}`,\n      }\n    case '/farms':\n      return {\n        title: `${t('Farms')} | ${t('BridgeSwap')}`,\n      }\n    case '/pools':\n      return {\n        title: `${t('Pools')} | ${t('BridgeSwap')}`,\n      }\n    case '/lottery':\n      return {\n        title: `${t('Lottery')} | ${t('BridgeSwap')}`,\n      }\n    case '/collectibles':\n      return {\n        title: `${t('Collectibles')} | ${t('BridgeSwap')}`,\n      }\n    case '/ifo':\n      return {\n        title: `${t('Initial Farm Offering')} | ${t('BridgeSwap')}`,\n      }\n    case '/teams':\n      return {\n        title: `${t('Leaderboard')} | ${t('BridgeSwap')}`,\n      }\n    case '/profile/tasks':\n      return {\n        title: `${t('Task Center')} | ${t('BridgeSwap')}`,\n      }\n    case '/profile':\n      return {\n        title: `${t('Your Profile')} | ${t('BridgeSwap')}`,\n      }\n    default:\n      return null\n  }\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Helmet } from 'react-helmet-async'\nimport { useLocation } from 'react-router'\nimport { DEFAULT_META, getCustomMeta } from 'config/constants/meta'\nimport { usePriceCakeBusd } from 'state/hooks'\nimport Container from './Container'\n\nconst StyledPage = styled(Container)`\n  min-height: calc(100vh - 64px);\n  padding-top: 16px;\n  padding-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-top: 24px;\n    padding-bottom: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 32px;\n    padding-bottom: 32px;\n  }\n`\n\nconst PageMeta = () => {\n  const { t } = useTranslation()\n  const { pathname } = useLocation()\n  const cakePriceUsd = usePriceCakeBusd()\n  const cakePriceUsdDisplay = cakePriceUsd.gt(0)\n    ? `$${cakePriceUsd.toNumber().toLocaleString(undefined, {\n        minimumFractionDigits: 3,\n        maximumFractionDigits: 3,\n      })}`\n    : ''\n\n  const pageMeta = getCustomMeta(pathname, t) || {}\n  const { title, description, image } = { ...DEFAULT_META, ...pageMeta }\n  const pageTitle = cakePriceUsdDisplay ? [title, cakePriceUsdDisplay].join(' - ') : title\n\n  return (\n    <Helmet>\n      <title>{pageTitle}</title>\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={description} />\n      <meta property=\"og:image\" content={image} />\n    </Helmet>\n  )\n}\n\nconst Page: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({ children, ...props }) => {\n  return (\n    <>\n      <PageMeta />\n      <StyledPage {...props}>{children}</StyledPage>\n    </>\n  )\n}\n\nexport default Page\n","import { useContext } from 'react'\nimport { ThemeContext as StyledThemeContext } from 'styled-components'\nimport { ThemeContext } from 'contexts/ThemeContext'\n\nconst useTheme = () => {\n  const { isDark, toggleTheme } = useContext(ThemeContext)\n  const theme = useContext(StyledThemeContext)\n  return { isDark, toggleTheme, theme }\n}\n\nexport default useTheme\n","import styled from 'styled-components'\n\nconst Container = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 1200px;\n  padding-left: 16px;\n  padding-right: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-left: 24px;\n    padding-right: 24px;\n  }\n`\n\nexport default Container\n","import BigNumber from 'bignumber.js'\nimport { BLOCKS_PER_YEAR, CAKE_PER_YEAR } from 'config'\n\n/**\n * Get the APR value in %\n * @param stakingTokenPrice Token price in the same quote currency\n * @param rewardTokenPrice Token price in the same quote currency\n * @param totalStaked Total amount of stakingToken in the pool\n * @param tokenPerBlock Amount of new BRIS allocated to the pool for each new block\n * @returns Null if the APR is NaN or infinite.\n */\nexport const getPoolApr = (\n  stakingTokenPrice: number,\n  rewardTokenPrice: number,\n  totalStaked: number,\n  tokenPerBlock: number,\n): number => {\n  const totalRewardPricePerYear = new BigNumber(rewardTokenPrice).times(tokenPerBlock).times(BLOCKS_PER_YEAR)\n  const totalStakingTokenInPool = new BigNumber(stakingTokenPrice).times(totalStaked)\n  const apr = totalRewardPricePerYear.div(totalStakingTokenInPool).times(100)\n  return apr.isNaN() || !apr.isFinite() ? 0 : apr.toNumber()\n}\n\n/**\n * Get farm APR value in %\n * @param poolWeight allocationPoint / totalAllocationPoint\n * @param cakePriceUsd BRIS price in USD\n * @param poolLiquidityUsd Total pool liquidity in USD\n * @returns\n */\nexport const getFarmApr = (poolWeight: BigNumber, cakePriceUsd: BigNumber, poolLiquidityUsd: BigNumber): number => {\n  const yearlyCakeRewardAllocation = CAKE_PER_YEAR.times(poolWeight)\n  const apr = yearlyCakeRewardAllocation.times(cakePriceUsd).div(poolLiquidityUsd).times(100)\n  return apr.isNaN() || !apr.isFinite() ? null : apr.toNumber()\n}\n\nexport default null\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Spinner } from '@pancakeswap/uikit'\nimport Page from './layout/Page'\n\nconst Wrapper = styled(Page)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst PageLoader: React.FC = () => {\n  return (\n    <Wrapper>\n      <Spinner />\n    </Wrapper>\n  )\n}\n\nexport default PageLoader\n","// Set of helper functions to facilitate wallet setup\n\nimport { BASE_BSC_SCAN_URL } from 'config'\nimport { nodes } from './getRpcUrl'\n\n/**\n * Prompt the user to add BSC as a network on Metamask, or switch to BSC if the wallet is on a different network\n * @returns {boolean} true if the setup succeeded, false otherwise\n */\nexport const setupNetwork = async (connector) => {\n  const provider = connector ? await connector.getProvider() : (window as WindowChain).onto || (window as WindowChain).ethereum \n  if (provider) {\n    const chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\n    try {\n      await provider.request({\n        method: 'wallet_addEthereumChain',\n        params: [\n          {\n            chainId: `0x${chainId.toString(16)}`,\n            chainName: 'Binance Smart Chain Mainnet',\n            nativeCurrency: {\n              name: 'BNB',\n              symbol: 'bnb',\n              decimals: 18,\n            },\n            rpcUrls: nodes,\n            blockExplorerUrls: [`${BASE_BSC_SCAN_URL}/`],\n          },\n        ],\n      })\n      return true\n    } catch (error) {\n      console.error(error)\n      return false\n    }\n  } else {\n    console.error(\"Can't setup the BSC network on metamask because window.ethereum is undefined\")\n    return false\n  }\n}\n\n/**\n * Prompt the user to add a custom token to metamask\n * @param tokenAddress\n * @param tokenSymbol\n * @param tokenDecimals\n * @param tokenImage\n * @returns {boolean} true if the token has been added, false otherwise\n */\nexport const registerToken = async (\n  tokenAddress: string,\n  tokenSymbol: string,\n  tokenDecimals: number,\n  tokenImage: string,\n) => {\n  const tokenAdded = await (window as WindowChain).ethereum.request({\n    method: 'wallet_watchAsset',\n    params: {\n      type: 'ERC20',\n      options: {\n        address: tokenAddress,\n        symbol: tokenSymbol,\n        decimals: tokenDecimals,\n        image: tokenImage,\n      },\n    },\n  })\n\n  return tokenAdded\n}\n","import { createBrowserHistory } from 'history'\n\n// Manually create the history object so we can access outside the Router e.g. in modals\nconst history = createBrowserHistory()\n\nexport default history\n","import { TranslatableText } from 'state/types'\n\nexport interface Address {\n  97?: string\n  56: string\n}\n\nexport interface Token {\n  symbol: string\n  address?: Address\n  decimals?: number\n  projectLink?: string\n  busdPrice?: string\n}\n\nexport enum PoolIds {\n  poolBasic = 'poolBasic',\n  poolUnlimited = 'poolUnlimited',\n}\n\nexport type IfoStatus = 'idle' | 'coming_soon' | 'live' | 'finished'\n\ninterface IfoPoolInfo {\n  saleAmount: string\n  raiseAmount: string\n  cakeToBurn: string\n  distributionRatio: number // Range [0-1]\n}\n\nexport interface Ifo {\n  id: string\n  isActive: boolean\n  address: string\n  name: string\n  currency: Token\n  token: Token\n  releaseBlockNumber: number\n  articleUrl: string\n  campaignId: string\n  tokenOfferingPrice: number\n  version: number\n  [PoolIds.poolBasic]?: IfoPoolInfo\n  [PoolIds.poolUnlimited]: IfoPoolInfo\n}\n\nexport enum PoolCategory {\n  'COMMUNITY' = 'Community',\n  'CORE' = 'Core',\n  'BINANCE' = 'Binance', // Pools using native BNB behave differently than pools using a token\n  'AUTO' = 'Auto',\n}\n\nexport interface FarmConfig {\n  pid: number\n  lpSymbol: string\n  lpAddresses: Address\n  token: Token\n  quoteToken: Token\n  multiplier?: string\n  isCommunity?: boolean\n  dual?: {\n    rewardPerBlock: number\n    earnLabel: string\n    endBlock: number\n  }\n}\n\nexport interface PoolConfig {\n  sousId: number\n  earningToken: Token\n  stakingToken: Token\n  contractAddress: Address\n  poolCategory: PoolCategory\n  tokenPerBlock: string\n  sortOrder?: number\n  harvest?: boolean\n  isFinished?: boolean\n  enableEmergencyWithdraw?: boolean\n}\n\nexport type Images = {\n  lg: string\n  md: string\n  sm: string\n  ipfs?: string\n}\n\nexport type NftImages = {\n  blur?: string\n} & Images\n\nexport type NftVideo = {\n  webm: string\n  mp4: string\n}\n\nexport type NftSource = {\n  [key in NftType]: {\n    address: Address\n    identifierKey: string\n  }\n}\n\nexport enum NftType {\n  PANCAKE = 'pancake',\n  MIXIE = 'mixie',\n}\n\nexport type Nft = {\n  description: string\n  name: string\n  images: NftImages\n  sortOrder: number\n  type: NftType\n  video?: NftVideo\n\n  // Uniquely identifies the nft.\n  // Used for matching an NFT from the config with the data from the NFT's tokenURI\n  identifier: string\n\n  // Used to be \"bunnyId\". Used when minting NFT\n  variationId?: number | string\n}\n\nexport type TeamImages = {\n  alt: string\n} & Images\n\nexport type Team = {\n  id: number\n  name: string\n  description: string\n  isJoinable?: boolean\n  users: number\n  points: number\n  images: TeamImages\n  background: string\n  textColor: string\n}\n\nexport type CampaignType = 'ifo' | 'teambattle'\n\nexport type Campaign = {\n  id: string\n  type: CampaignType\n  title?: TranslatableText\n  description?: TranslatableText\n  badge?: string\n}\n\nexport type PageMeta = {\n  title: string\n  description?: string\n  image?: string\n}\n\nexport type Feats = {\n  heading: string\n  text: string\n  btnText: string\n  href?: string\n  bgColor?: string\n}\n","const tokens = {\n  bnb: {\n    symbol: 'BNB',\n    projectLink: 'https://www.binance.com/',\n  },\n  bris: {\n    symbol: 'BRIS',\n    address: {\n      56: '0x79De52900178bD90c98E278cC30A635E65B18B1A',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bridgeswap.app/',\n  },\n  fswap: {\n    symbol: 'FSWAP',\n    address: {\n      56: '0x078D1b73bbc94C83bA2371A164761A35a66b8612',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://flutterswap.finance/',\n  },\n  txl: {\n    symbol: 'TXL',\n    address: {\n      56: '0x1ffd0b47127fdd4097e54521c9e2c7f0d66aafc5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://tixl.org/',\n  },\n  cos: {\n    symbol: 'COS',\n    address: {\n      56: '0x96Dd399F9c3AFda1F194182F71600F1B65946501',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.contentos.io/',\n  },\n  bunny: {\n    symbol: 'BUNNY',\n    address: {\n      56: '0xc9849e6fdb743d08faee3e34dd2d1bc69ea11a51',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakebunny.finance/',\n  },\n  alice: {\n    symbol: 'ALICE',\n    address: {\n      56: '0xac51066d7bec65dc4589368da368b212745d63e8',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.myneighboralice.com/',\n  },\n  for: {\n    symbol: 'FOR',\n    address: {\n      56: '0x658A109C5900BC6d2357c87549B651670E5b0539',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.for.tube/home',\n  },\n  bux: {\n    symbol: 'BUX',\n    address: {\n      56: '0x211ffbe424b90e25a15531ca322adf1559779e45',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://getbux.com/bux-crypto/',\n  },\n  nuls: {\n    symbol: 'NULS',\n    address: {\n      56: '0x8cd6e29d3686d24d3c2018cee54621ea0f89313b',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://www.nuls.io/',\n  },\n  belt: {\n    symbol: 'BELT',\n    address: {\n      56: '0xE0e514c71282b6f4e823703a39374Cf58dc3eA4f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://beta.belt.fi/',\n  },\n  ramp: {\n    symbol: 'RAMP',\n    address: {\n      56: '0x8519ea49c997f50ceffa444d240fb655e89248aa',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://rampdefi.com/',\n  },\n  bfi: {\n    symbol: 'BFI',\n    address: {\n      56: '0x81859801b01764d4f0fa5e64729f5a6c3b91435b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bearn.fi/',\n  },\n  dexe: {\n    symbol: 'DEXE',\n    address: {\n      56: '0x039cb485212f996a9dbb85a9a75d898f94d38da6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dexe.network/',\n  },\n  bel: {\n    symbol: 'BEL',\n    address: {\n      56: '0x8443f091997f06a61670b735ed92734f5628692f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bella.fi/',\n  },\n  tpt: {\n    symbol: 'TPT',\n    address: {\n      56: '0xeca41281c24451168a37211f0bc2b8645af45092',\n      97: '',\n    },\n    decimals: 4,\n    projectLink: 'https://www.tokenpocket.pro/',\n  },\n  watch: {\n    symbol: 'WATCH',\n    address: {\n      56: '0x7a9f28eb62c791422aa23ceae1da9c847cbec9b0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://yieldwatch.net/',\n  },\n  xmark: {\n    symbol: 'xMARK',\n    address: {\n      56: '0x26a5dfab467d4f58fb266648cae769503cec9580',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://benchmarkprotocol.finance/',\n  },\n  bmxx: {\n    symbol: 'bMXX',\n    address: {\n      56: '0x4131b87f74415190425ccd873048c708f8005823',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://multiplier.finance/',\n  },\n  iotx: {\n    symbol: 'IOTX',\n    address: {\n      56: '0x9678e42cebeb63f23197d726b29b1cb20d0064e5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://iotex.io/',\n  },\n  bor: {\n    symbol: 'BOR',\n    address: {\n      56: '0x92d7756c60dcfd4c689290e8a9f4d263b3b32241',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.boringdao.com/',\n  },\n  bopen: {\n    symbol: 'bOPEN',\n    address: {\n      56: '0xf35262a9d427f96d2437379ef090db986eae5d42',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://opendao.io/',\n  },\n  dodo: {\n    symbol: 'DODO',\n    address: {\n      56: '0x67ee3cb086f8a16f34bee3ca72fad36f7db929e2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dodoex.io/',\n  },\n  swingby: {\n    symbol: 'SWINGBY',\n    address: {\n      56: '0x71de20e0c4616e7fcbfdd3f875d568492cbe4739',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swingby.network/',\n  },\n  bry: {\n    symbol: 'BRY',\n    address: {\n      56: '0xf859bf77cbe8699013d6dbc7c2b926aaf307f830',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://berrydata.co/',\n  },\n  zee: {\n    symbol: 'ZEE',\n    address: {\n      56: '0x44754455564474a89358b2c2265883df993b12f0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://zeroswap.io/',\n  },\n  swgb: {\n    symbol: 'SWGb',\n    address: {\n      56: '0xe40255c5d7fa7ceec5120408c78c787cecb4cfdb',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swirgepay.com/',\n  },\n  swg: {\n    symbol: 'SWG',\n    address: {\n      56: '0xe792f64c582698b8572aaf765bdc426ac3aefb6b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swirgepay.com/',\n  },\n  sfp: {\n    symbol: 'SFP',\n    address: {\n      56: '0xd41fdb03ba84762dd66a0af1a6c8540ff1ba5dfb',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.safepal.io/',\n  },\n  lina: {\n    symbol: 'LINA',\n    address: {\n      56: '0x762539b45a1dcce3d36d080f74d1aed37844b878',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://linear.finance/',\n  },\n  lit: {\n    symbol: 'LIT',\n    address: {\n      56: '0xb59490ab09a0f526cc7305822ac65f2ab12f9723',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.litentry.com/',\n  },\n  hget: {\n    symbol: 'HGET',\n    address: {\n      56: '0xc7d8d35eba58a0935ff2d5a33df105dd9f071731',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.hedget.com/',\n  },\n  bdo: {\n    symbol: 'BDO',\n    address: {\n      56: '0x190b589cf9fb8ddeabbfeae36a813ffb2a702454',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bdollar.fi/',\n  },\n  egld: {\n    symbol: 'EGLD',\n    address: {\n      56: '0xbf7c81fff98bbe61b40ed186e4afd6ddd01337fe',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://elrond.com/',\n  },\n  ust: {\n    symbol: 'UST',\n    address: {\n      56: '0x23396cf899ca06c4472205fc903bdb4de249d6fc',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  wsote: {\n    symbol: 'wSOTE',\n    address: {\n      56: '0x541e619858737031a1244a5d0cd47e5ef480342c',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://soteria.finance/#/',\n  },\n  front: {\n    symbol: 'FRONT',\n    address: {\n      56: '0x928e55dab735aa8260af3cedada18b5f70c72f1b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://frontier.xyz/',\n  },\n  helmet: {\n    symbol: 'Helmet',\n    address: {\n      56: '0x948d2a81086a075b3130bac19e4c6dee1d2e3fe8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.helmet.insure/',\n  },\n  btcst: {\n    symbol: 'BTCST',\n    address: {\n      56: '0x78650b139471520656b9e7aa7a5e9276814a38e9',\n      97: '',\n    },\n    decimals: 17,\n    projectLink: 'https://www.1-b.tc/',\n  },\n  bscx: {\n    symbol: 'BSCX',\n    address: {\n      56: '0x5ac52ee5b2a633895292ff6d8a89bb9190451587',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bscex.org/',\n  },\n  ten: {\n    symbol: 'TEN',\n    address: {\n      56: '0xdff8cb622790b7f92686c722b02cab55592f152c',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tenet.farm/',\n  },\n  balbt: {\n    symbol: 'bALBT',\n    address: {\n      56: '0x72faa679e1008ad8382959ff48e392042a8b06f7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://allianceblock.io/',\n  },\n  asr: {\n    symbol: 'ASR',\n    address: {\n      56: '0x80d5f92c2c8c682070c95495313ddb680b267320',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  atm: {\n    symbol: 'ATM',\n    address: {\n      56: '0x25e9d05365c867e59c1904e7463af9f312296f9e',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  og: {\n    symbol: 'OG',\n    address: {\n      56: '0xf05e45ad22150677a017fbd94b84fbb63dc9b44c',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  reef: {\n    symbol: 'REEF',\n    address: {\n      56: '0xf21768ccbc73ea5b6fd3c687208a7c2def2d966e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://reef.finance/',\n  },\n  ditto: {\n    symbol: 'DITTO',\n    address: {\n      56: '0x233d91a0713155003fc4dce0afa871b508b3b715',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://ditto.money/',\n  },\n  juv: {\n    symbol: 'JUV',\n    address: {\n      56: '0xc40c9a843e1c6d01b7578284a9028854f6683b1b',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  psg: {\n    symbol: 'PSG',\n    address: {\n      56: '0xbc5609612b7c44bef426de600b5fd1379db2ecf1',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  vai: {\n    symbol: 'VAI',\n    address: {\n      56: '0x4bd17003473389a42daf6a0a729f6fdb328bbbd7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  wbnb: {\n    symbol: 'wBNB',\n    address: {\n      56: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\n      97: '0xae13d989dac2f0debff460ac112a837c89baa7cd',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  tnd: {\n    symbol: 'TND',\n    address: {\n      56: '0x1709a038b3FD06F2077Bb294d76D65ca92aA3190',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  blink: {\n    symbol: 'BLINK',\n    address: {\n      56: '0x63870a18b6e42b01ef1ad8a2302ef50b7132054f',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://blink.wink.org',\n  },\n  unfi: {\n    symbol: 'UNFI',\n    address: {\n      56: '0x728c5bac3c3e370e372fc4671f9ef6916b814d8b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unifiprotocol.com',\n  },\n  twt: {\n    symbol: 'TWT',\n    address: {\n      56: '0x4b0f1812e5df2a09796481ff14017e6005508003',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://trustwallet.com/',\n  },\n  hard: {\n    symbol: 'HARD',\n    address: {\n      56: '0xf79037f6f6be66832de4e7516be52826bc3cbcc4',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://hard.kava.io',\n  },\n  broobee: {\n    symbol: 'bROOBEE',\n    address: {\n      56: '0xe64f5cb844946c1f102bd25bbd87a5ab4ae89fbe',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://roobee.io/',\n  },\n  stax: {\n    symbol: 'STAX',\n    address: {\n      56: '0x0da6ed8b13214ff28e9ca979dd37439e8a88f6c4',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'http://stablexswap.com/',\n  },\n  nar: {\n    symbol: 'NAR',\n    address: {\n      56: '0xa1303e6199b319a891b79685f0537d289af1fc83',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://narwhalswap.org/',\n  },\n  nya: {\n    symbol: 'NYA',\n    address: {\n      56: '0xbfa0841f7a90c4ce6643f651756ee340991f99d5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://nyanswop.org/',\n  },\n  ctk: {\n    symbol: 'CTK',\n    address: {\n      56: '0xa8c2b8eec3d368c0253ad3dae65a5f2bbb89c929',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.certik.foundation/',\n  },\n  inj: {\n    symbol: 'INJ',\n    address: {\n      56: '0xa2b726b1145a4773f68593cf171187d8ebe4d495',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://injectiveprotocol.com/',\n  },\n  sxp: {\n    symbol: 'SXP',\n    address: {\n      56: '0x47bead2563dcbf3bf2c9407fea4dc236faba485a',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swipe.io/',\n  },\n  alpha: {\n    symbol: 'ALPHA',\n    address: {\n      56: '0xa1faa113cbe53436df28ff0aee54275c13b40975',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://alphafinance.io/',\n  },\n  xvs: {\n    symbol: 'XVS',\n    address: {\n      56: '0xcf6bb5389c92bdda8a3747ddb454cb7a64626c63',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  sushi: {\n    symbol: 'SUSHI',\n    address: {\n      56: '0x947950bcc74888a40ffa2593c5798f11fc9124c4',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://sushi.com/',\n  },\n  comp: {\n    symbol: 'COMP',\n    address: {\n      56: '0x52ce071bd9b1c4b00a0b92d298c512478cad67e8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://compound.finance/',\n  },\n  soup: {\n    symbol: 'SOUP',\n    address: {\n      56: '0xBBaEB2aEfbbb25542170Cb6209f235A8850a16De',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  bifi: {\n    symbol: 'BIFI',\n    address: {\n      56: '0xca3f508b8e4dd382ee878a314789373d80a5190a',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://beefy.finance/',\n  },\n  dusk: {\n    symbol: 'DUSK',\n    address: {\n      56: '0xb2bd0749dbe21f623d9baba856d3b0f0e1bfec9c',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dusk.network/',\n  },\n  busd: {\n    symbol: 'BUSD',\n    address: {\n      56: '0xe9e7cea3dedca5984780bafc599bd69add087d56',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.paxos.com/busd/',\n  },\n  eth: {\n    symbol: 'ETH',\n    address: {\n      56: '0x2170ed0880ac9a755fd29b2688956bd959f933f8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ethereum.org/en/',\n  },\n  beth: {\n    symbol: 'BETH',\n    address: {\n      56: '0x250632378e573c6be1ac2f97fcdf00515d0aa91b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ethereum.org/en/eth2/beacon-chain/',\n  },\n  mamzn: {\n    symbol: 'mAMZN',\n    address: {\n      56: '0x3947B992DC0147D2D89dF0392213781b04B25075',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mgoogl: {\n    symbol: 'mGOOGL',\n    address: {\n      56: '0x62D71B23bF15218C7d2D7E48DBbD9e9c650B173f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mnflx: {\n    symbol: 'mNFLX',\n    address: {\n      56: '0xa04F060077D90Fe2647B61e4dA4aD1F97d6649dc',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mtsla: {\n    symbol: 'mTSLA',\n    address: {\n      56: '0xF215A127A196e3988C09d052e16BcFD365Cd7AA3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  ltc: {\n    symbol: 'LTC',\n    address: {\n      56: '0x4338665cbb7b2485a8855a139b75d5e34ab0db94',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://litecoin.org/',\n  },\n  usdc: {\n    symbol: 'USDC',\n    address: {\n      56: '0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.centre.io/usdc',\n  },\n  dai: {\n    symbol: 'DAI',\n    address: {\n      56: '0x1af3f329e8be154074d8769d1ffa4ee058b1dbc3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'http://www.makerdao.com/',\n  },\n  ada: {\n    symbol: 'ADA',\n    address: {\n      56: '0x3ee2200efb3400fabb9aacf31297cbdd1d435d47',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://www.cardano.org/',\n  },\n  band: {\n    symbol: 'BAND',\n    address: {\n      56: '0xad6caeb32cd2c308980a548bd0bc5aa4306c6c18',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bandprotocol.com/',\n  },\n  dot: {\n    symbol: 'DOT',\n    address: {\n      56: '0x7083609fce4d1d8dc0c979aab8c869ea2c873402',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://polkadot.network/',\n  },\n  eos: {\n    symbol: 'EOS',\n    address: {\n      56: '0x56b6fb708fc5732dec1afc8d8556423a2edccbd6',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://eos.io/',\n  },\n  link: {\n    symbol: 'LINK',\n    address: {\n      56: '0xf8a0bf9cf54bb92f17374d9e9a321e6a111a51bd',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://chain.link/',\n  },\n  usdt: {\n    symbol: 'USDT',\n    address: {\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n      56: '0x55d398326f99059ff775485246999027b3197955',\n    },\n    decimals: 18,\n    projectLink: 'https://tether.to/',\n  },\n  btcb: {\n    symbol: 'BTCB',\n    address: {\n      56: '0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bitcoin.org/',\n  },\n  xrp: {\n    symbol: 'XRP',\n    address: {\n      56: '0x1d2f0da169ceb9fc7b3144628db156f3f6c60dbe',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://ripple.com/xrp/',\n  },\n  atom: {\n    symbol: 'ATOM',\n    address: {\n      56: '0x0eb3a705fc54725037cc9e008bdede697f62f335',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://cosmos.network/',\n  },\n  yfii: {\n    symbol: 'YFII',\n    address: {\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n      56: '0x7f70642d88cf1c4a3a7abb072b53b929b653eda5',\n    },\n    decimals: 18,\n    projectLink: 'https://dfi.money/#/',\n  },\n  xtz: {\n    symbol: 'XTZ',\n    address: {\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n      56: '0x16939ef78684453bfdfb47825f8a5f714f12623a',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tezos.com/',\n  },\n  bch: {\n    symbol: 'BCH',\n    address: {\n      56: '0x8ff795a6f4d97e7887c79bea79aba5cc76444adf',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'http://bch.info/',\n  },\n  yfi: {\n    symbol: 'YFI',\n    address: {\n      56: '0x88f1a5ae2a3bf98aeaf342d26b30a79438c9142e',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://yearn.finance/',\n  },\n  uni: {\n    symbol: 'UNI',\n    address: {\n      56: '0xbf5140a22578168fd562dccf235e5d43a02ce9b1',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://uniswap.org/',\n  },\n  fil: {\n    symbol: 'FIL',\n    address: {\n      56: '0x0d8ce2a99bb6e3b7db580ed848240e4a0f9ae153',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://filecoin.io/',\n  },\n  bake: {\n    symbol: 'BAKE',\n    address: {\n      56: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bakeryswap.org/',\n  },\n  burger: {\n    symbol: 'BURGER',\n    address: {\n      56: '0xae9269f27437f0fcbc232d39ec814844a51d6b8f',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://burgerswap.org/',\n  },\n  bdigg: {\n    symbol: 'bDIGG',\n    address: {\n      56: '0x5986d5c77c65e5801a5caa4fae80089f870a71da',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://badger.finance/',\n  },\n  bbadger: {\n    symbol: 'bBadger',\n    address: {\n      56: '0x1f7216fdb338247512ec99715587bb97bbf96eae',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://badger.finance/',\n  },\n  trade: {\n    symbol: 'TRADE',\n    address: {\n      56: '0x7af173f350d916358af3e218bdf2178494beb748',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unitrade.app/',\n  },\n  pnt: {\n    symbol: 'PNT',\n    address: {\n      56: '0xdaacb0ab6fb34d24e8a67bfa14bf4d95d4c7af92',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ptokens.io/',\n  },\n  mir: {\n    symbol: 'MIR',\n    address: {\n      56: '0x5b6dcf557e2abe2323c48445e8cc948910d8c2c9',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  pbtc: {\n    symbol: 'pBTC',\n    address: {\n      56: '0xed28a457a5a76596ac48d87c0f577020f6ea1c4c',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ptokens.io/',\n  },\n  lto: {\n    symbol: 'LTO',\n    address: {\n      56: '0x857b222fc79e1cbbf8ca5f78cb133d1b7cf34bbd',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ltonetwork.com/',\n  },\n  pcws: {\n    symbol: 'pCWS',\n    address: {\n      56: '0xbcf39f0edda668c58371e519af37ca705f2bfcbd',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://game.seascape.network/',\n  },\n  zil: {\n    symbol: 'ZIL',\n    address: {\n      56: '0xb86abcb37c3a4b64f74f59301aff131a1becc787',\n      97: '',\n    },\n    decimals: 12,\n    projectLink: 'https://www.zilliqa.com/',\n  },\n  lien: {\n    symbol: 'LIEN',\n    address: {\n      56: '0x5d684adaf3fcfe9cfb5cede3abf02f0cdd1012e3',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://lien.finance/',\n  },\n  swth: {\n    symbol: 'SWTH',\n    address: {\n      56: '0x250b211EE44459dAd5Cd3bCa803dD6a7EcB5d46C',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://switcheo.network/',\n  },\n  dft: {\n    symbol: 'DFT',\n    address: {\n      56: '0x42712dF5009c20fee340B245b510c0395896cF6e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.dfuture.com/home',\n  },\n  gum: {\n    symbol: 'GUM',\n    address: {\n      56: '0xc53708664b99DF348dd27C3Ac0759d2DA9c40462',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://gourmetgalaxy.io/',\n  },\n  dego: {\n    symbol: 'DEGO',\n    address: {\n      56: '0x3fda9383a84c05ec8f7630fe10adf1fac13241cc',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bsc.dego.finance/home',\n  },\n  nrv: {\n    symbol: 'NRV',\n    address: {\n      56: '0x42f6f551ae042cbe50c739158b4f0cac0edb9096',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://nerve.fi/',\n  },\n  easy: {\n    symbol: 'EASY',\n    address: {\n      56: '0x7c17c8bed8d14bacce824d020f994f4880d6ab3b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://easyfi.network/',\n  },\n  oddz: {\n    symbol: 'ODDZ',\n    address: {\n      56: '0xcd40f2670cf58720b694968698a5514e924f742d',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://oddz.fi/',\n  },\n  hoo: {\n    symbol: 'HOO',\n    address: {\n      56: '0xe1d1f66215998786110ba0102ef558b22224c016',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://hoo.com/',\n  },\n  apys: {\n    symbol: 'APYS',\n    address: {\n      56: '0x37dfACfaeDA801437Ff648A1559d73f4C40aAcb7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://apyswap.com/',\n  },\n  bondly: {\n    symbol: 'BONDLY',\n    address: {\n      56: '0x96058f8c3e16576d9bd68766f3836d9a33158f89',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bondly.finance/',\n  },\n  tko: {\n    symbol: 'TKO',\n    address: {\n      56: '0x9f589e3eabe42ebc94a44727b3f3531c0c877809',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tokocrypto.com/',\n  },\n  itam: {\n    symbol: 'ITAM',\n    address: {\n      56: '0x04c747b40be4d535fc83d09939fb0f626f32800b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://itam.network/',\n  },\n  arpa: {\n    symbol: 'ARPA',\n    address: {\n      56: '0x6f769e65c14ebd1f68817f5f1dcdb61cfa2d6f7e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://arpachain.io/',\n  },\n  eps: {\n    symbol: 'EPS',\n    address: {\n      56: '0xa7f552078dcc247c2684336020c03648500c6d9f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ellipsis.finance/',\n  },\n  jgn: {\n    symbol: 'JGN',\n    address: {\n      56: '0xc13b7a43223bb9bf4b69bd68ab20ca1b79d81c75',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://jgndefi.com/',\n  },\n  tlm: {\n    symbol: 'TLM',\n    address: {\n      56: '0x2222227e22102fe3322098e4cbfe18cfebd57c95',\n      97: '',\n    },\n    decimals: 4,\n    projectLink: 'https://alienworlds.io/',\n  },\n  perl: {\n    symbol: 'PERL',\n    address: {\n      56: '0x0f9e4d49f25de22c2202af916b681fbb3790497b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://perlinx.finance/',\n  },\n  alpa: {\n    symbol: 'ALPA',\n    address: {\n      56: '0xc5e6689c9c8b02be7c49912ef19e79cf24977f03',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bsc.alpaca.city/',\n  },\n  hzn: {\n    symbol: 'HZN',\n    address: {\n      56: '0xc0eff7749b125444953ef89682201fb8c6a917cd',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://horizonprotocol.com/',\n  },\n  suter: {\n    symbol: 'SUTER',\n    address: {\n      56: '0x4cfbbdfbd5bf0814472ff35c72717bd095ada055',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://shield.suterusu.io/',\n  },\n  cgg: {\n    symbol: 'CGG',\n    address: {\n      56: '0x1613957159e9b0ac6c80e824f7eea748a32a0ae2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chainguardians.io/',\n  },\n  mix: {\n    symbol: 'MIX',\n    address: {\n      56: '0xB67754f5b4C704A24d2db68e661b2875a4dDD197',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mixie.chainguardians.io/',\n  },\n  hakka: {\n    symbol: 'HAKKA',\n    address: {\n      56: '0x1d1eb8e8293222e1a29d2c0e4ce6c0acfd89aaac',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://hakka.finance/',\n  },\n  xed: {\n    symbol: 'XED',\n    address: {\n      56: '0x5621b5a3f4a8008c4ccdd1b942b121c8b1944f1f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.exeedme.com/',\n  },\n  τbtc: {\n    symbol: 'τBTC',\n    address: {\n      56: '0x2cd1075682b0fccaadd0ca629e138e64015ba11c',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://www.btcst.finance/',\n  },\n  alpaca: {\n    symbol: 'ALPACA',\n    address: {\n      56: '0x8f0528ce5ef7b51152a59745befdd91d97091d2f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.alpacafinance.org/',\n  },\n  dfd: {\n    symbol: 'DFD',\n    address: {\n      56: '0x9899a98b222fcb2f3dbee7df45d943093a4ff9ff',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dusd.finance/',\n  },\n  lmt: {\n    symbol: 'LMT',\n    address: {\n      56: '0x9617857e191354dbea0b714d78bc59e57c411087',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://lympo.io/lmt/',\n  },\n  btt: {\n    symbol: 'BTT',\n    address: {\n      56: '0x8595f9da7b868b1822194faed312235e43007b49',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bittorrent.com/',\n  },\n  trx: {\n    symbol: 'TRX',\n    address: {\n      56: '0x85eac5ac2f758618dfa09bdbe0cf174e7d574d5b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://tron.network/',\n  },\n  win: {\n    symbol: 'WIN',\n    address: {\n      56: '0xaef0d72a118ce24fee3cd1d43d383897d05b4e99',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://winklink.org/',\n  },\n  mcoin: {\n    symbol: 'mCOIN',\n    address: {\n      56: '0x49022089e78a8d46ec87a3af86a1db6c189afa6f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  math: {\n    symbol: 'MATH',\n    address: {\n      56: '0xf218184af829cf2b0019f8e6f0b2423498a36983',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mathwallet.org/',\n  },\n  kun: {\n    symbol: 'KUN',\n    address: {\n      56: '0x1A2fb0Af670D0234c2857FaD35b789F8Cb725584',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chemix.io/home',\n  },\n  qsd: {\n    symbol: 'QSD',\n    address: {\n      56: '0x07AaA29E63FFEB2EBf59B33eE61437E1a91A3bb2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chemix.io/home',\n  },\n  hyfi: {\n    symbol: 'HYFI',\n    address: {\n      56: '0x9a319b959e33369C5eaA494a770117eE3e585318',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://hyfi.pro/#/',\n  },\n  oin: {\n    symbol: 'OIN',\n    address: {\n      56: '0x658E64FFcF40D240A43D52CA9342140316Ae44fA',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://oin.finance/',\n  },\n  doge: {\n    symbol: 'DOGE',\n    address: {\n      56: '0xba2ae424d960c26247dd6c32edc70b295c744c43',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://dogecoin.com/',\n  },\n  fine: {\n    symbol: 'FINE',\n    address: {\n      56: '0x4e6415a5727ea08aae4580057187923aec331227',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://refinable.com/',\n  },\n  one: {\n    symbol: 'ONE',\n    address: {\n      56: '0x04baf95fd4c52fd09a56d840baee0ab8d7357bf0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bigone.com/',\n  },\n  pmon: {\n    symbol: 'PMON',\n    address: {\n      56: '0x1796ae0b0fa4862485106a0de9b654eFE301D0b2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://polkamon.com/',\n  },\n  hotcross: {\n    symbol: 'HOTCROSS',\n    address: {\n      56: '0x4FA7163E153419E0E1064e418dd7A99314Ed27b6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.hotcross.com/',\n  },\n  τdoge: {\n    symbol: 'τDOGE',\n    address: {\n      56: '0xe550a593d09fbc8dcd557b5c88cea6946a8b404a',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://www.btcst.finance/',\n  },\n  btr: {\n    symbol: 'BTR',\n    address: {\n      56: '0x5a16E8cE8cA316407c6E6307095dc9540a8D62B3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bitrue.com/',\n  },\n  ubxt: {\n    symbol: 'UBXT',\n    address: {\n      56: '0xbbeb90cfb6fafa1f69aa130b7341089abeef5811',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://upbots.com/',\n  },\n  wmass: {\n    symbol: 'WMASS',\n    address: {\n      56: '0x7e396bfc8a2f84748701167c2d622f041a1d7a17',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://massnet.org/en/',\n  },\n  rfox: {\n    symbol: 'RFOX',\n    address: {\n      56: '0x0a3a21356793b49154fd3bbe91cbc2a16c0457f5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.redfoxlabs.io/',\n  },\n  xend: {\n    symbol: 'XEND',\n    address: {\n      56: '0x4a080377f83D669D7bB83B3184a8A5E61B500608',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://xend.finance/',\n  },\n  cyc: {\n    symbol: 'CYC',\n    address: {\n      56: '0x810ee35443639348adbbc467b33310d2ab43c168',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://cyclone.xyz/',\n  },\n  chr: {\n    symbol: 'CHR',\n    address: {\n      56: '0xf9CeC8d50f6c8ad3Fb6dcCEC577e05aA32B224FE',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://chromia.com/',\n  },\n  kalm: {\n    symbol: 'KALM',\n    address: {\n      56: '0x4BA0057f784858a48fe351445C672FF2a3d43515',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://kalmar.io/',\n  },\n  deri: {\n    symbol: 'DERI',\n    address: {\n      56: '0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://deri.finance/#/index',\n  },\n  well: {\n    symbol: 'WELL',\n    address: {\n      56: '0xf07a32eb035b786898c00bb1c64d8c6f8e7a46d5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bitwellex.com/',\n  },\n  popen: {\n    symbol: 'pOPEN',\n    address: {\n      56: '0xabae871b7e3b67aeec6b46ae9fe1a91660aadac5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://opendao.io/',\n  },\n  ez: {\n    symbol: 'EZ',\n    address: {\n      56: '0x5512014efa6cd57764fa743756f7a6ce3358cc83',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://easyfi.network/',\n  },\n  vrt: {\n    symbol: 'VRT',\n    address: {\n      56: '0x5f84ce30dc3cf7909101c69086c50de191895883',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  tusd: {\n    symbol: 'TUSD',\n    address: {\n      56: '0x14016e85a25aeb13065688cafb43044c2ef86784',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.trueusd.com/',\n  },\n  mtrg: {\n    symbol: 'MTRG',\n    address: {\n      56: '0xbd2949f67dcdc549c6ebe98696449fa79d988a9f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.meter.io/',\n  },\n  ktn: {\n    symbol: 'KTN',\n    address: {\n      56: '0xdae6c2a48bfaa66b43815c5548b10800919c993e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://kattana.io/',\n  },\n  qkc: {\n    symbol: 'QKC',\n    address: {\n      56: '0xa1434f1fc3f437fa33f7a781e041961c0205b5da',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://quarkchain.io/',\n  },\n  bcfx: {\n    symbol: 'bCFX',\n    address: {\n      56: '0x045c4324039dA91c52C55DF5D785385Aab073DcF',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.confluxnetwork.org/',\n  },\n  mx: {\n    symbol: 'MX',\n    address: {\n      56: '0x9f882567a62a5560d147d64871776eea72df41d3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.mxc.com/',\n  },\n  ata: {\n    symbol: 'ATA',\n    address: {\n      56: '0xa2120b9e674d3fc3875f415a7df52e382f141225',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.ata.network/',\n  },\n  mbox: {\n    symbol: 'MBOX',\n    address: {\n      56: '0x3203c9E46cA618C8C1cE5dC67e7e9D75f5da2377',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.mobox.io/#/',\n  },\n  boring: {\n    symbol: 'BORING',\n    address: {\n      56: '0xffEecbf8D7267757c2dc3d13D730E97E15BfdF7F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.boringdao.com/',\n  },\n  marsh: {\n    symbol: 'MARSH',\n    address: {\n      56: '0x2FA5dAF6Fe0708fBD63b1A7D1592577284f52256',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unmarshal.io/',\n  },\n}\n\nexport default tokens\n","const ARCHIVED_FARMS_START_PID = 139\nconst ARCHIVED_FARMS_END_PID = 250\n\nconst isArchivedPid = (pid: number) => pid >= ARCHIVED_FARMS_START_PID && pid <= ARCHIVED_FARMS_END_PID\n\nexport default isArchivedPid\n","import BigNumber from 'bignumber.js'\nimport { DEFAULT_GAS_PRICE } from 'config'\nimport { getDecimalAmount } from './formatBalance'\n\nexport interface UserSettings {\n  gasPrice: number\n}\n\nexport const VERSION = 1.01\n\nexport const GAS_SETTINGS = {\n  default: DEFAULT_GAS_PRICE,\n  fast: 10,\n  reallyfast: 15,\n}\n\nexport const getGasPriceInWei = (amountInGwei: number) => {\n  return getDecimalAmount(new BigNumber(amountInGwei), 9)\n}\n\nexport const getDefaultSettings = (): UserSettings => ({\n  gasPrice: GAS_SETTINGS.default,\n})\n\nexport const getStorageKey = (account: string) => {\n  return `pancakeswap_settings_${account}_${VERSION}`\n}\n\nexport const getSettings = (account: string): UserSettings => {\n  try {\n    const settingsFromLs = localStorage.getItem(getStorageKey(account))\n    return settingsFromLs ? JSON.parse(settingsFromLs) : getDefaultSettings()\n  } catch (error) {\n    return getDefaultSettings()\n  }\n}\n\nexport const setSettings = (account: string, newSettings: UserSettings) => {\n  localStorage.setItem(getStorageKey(account), JSON.stringify(newSettings))\n}\n\nexport const setSetting = (account: string, newSetting: Partial<UserSettings>) => {\n  const currentSettings = getSettings(account)\n  setSettings(account, { ...currentSettings, ...newSetting })\n}\n","import Web3 from 'web3'\nimport { AbiItem } from 'web3-utils'\nimport web3NoAccount from 'utils/web3'\nimport { poolsConfig } from 'config/constants'\nimport { PoolCategory } from 'config/constants/types'\n\n// Addresses\nimport {\n  getAddress,\n  getPancakeProfileAddress,\n  getPancakeRabbitsAddress,\n  getBunnyFactoryAddress,\n  getBunnySpecialAddress,\n  getCakeAddress,\n  getLotteryAddress,\n  getLotteryTicketAddress,\n  getNewLotteryAddress,\n  getLotteryV2Address,\n  getMasterChefAddress,\n  getPointCenterIfoAddress,\n  getClaimRefundAddress,\n  getTradingCompetitionAddress,\n  getEasterNftAddress,\n  getCakeVaultAddress,\n  getPredictionsAddress,\n  getChainlinkOracleAddress,\n  getReferralAddress,\n} from 'utils/addressHelpers'\n\n// ABI\nimport profileABI from 'config/abi/pancakeProfile.json'\nimport pancakeRabbitsAbi from 'config/abi/pancakeRabbits.json'\nimport bunnyFactoryAbi from 'config/abi/bunnyFactory.json'\nimport bunnySpecialAbi from 'config/abi/bunnySpecial.json'\nimport bep20Abi from 'config/abi/erc20.json'\nimport erc721Abi from 'config/abi/erc721.json'\nimport lpTokenAbi from 'config/abi/lpToken.json'\nimport cakeAbi from 'config/abi/cake.json'\nimport ifoV1Abi from 'config/abi/ifoV1.json'\nimport ifoV2Abi from 'config/abi/ifoV2.json'\nimport pointCenterIfo from 'config/abi/pointCenterIfo.json'\nimport lotteryAbi from 'config/abi/lottery.json'\nimport lotteryTicketAbi from 'config/abi/lotteryNft.json'\nimport lotteryV2Abi from 'config/abi/lotteryV2.json'\nimport newlotteryAbi from 'config/abi/newlottery.json'\nimport referralAbi from 'config/abi/referral.json'\nimport masterChef from 'config/abi/masterchef.json'\nimport sousChef from 'config/abi/sousChef.json'\nimport sousChefV2 from 'config/abi/sousChefV2.json'\nimport sousChefBnb from 'config/abi/sousChefBnb.json'\nimport claimRefundAbi from 'config/abi/claimRefund.json'\nimport tradingCompetitionAbi from 'config/abi/tradingCompetition.json'\nimport easterNftAbi from 'config/abi/easterNft.json'\nimport cakeVaultAbi from 'config/abi/cakeVault.json'\nimport predictionsAbi from 'config/abi/predictions.json'\nimport chainlinkOracleAbi from 'config/abi/chainlinkOracle.json'\nimport { DEFAULT_GAS_PRICE, TESTNET_CHAIN_ID } from 'config'\nimport { getSettings, getGasPriceInWei } from './settings'\n\nexport const getDefaultGasPrice = () => {\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  if (chainId === TESTNET_CHAIN_ID) {\n    return 10\n  }\n  return DEFAULT_GAS_PRICE\n}\n\nconst getContract = (abi: any, address: string, web3?: Web3, account?: string) => {\n  const _web3 = web3 ?? web3NoAccount\n  const gasPrice = account ? getSettings(account).gasPrice : getDefaultGasPrice()\n\n  return new _web3.eth.Contract(abi as unknown as AbiItem, address, {\n    gasPrice: getGasPriceInWei(gasPrice).toString(),\n  })\n}\n\nexport const getBep20Contract = (address: string, web3?: Web3) => {\n  return getContract(bep20Abi, address, web3)\n}\nexport const getErc721Contract = (address: string, web3?: Web3) => {\n  return getContract(erc721Abi, address, web3)\n}\nexport const getLpContract = (address: string, web3?: Web3) => {\n  return getContract(lpTokenAbi, address, web3)\n}\nexport const getIfoV1Contract = (address: string, web3?: Web3) => {\n  return getContract(ifoV1Abi, address, web3)\n}\nexport const getIfoV2Contract = (address: string, web3?: Web3) => {\n  return getContract(ifoV2Abi, address, web3)\n}\nexport const getSouschefContract = (id: number, web3?: Web3) => {\n  const config = poolsConfig.find((pool) => pool.sousId === id)\n  const abi = config.poolCategory === PoolCategory.BINANCE ? sousChefBnb : sousChef\n  return getContract(abi, getAddress(config.contractAddress), web3)\n}\nexport const getSouschefV2Contract = (id: number, web3?: Web3) => {\n  const config = poolsConfig.find((pool) => pool.sousId === id)\n  return getContract(sousChefV2, getAddress(config.contractAddress), web3)\n}\nexport const getPointCenterIfoContract = (web3?: Web3) => {\n  return getContract(pointCenterIfo, getPointCenterIfoAddress(), web3)\n}\nexport const getCakeContract = (web3?: Web3) => {\n  return getContract(cakeAbi, getCakeAddress(), web3)\n}\n// Cake and BRIS are the same\nexport const getBRISContract = (web3?: Web3) => {\n  return getContract(cakeAbi, getCakeAddress(), web3)\n}\nexport const getProfileContract = (web3?: Web3) => {\n  return getContract(profileABI, getPancakeProfileAddress(), web3)\n}\nexport const getPancakeRabbitContract = (web3?: Web3) => {\n  return getContract(pancakeRabbitsAbi, getPancakeRabbitsAddress(), web3)\n}\nexport const getBunnyFactoryContract = (web3?: Web3) => {\n  return getContract(bunnyFactoryAbi, getBunnyFactoryAddress(), web3)\n}\nexport const getBunnySpecialContract = (web3?: Web3) => {\n  return getContract(bunnySpecialAbi, getBunnySpecialAddress(), web3)\n}\nexport const getNewLotteryContract = (web3?: Web3) => {\n  return getContract(newlotteryAbi, getNewLotteryAddress(), web3)\n}\nexport const getLotteryContract = (web3?: Web3) => {\n  return getContract(lotteryAbi, getLotteryAddress(), web3)\n}\nexport const getLotteryTicketContract = (web3?: Web3) => {\n  return getContract(lotteryTicketAbi, getLotteryTicketAddress(), web3)\n}\nexport const getLotteryV2Contract = (web3?: Web3) => {\n  return getContract(lotteryV2Abi, getLotteryV2Address(), web3)\n}\nexport const getReferralContract = (web3?: Web3) => {\n  return getContract(referralAbi, getReferralAddress(), web3)\n}\nexport const getMasterchefContract = (web3?: Web3) => {\n  return getContract(masterChef, getMasterChefAddress(), web3)\n}\nexport const getClaimRefundContract = (web3?: Web3) => {\n  return getContract(claimRefundAbi, getClaimRefundAddress(), web3)\n}\nexport const getTradingCompetitionContract = (web3?: Web3) => {\n  return getContract(tradingCompetitionAbi, getTradingCompetitionAddress(), web3)\n}\nexport const getEasterNftContract = (web3?: Web3) => {\n  return getContract(easterNftAbi, getEasterNftAddress(), web3)\n}\nexport const getCakeVaultContract = (web3?: Web3) => {\n  return getContract(cakeVaultAbi, getCakeVaultAddress(), web3)\n}\nexport const getPredictionsContract = (web3?: Web3) => {\n  return getContract(predictionsAbi, getPredictionsAddress(), web3)\n}\nexport const getChainlinkOracleContract = (web3?: Web3) => {\n  return getContract(chainlinkOracleAbi, getChainlinkOracleAddress(), web3)\n}\n","import Web3 from 'web3'\nimport { AbiItem } from 'web3-utils'\nimport { Interface } from '@ethersproject/abi'\nimport { getWeb3NoAccount } from 'utils/web3'\nimport MultiCallAbi from 'config/abi/Multicall.json'\nimport { getMulticallAddress } from 'utils/addressHelpers'\n\ninterface Call {\n  address: string // Address of the contract\n  name: string // Function name on the contract (example: balanceOf)\n  params?: any[] // Function params\n}\n\ninterface MulticallOptions {\n  web3?: Web3\n  blockNumber?: number\n  requireSuccess?: boolean\n}\n\nconst multicall = async (abi: any[], calls: Call[], options: MulticallOptions = {}) => {\n  try {\n    const web3 = options.web3 || getWeb3NoAccount()\n    const multi = new web3.eth.Contract(MultiCallAbi as unknown as AbiItem, getMulticallAddress())\n    const itf = new Interface(abi)\n\n    const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n    const { returnData } = await multi.methods.aggregate(calldata).call(undefined, options.blockNumber)\n    const res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i].name, call))\n    return res\n  } catch (error) {\n    console.error(error);\n    // throw new Error(error)\n    throw new Error(\"Error\")\n    \n  }\n}\n\n/**\n * Multicall V2 uses the new \"tryAggregate\" function. It is different in 2 ways\n *\n * 1. If \"requireSuccess\" is false multicall will not bail out if one of the calls fails\n * 2. The return inclues a boolean whether the call was successful e.g. [wasSuccessfull, callResult]\n */\nexport const multicallv2 = async (abi: any[], calls: Call[], options: MulticallOptions = {}) => {\n  const web3 = options.web3 || getWeb3NoAccount()\n  const multi = new web3.eth.Contract(MultiCallAbi as unknown as AbiItem, getMulticallAddress())\n  const itf = new Interface(abi)\n\n  const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n  const returnData = await multi.methods\n    .tryAggregate(options.requireSuccess === undefined ? true : options.requireSuccess, calldata)\n    .call(undefined, options.blockNumber)\n  const res = returnData.map((call, i) => {\n    const [result, data] = call\n    return {\n      result,\n      data: itf.decodeFunctionResult(calls[i].name, data),\n    }\n  })\n\n  return res\n}\nexport default multicall\n","import BigNumber from 'bignumber.js'\nimport { BIG_TEN } from './bigNumber'\n\n/**\n * Take a formatted amount, e.g. 15 BNB and convert it to full decimal value, e.g. 15000000000000000\n */\nexport const getDecimalAmount = (amount: BigNumber, decimals = 18) => {\n  return new BigNumber(amount).times(BIG_TEN.pow(decimals))\n}\n\nexport const getBalanceAmount = (amount: BigNumber, decimals = 18) => {\n  return new BigNumber(amount).dividedBy(BIG_TEN.pow(decimals))\n}\n\n/**\n * This function is not really necessary but is used throughout the site.\n */\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\n  return getBalanceAmount(balance, decimals).toNumber()\n}\n\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18, decimalsToAppear?: number) => {\n  return getBalanceAmount(balance, decimals).toFixed(decimalsToAppear)\n}\n\nexport const formatNumber = (number: number, minPrecision = 2, maxPrecision = 2) => {\n  const options = {\n    minimumFractionDigits: minPrecision,\n    maximumFractionDigits: maxPrecision,\n  }\n  return number.toLocaleString(undefined, options)\n}\n","import { configureStore } from '@reduxjs/toolkit'\nimport { useDispatch } from 'react-redux'\nimport farmsReducer from './farms'\nimport poolsReducer from './pools'\nimport predictionsReducer from './predictions'\nimport profileReducer from './profile'\nimport teamsReducer from './teams'\nimport achievementsReducer from './achievements'\nimport blockReducer from './block'\nimport collectiblesReducer from './collectibles'\n\nconst store = configureStore({\n  devTools: process.env.NODE_ENV !== 'production',\n  reducer: {\n    achievements: achievementsReducer,\n    block: blockReducer,\n    farms: farmsReducer,\n    pools: poolsReducer,\n    predictions: predictionsReducer,\n    profile: profileReducer,\n    teams: teamsReducer,\n    collectibles: collectiblesReducer,\n  },\n})\n\n/**\n * @see https://redux-toolkit.js.org/usage/usage-with-typescript#getting-the-dispatch-type\n */\nexport type AppDispatch = typeof store.dispatch\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\n\nexport default store\n","import tokens from './tokens'\nimport { PoolConfig, PoolCategory } from './types'\n\nconst pools: PoolConfig[] = [\n  {\n    sousId: 0,\n    stakingToken: tokens.bris,\n    earningToken: tokens.bris,\n    contractAddress: {\n      97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n      56: '0x0fb702557f4c0ab1ce0d9a1c37296409c5f57d06',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.01',\n    sortOrder: 1,\n    isFinished: false,\n  },\n//   {\n//     sousId: 174,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.oddz,\n//     contractAddress: {\n//       97: '',\n//       56: '0x44d1f81e80e43e935d66d65874354ef91e5e49f6',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     sortOrder: 999,\n//     tokenPerBlock: '0.4843',\n//   },\n//   {\n//     sousId: 173,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.bondly,\n//     contractAddress: {\n//       97: '',\n//       56: '0x4ea43fce546975aae120c9eeceb172500be4a02b',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     sortOrder: 999,\n//     tokenPerBlock: '0.6741',\n//   },\n//   {\n//     sousId: 172,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.marsh,\n//     contractAddress: {\n//       97: '',\n//       56: '0x567fd708e788e51b68666b9310ee9df163d60fae',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     sortOrder: 999,\n//     tokenPerBlock: '0.1108',\n//   },\n//   {\n//     sousId: 171,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.mbox,\n//     contractAddress: {\n//       97: '',\n//       56: '0x36f9452083fc9bc469a31e7966b873f402292433',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     sortOrder: 999,\n//     tokenPerBlock: '0.4803',\n//   },\n//   {\n//     sousId: 170,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.ata,\n//     contractAddress: {\n//       97: '',\n//       56: '0xc612680457751d0d01b5d901ad08132a3b001900',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     sortOrder: 999,\n//     tokenPerBlock: '1.7361',\n//   },\n//   {\n//     sousId: 169,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.mx,\n//     contractAddress: {\n//       97: '',\n//       56: '0x336bcd59f2b6eb7221a99f7a50fd03c6bf9a306b',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     sortOrder: 999,\n//     tokenPerBlock: '0.27777',\n//   },\n//   {\n//     sousId: 168,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.bcfx,\n//     contractAddress: {\n//       97: '',\n//       56: '0x2b3974dda76b2d408b7d680a27fbb0393e3cf0e1',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     sortOrder: 999,\n//     tokenPerBlock: '0.6944',\n//   },\n//   {\n//     sousId: 167,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.qkc,\n//     contractAddress: {\n//       97: '',\n//       56: '0xfa67f97eeee6de55d179ecabbfe701f27d9a1ed9',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     sortOrder: 999,\n//     tokenPerBlock: '15.9143',\n//   },\n//   {\n//     sousId: 166,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.ktn,\n//     contractAddress: {\n//       97: '',\n//       56: '0x48852322a185dc5fc733ff8c8d7c6dcbd2b3b2a2',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     sortOrder: 999,\n//     tokenPerBlock: '0.01215',\n//   },\n//   {\n//     sousId: 165,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.mtrg,\n//     contractAddress: {\n//       97: '',\n//       56: '0xf4d0f71698f58f221911515781b05e808a8635cb',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     sortOrder: 999,\n//     tokenPerBlock: '0.05613',\n//   },\n//   {\n//     sousId: 164,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.tusd,\n//     contractAddress: {\n//       97: '',\n//       56: '0x9dceb1d92f7e0361d0766f3d98482424df857654',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     sortOrder: 999,\n//     tokenPerBlock: '0.5787',\n//   },\n//   {\n//     sousId: 163,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.vrt,\n//     contractAddress: {\n//       97: '',\n//       56: '0xb77f1425ec3a7c78b1a1e892f72332c8b5e8ffcb',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     sortOrder: 999,\n//     tokenPerBlock: '40.5092',\n//   },\n//   {\n//     sousId: 162,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.kalm,\n//     contractAddress: {\n//       97: '',\n//       56: '0xb9ff4da0954b300542e722097671ead8cf337c17',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     sortOrder: 999,\n//     tokenPerBlock: '0.0868',\n//   },\n//   {\n//     sousId: 161,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.ez,\n//     contractAddress: {\n//       97: '',\n//       56: '0xb19395702460261e51edf7a7b130109c64f13af9',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     sortOrder: 999,\n//     tokenPerBlock: '0.01736',\n//   },\n//   {\n//     sousId: 160,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.kalm,\n//     contractAddress: {\n//       97: '',\n//       56: '0x6e113ecb9ff2d271140f124c2cc5b5e4b5700c9f',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     sortOrder: 999,\n//     isFinished: true,\n//     tokenPerBlock: '0.00868',\n//   },\n//   {\n//     sousId: 159,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.popen,\n//     contractAddress: {\n//       97: '',\n//       56: '0x7baf1763ce5d0da8c9d85927f08a8be9c481ce50',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     sortOrder: 999,\n//     tokenPerBlock: '0.19097',\n//   },\n//   {\n//     sousId: 158,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.lien,\n//     contractAddress: {\n//       97: '',\n//       56: '0x2b8d6c9c62bfc1bed84724165d3000e61d332cab',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     sortOrder: 999,\n//     tokenPerBlock: '0.023148',\n//   },\n//   {\n//     sousId: 157,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.well,\n//     contractAddress: {\n//       97: '',\n//       56: '0x8a06ff2748edcba3fb4e44a6bfda4e46769e557b',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     tokenPerBlock: '0.2025',\n//     sortOrder: 999,\n//   },\n//   {\n//     sousId: 156,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.deri,\n//     contractAddress: {\n//       97: '',\n//       56: '0x3eba95f5493349bbe0cad33eaae05dc6a7e26b90',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     tokenPerBlock: '1.6087',\n//     sortOrder: 999,\n//   },\n//   {\n//     sousId: 155,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.chr,\n//     contractAddress: {\n//       97: '',\n//       56: '0x593edbd14a5b7eec828336accca9c16cc12f04be',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     tokenPerBlock: '1.655',\n//     sortOrder: 999,\n//   },\n//   {\n//     sousId: 154,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.cyc,\n//     contractAddress: {\n//       97: '',\n//       56: '0xD714738837944C3c592477249E8edB724A76e068',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     tokenPerBlock: '0.00015914',\n//     sortOrder: 999,\n//   },\n//   {\n//     sousId: 153,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.xend,\n//     contractAddress: {\n//       97: '',\n//       56: '0x8ea9f2482b2f7b12744a831f81f8d08714adc093',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     tokenPerBlock: '0.31828',\n//     sortOrder: 999,\n//     isFinished: false,\n//   },\n//   {\n//     sousId: 152,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.hget,\n//     contractAddress: {\n//       97: '',\n//       56: '0x8e8125f871eb5ba9d55361365f5391ab437f9acc',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     tokenPerBlock: '0.03553',\n//     sortOrder: 999,\n//     isFinished: false,\n//   },\n//   {\n//     sousId: 151,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.hotcross,\n//     contractAddress: {\n//       97: '',\n//       56: '0x0e09205e993f78cd5b3a5df355ae98ee7d0b5834',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     sortOrder: 999,\n//     tokenPerBlock: '3.4722',\n//     isFinished: false,\n//   },\n//   {\n//     sousId: 150,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.rfox,\n//     contractAddress: {\n//       97: '',\n//       56: '0xf9f00d41b1f4b3c531ff750a9b986c1a530f33d9',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     sortOrder: 999,\n//     tokenPerBlock: '1.7361',\n//     isFinished: false,\n//   },\n//   {\n//     sousId: 149,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.wmass,\n//     contractAddress: {\n//       97: '',\n//       56: '0x4Af531EcD50167a9402Ce921ee6436dd4cFC04FD',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     sortOrder: 999,\n//     tokenPerBlock: '0.24942',\n//     isFinished: false,\n//   },\n//   {\n//     sousId: 148,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.ubxt,\n//     contractAddress: {\n//       97: '',\n//       56: '0x9b4bac2d8f69853aa29cb45478c77fc54532ac22',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     sortOrder: 999,\n//     tokenPerBlock: '2.4074',\n//     isFinished: false,\n//   },\n//   {\n//     sousId: 147,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.btr,\n//     contractAddress: {\n//       97: '',\n//       56: '0x20ee70a07ae1b475cb150dec27930d97915726ea',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     sortOrder: 999,\n//     tokenPerBlock: '2.8935',\n//     isFinished: false,\n//   },\n//   {\n//     sousId: 146,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.τdoge,\n//     contractAddress: {\n//       97: '',\n//       56: '0x017556dffb8c6a52fd7f4788adf6fb339309c81b',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     sortOrder: 999,\n//     tokenPerBlock: '0.868',\n//     isFinished: false,\n//   },\n//   {\n//     sousId: 145,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.pmon,\n//     contractAddress: {\n//       97: '',\n//       56: '0xdaa711ecf2ac0bff5c82fceeae96d0008791cc49',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     sortOrder: 999,\n//     tokenPerBlock: '0.01261',\n//     isFinished: false,\n//   },\n//   {\n//     sousId: 144,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.one,\n//     contractAddress: {\n//       97: '',\n//       56: '0x74af842ecd0b6588add455a47aa21ed9ba794108',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     sortOrder: 999,\n//     tokenPerBlock: '57.87',\n//     isFinished: false,\n//   },\n//   {\n//     sousId: 143,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.fine,\n//     contractAddress: {\n//       97: '',\n//       56: '0x42d41749d6e9a1c5b47e27f690d4531f181b2159',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     sortOrder: 999,\n//     tokenPerBlock: '0.1342',\n//     isFinished: false,\n//   },\n//   {\n//     sousId: 142,\n//     stakingToken: tokens.doge,\n//     earningToken: tokens.cake,\n//     contractAddress: {\n//       97: '',\n//       56: '0xbebd44824631b55991fa5f2bf5c7a4ec96ff805b',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     sortOrder: 999,\n//     tokenPerBlock: '0.01388',\n//     isFinished: false,\n//   },\n//   {\n//     sousId: 141,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.bmxx,\n//     contractAddress: {\n//       97: '',\n//       56: '0x55131f330c886e3f0cae389cedb23766ac9aa3ed',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     sortOrder: 999,\n//     tokenPerBlock: '0.01331',\n//     isFinished: false,\n//   },\n//   {\n//     sousId: 140,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.oin,\n//     contractAddress: {\n//       97: '',\n//       56: '0x01453a74a94687fa3f99b80762435855a13664f4',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     sortOrder: 999,\n//     tokenPerBlock: '0.3472',\n//     isFinished: false,\n//   },\n//   {\n//     sousId: 139,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.hyfi,\n//     contractAddress: {\n//       97: '',\n//       56: '0x0032ceb978fe5fc8a5d5d6f5adfc005e76397e29',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     sortOrder: 999,\n//     tokenPerBlock: '2.8935',\n//     isFinished: false,\n//   },\n//   {\n//     sousId: 138,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.kun,\n//     contractAddress: {\n//       97: '',\n//       56: '0x439b46d467402cebc1a2fa05038b5b696b1f4417',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     sortOrder: 999,\n//     tokenPerBlock: '0.23148',\n//     isFinished: false,\n//   },\n//   {\n//     sousId: 137,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.math,\n//     contractAddress: {\n//       97: '',\n//       56: '0x377ae5f933aa4cfa41fa03e2cae8a2befccf53b2',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     sortOrder: 999,\n//     tokenPerBlock: '0.15798',\n//     isFinished: false,\n//   },\n//   {\n//     sousId: 136,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.ust,\n//     contractAddress: {\n//       97: '',\n//       56: '0xce3ebac3f549ebf1a174a6ac3b390c179422b5f6',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     sortOrder: 999,\n//     tokenPerBlock: '0.17361',\n//     isFinished: false,\n//   },\n//   {\n//     sousId: 135,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.win,\n//     contractAddress: {\n//       97: '',\n//       56: '0xd26dec254c699935c286cd90e9841dcabf1af72d',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     sortOrder: 999,\n//     tokenPerBlock: '462.96',\n//     isFinished: false,\n//   },\n//   {\n//     sousId: 134,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.trx,\n//     contractAddress: {\n//       97: '',\n//       56: '0x93e2867d9b74341c2d19101b7fbb81d6063cca4d',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     sortOrder: 999,\n//     tokenPerBlock: '4.0509',\n//     isFinished: false,\n//   },\n//   {\n//     sousId: 133,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.btt,\n//     contractAddress: {\n//       97: '',\n//       56: '0x3b644e44033cff70bd6b771904225f3dd69dfb6d',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     sortOrder: 999,\n//     tokenPerBlock: '79.86',\n//     isFinished: false,\n//   },\n//   {\n//     sousId: 132,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.lmt,\n//     contractAddress: {\n//       97: '',\n//       56: '0x0a687d7b951348d681f7ed5eea84c0ba7b9566dc',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     sortOrder: 999,\n//     tokenPerBlock: '0.66145',\n//     isFinished: false,\n//   },\n//   {\n//     sousId: 131,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.pnt,\n//     contractAddress: {\n//       97: '',\n//       56: '0x417df1c0e6a498eb1f2247f99032a01d4fafe922',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     sortOrder: 999,\n//     tokenPerBlock: '0.09548',\n//     isFinished: false,\n//   },\n//   {\n//     sousId: 130,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.xmark,\n//     contractAddress: {\n//       97: '',\n//       56: '0xdc8943d806f9dd64312d155284abf780455fd345',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     sortOrder: 999,\n//     tokenPerBlock: '0.0298',\n//     isFinished: false,\n//   },\n//   {\n//     sousId: 129,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.ramp,\n//     contractAddress: {\n//       97: '',\n//       56: '0xa90a894e5bc20ab2be46c7e033a38f8b8eaa771a',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     sortOrder: 999,\n//     tokenPerBlock: '0.4861',\n//     isFinished: true,\n//   },\n//   {\n//     sousId: 128,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.hakka,\n//     contractAddress: {\n//       97: '',\n//       56: '0x34ac807e34e534fe426da1e11f816422774aae1c',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     sortOrder: 999,\n//     tokenPerBlock: '3.4722',\n//     isFinished: false,\n//   },\n//   {\n//     sousId: 127,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.pbtc,\n//     contractAddress: {\n//       97: '',\n//       56: '0x31fa2f516b77c4273168b284ac6d9def5aa6dafb',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     sortOrder: 999,\n//     tokenPerBlock: '0.0000031',\n//     isFinished: false,\n//   },\n//   {\n//     sousId: 126,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.lien,\n//     contractAddress: {\n//       97: '',\n//       56: '0x7112f8988f075c7784666ab071927ae4109a8076',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     sortOrder: 999,\n//     tokenPerBlock: '0.003472',\n//     isFinished: false,\n//   },\n//   {\n//     sousId: 125,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.bbadger,\n//     contractAddress: {\n//       97: '',\n//       56: '0x126dfbcef85c5bf335f8be99ca4006037f417892',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     sortOrder: 999,\n//     tokenPerBlock: '0.00265278',\n//     isFinished: false,\n//   },\n//   {\n//     sousId: 124,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.bdigg,\n//     contractAddress: {\n//       97: '',\n//       56: '0x4f0ad2332b1f9983e8f63cbee617523bb7de5031',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     sortOrder: 999,\n//     tokenPerBlock: '0.00000403',\n//     isFinished: false,\n//   },\n//   {\n//     sousId: 123,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.bondly,\n//     contractAddress: {\n//       97: '',\n//       56: '0x9483ca44324de06802576866b9d296f7614f45ac',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     sortOrder: 999,\n//     tokenPerBlock: '0.4629',\n//     isFinished: false,\n//   },\n//   {\n//     sousId: 122,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.xed,\n//     contractAddress: {\n//       97: '',\n//       56: '0x72ceec6e2a142678e703ab0710de78bc819f4ce0',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     sortOrder: 999,\n//     tokenPerBlock: '0.3472',\n//     isFinished: false,\n//   },\n//   {\n//     sousId: 121,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.cgg,\n//     contractAddress: {\n//       97: '',\n//       56: '0x1c6ed21d3313822ae73ed0d94811ffbbe543f341',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     sortOrder: 999,\n//     tokenPerBlock: '0.10918',\n//     isFinished: false,\n//   },\n//   {\n//     sousId: 120,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.perl,\n//     contractAddress: {\n//       97: '',\n//       56: '0x1ac0d0333640f57327c83053c581340ebc829e30',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     sortOrder: 999,\n//     tokenPerBlock: '1.1574',\n//     isFinished: false,\n//   },\n//   {\n//     sousId: 119,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.arpa,\n//     contractAddress: {\n//       97: '',\n//       56: '0xc707e5589aeb1dc117b0bb5a3622362f1812d4fc',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     sortOrder: 999,\n//     tokenPerBlock: '0.949',\n//     isFinished: false,\n//   },\n//   {\n//     sousId: 118,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.oddz,\n//     contractAddress: {\n//       97: '',\n//       56: '0x22106cdcf9787969e1672d8e6a9c03a889cda9c5',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     sortOrder: 999,\n//     tokenPerBlock: '0.11284',\n//     isFinished: false,\n//   },\n//   {\n//     sousId: 117,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.dexe,\n//     contractAddress: {\n//       97: '',\n//       56: '0x999b86e8bba3d4f05afb8155963999db70afa97f',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     sortOrder: 999,\n//     tokenPerBlock: '0.009837',\n//     isFinished: true,\n//   },\n//   {\n//     sousId: 116,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.dfd,\n//     contractAddress: {\n//       97: '',\n//       56: '0xAF3EfE5fCEeBc603Eada6A2b0172be11f7405102',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     sortOrder: 999,\n//     tokenPerBlock: '0.46296',\n//     isFinished: false,\n//   },\n//   {\n//     sousId: 115,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.alpaca,\n//     contractAddress: {\n//       97: '',\n//       56: '0xf73fdeb26a8c7a4abf3809d3db11a06ba5c13d0e',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     sortOrder: 999,\n//     tokenPerBlock: '0.22743',\n//     isFinished: false,\n//   },\n//   {\n//     sousId: 114,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.τbtc,\n//     contractAddress: {\n//       97: '',\n//       56: '0xaac7171afc93f4b75e1268d208040b152ac65e32',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     sortOrder: 999,\n//     tokenPerBlock: '0.00000608',\n//     isFinished: false,\n//   },\n//   {\n//     sousId: 113,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.τbtc,\n//     contractAddress: {\n//       97: '',\n//       56: '0x2c6017269b4324d016ca5d8e3267368652c18905',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     sortOrder: 999,\n//     tokenPerBlock: '0.00000608',\n//     isFinished: true,\n//   },\n//   {\n//     sousId: 112,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.swingby,\n//     contractAddress: {\n//       97: '',\n//       56: '0x675434c68f2672c983e36cf10ed13a4014720b79',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     sortOrder: 999,\n//     tokenPerBlock: '0.21527',\n//   },\n//   {\n//     sousId: 111,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.xed,\n//     contractAddress: {\n//       97: '',\n//       56: '0x05d6c2d1d687eacfb5e6440d5a3511e91f2201a8',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     sortOrder: 999,\n//     tokenPerBlock: '0.3472',\n//     isFinished: true,\n//     enableEmergencyWithdraw: true,\n//   },\n//   {\n//     sousId: 110,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.hakka,\n//     contractAddress: {\n//       97: '',\n//       56: '0xd623a32da4a632ce01766c317d07cb2cad56949b',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     sortOrder: 999,\n//     tokenPerBlock: '3.4722',\n//     isFinished: true,\n//     enableEmergencyWithdraw: true,\n//   },\n//   {\n//     sousId: 109,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.cgg,\n//     contractAddress: {\n//       97: '',\n//       56: '0xdf75f38dbc98f9f26377414e567abcb8d57cca33',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     sortOrder: 999,\n//     tokenPerBlock: '0.10918',\n//     isFinished: true,\n//     enableEmergencyWithdraw: true,\n//   },\n//   {\n//     sousId: 108,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.mix,\n//     contractAddress: {\n//       97: '',\n//       56: '0xce64a930884b2c68cd93fc1c7c7cdc221d427692',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     sortOrder: 999,\n//     tokenPerBlock: '0.3721',\n//   },\n//   {\n//     sousId: 107,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.suter,\n//     contractAddress: {\n//       97: '',\n//       56: '0xc1E70edd0141c454b834Deac7ddDeA413424aEf9',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     sortOrder: 999,\n//     tokenPerBlock: '15.3356',\n//   },\n//   {\n//     sousId: 106,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.broobee,\n//     contractAddress: {\n//       97: '',\n//       56: '0x189d8228CdfDc404Bd9e5bD65ff958cb5fd8855c',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     sortOrder: 999,\n//     tokenPerBlock: '14.4675',\n//   },\n//   {\n//     sousId: 105,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.hzn,\n//     contractAddress: {\n//       97: '',\n//       56: '0x0196c582216e2463f052E2B07Ef8667Bec9Fb17a',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     sortOrder: 999,\n//     tokenPerBlock: '0.6944',\n//   },\n//   {\n//     sousId: 104,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.alpa,\n//     contractAddress: {\n//       97: '',\n//       56: '0x8f84106286c9c8A42bc3555C835E6e2090684ab7',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     sortOrder: 999,\n//     tokenPerBlock: '0.23495',\n//   },\n//   {\n//     sousId: 103,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.perl,\n//     contractAddress: {\n//       97: '',\n//       56: '0xa8d32b31ECB5142f067548Bf0424389eE98FaF26',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     sortOrder: 999,\n//     tokenPerBlock: '1.1574',\n//     isFinished: true,\n//     enableEmergencyWithdraw: true,\n//   },\n//   {\n//     sousId: 102,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.tlm,\n//     contractAddress: {\n//       97: '',\n//       56: '0xC59aa49aE508050c2dF653E77bE13822fFf02E9A',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     sortOrder: 999,\n//     tokenPerBlock: '17.361',\n//   },\n//   {\n//     sousId: 101,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.jgn,\n//     contractAddress: {\n//       97: '',\n//       56: '0x14AeA62384789EDA98f444cCb970F6730877d3F9',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     sortOrder: 999,\n//     tokenPerBlock: '0.08796',\n//   },\n//   {\n//     sousId: 100,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.eps,\n//     contractAddress: {\n//       97: '',\n//       56: '0xebb87dF24D65977cbe62538E4B3cFBD5d0308642',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     sortOrder: 999,\n//     tokenPerBlock: '0.07716',\n//   },\n//   {\n//     sousId: 99,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.arpa,\n//     contractAddress: {\n//       97: '',\n//       56: '0x40918EF8efFF4aA061656013a81E0e5A8A702eA7',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     sortOrder: 999,\n//     tokenPerBlock: '0.949',\n//     isFinished: true,\n//     enableEmergencyWithdraw: true,\n//   },\n//   {\n//     sousId: 98,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.itam,\n//     contractAddress: {\n//       97: '',\n//       56: '0x44eC1B26035865D9A7C130fD872670CD7Ebac2bC',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     sortOrder: 999,\n//     tokenPerBlock: '3.096',\n//   },\n//   {\n//     sousId: 97,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.bondly,\n//     contractAddress: {\n//       97: '',\n//       56: '0x1329ad151dE6C441184E32E108401126AE850937',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     sortOrder: 999,\n//     tokenPerBlock: '0.4629',\n//     isFinished: true,\n//     enableEmergencyWithdraw: true,\n//   },\n//   {\n//     sousId: 96,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.tko,\n//     contractAddress: {\n//       97: '',\n//       56: '0x9bbDc92474a7e7321B78dcDA5EF35f4981438760',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     sortOrder: 999,\n//     tokenPerBlock: '1.1574',\n//   },\n//   {\n//     sousId: 95,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.apys,\n//     contractAddress: {\n//       97: '',\n//       56: '0x46530d79b238f809e80313e73715b160c66677aF',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     sortOrder: 999,\n//     tokenPerBlock: '0.09953',\n//   },\n//   {\n//     sousId: 94,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.hoo,\n//     contractAddress: {\n//       97: '',\n//       56: '0x47fD853D5baD391899172892F91FAa6d0cd8A2Aa',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     sortOrder: 999,\n//     tokenPerBlock: '0.489',\n//   },\n//   {\n//     sousId: 93,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.oddz,\n//     contractAddress: {\n//       97: '',\n//       56: '0xe25aB6F05BBF6C1be953BF2d7df15B3e01b8e5a5',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     sortOrder: 999,\n//     tokenPerBlock: '0.11284',\n//     isFinished: true,\n//     enableEmergencyWithdraw: true,\n//   },\n//   {\n//     sousId: 92,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.easy,\n//     contractAddress: {\n//       97: '',\n//       56: '0xEB8Fd597921E3Dd37B0F103a2625F855e2C9b9B5',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     sortOrder: 999,\n//     tokenPerBlock: '0.0072338',\n//   },\n//   {\n//     sousId: 91,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.nrv,\n//     contractAddress: {\n//       97: '',\n//       56: '0xABFd8d1942628124aB971937154f826Bce86DcbC',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     sortOrder: 999,\n//     tokenPerBlock: '0.15046',\n//   },\n//   {\n//     sousId: 90,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.dego,\n//     contractAddress: {\n//       97: '',\n//       56: '0x526d3c204255f807C95a99b69596f2f9f72345e5',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     sortOrder: 999,\n//     tokenPerBlock: '0.00405',\n//   },\n//   {\n//     sousId: 89,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.gum,\n//     contractAddress: {\n//       97: '',\n//       56: '0xAa2082BeE04fc518300ec673F9497ffa6F669dB8',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     sortOrder: 999,\n//     tokenPerBlock: '0.08912',\n//   },\n//   {\n//     sousId: 88,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.pbtc,\n//     contractAddress: {\n//       97: '',\n//       56: '0x9096625Bc0d36F5EDa6d44e511641667d89C28f4',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     sortOrder: 999,\n//     tokenPerBlock: '0.0000031',\n//     isFinished: true,\n//     enableEmergencyWithdraw: true,\n//   },\n//   {\n//     sousId: 87,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.dft,\n//     contractAddress: {\n//       97: '',\n//       56: '0x78BD4dB48F8983c3C36C8EAFbEF38f6aC7B55285',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     sortOrder: 999,\n//     tokenPerBlock: '0.6811',\n//   },\n//   {\n//     sousId: 86,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.swth,\n//     contractAddress: {\n//       97: '',\n//       56: '0x35418e14F5aA615C4f020eFBa6e01C5DbF15AdD2',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     sortOrder: 999,\n//     tokenPerBlock: '2.3148',\n//   },\n//   {\n//     sousId: 85,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.lien,\n//     contractAddress: {\n//       97: '',\n//       56: '0x3c7cC49a35942fbD3C2ad428a6c22490cd709d03',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     sortOrder: 999,\n//     tokenPerBlock: '0.003472',\n//     isFinished: true,\n//     enableEmergencyWithdraw: true,\n//   },\n//   {\n//     sousId: 84,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.zil,\n//     contractAddress: {\n//       97: '',\n//       56: '0xF795739737ABcFE0273f4Dced076460fdD024Dd9',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     sortOrder: 999,\n//     tokenPerBlock: '1.0995',\n//   },\n//   {\n//     sousId: 83,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.pcws,\n//     contractAddress: {\n//       97: '',\n//       56: '0x06FF8960F7F4aE572A3f57FAe77B2882BE94Bf90',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     sortOrder: 999,\n//     tokenPerBlock: '0.00434',\n//   },\n//   {\n//     sousId: 82,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.bbadger,\n//     contractAddress: {\n//       97: '',\n//       56: '0xe4dD0C50fb314A8B2e84D211546F5B57eDd7c2b9',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     sortOrder: 999,\n//     tokenPerBlock: '0.00265278',\n//     isFinished: true,\n//     enableEmergencyWithdraw: true,\n//   },\n//   {\n//     sousId: 81,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.bdigg,\n//     contractAddress: {\n//       97: '',\n//       56: '0xb627A7e33Db571bE792B0b69c5C2f5a8160d5500',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     sortOrder: 999,\n//     tokenPerBlock: '0.00000403',\n//     isFinished: true,\n//     enableEmergencyWithdraw: true,\n//   },\n//   {\n//     sousId: 80,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.lto,\n//     contractAddress: {\n//       97: '',\n//       56: '0xadBfFA25594AF8Bc421ecaDF54D057236a99781e',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     sortOrder: 999,\n//     tokenPerBlock: '0.2893',\n//   },\n//   {\n//     sousId: 79,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.mir,\n//     contractAddress: {\n//       97: '',\n//       56: '0x3e31488f08EBcE6F2D8a2AA512aeFa49a3C7dFa7',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     tokenPerBlock: '0.01273',\n//     sortOrder: 999,\n//     isFinished: false,\n//   },\n//   {\n//     sousId: 78,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.mir,\n//     contractAddress: {\n//       97: '',\n//       56: '0x453a75908fb5a36d482d5f8fe88eca836f32ead5',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     tokenPerBlock: '0.01273',\n//     sortOrder: 999,\n//     isFinished: true,\n//     enableEmergencyWithdraw: true,\n//   },\n//   {\n//     sousId: 77,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.trade,\n//     contractAddress: {\n//       97: '',\n//       56: '0x509C99D73FB54b2c20689708b3F824147292D38e',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     tokenPerBlock: '0.4484',\n//     sortOrder: 999,\n//     isFinished: false,\n//   },\n//   {\n//     sousId: 76,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.dusk,\n//     contractAddress: {\n//       97: '',\n//       56: '0xF1bd5673Ea4a1C415ec84fa3E402F2F7788E7717',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     tokenPerBlock: '0.4629',\n//     sortOrder: 999,\n//     isFinished: false,\n//   },\n//   {\n//     sousId: 75,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.bifi,\n//     contractAddress: {\n//       97: '',\n//       56: '0xB4C68A1C565298834360BbFF1652284275120D47',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     tokenPerBlock: '0.00007234',\n//     sortOrder: 999,\n//     isFinished: false,\n//   },\n//   {\n//     sousId: 74,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.txl,\n//     contractAddress: {\n//       97: '',\n//       56: '0x153e62257F1AAe05d5d253a670Ca7585c8D3F94F',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     tokenPerBlock: '0.434027',\n//     sortOrder: 999,\n//     isFinished: false,\n//   },\n//   {\n//     sousId: 73,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.cos,\n//     contractAddress: {\n//       97: '',\n//       56: '0xF682D186168b4114ffDbF1291F19429310727151',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     tokenPerBlock: '5.787',\n//     sortOrder: 999,\n//     isFinished: false,\n//   },\n//   {\n//     sousId: 72,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.bunny,\n//     contractAddress: {\n//       97: '',\n//       56: '0xaDdAE5f4dB84847ac9d947AED1304A8e7D19f7cA',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     tokenPerBlock: '0.00289',\n//     sortOrder: 999,\n//     isFinished: false,\n//   },\n//   {\n//     sousId: 71,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.alice,\n//     contractAddress: {\n//       97: '',\n//       56: '0x4C32048628D0d32d4D6c52662FB4A92747782B56',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     tokenPerBlock: '0.14467',\n//     sortOrder: 999,\n//     isFinished: false,\n//   },\n//   {\n//     sousId: 70,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.for,\n//     contractAddress: {\n//       97: '',\n//       56: '0x47642101e8D8578C42765d7AbcFd0bA31868c523',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     tokenPerBlock: '2.8935',\n//     sortOrder: 999,\n//     isFinished: false,\n//   },\n//   {\n//     sousId: 69,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.bux,\n//     contractAddress: {\n//       97: '',\n//       56: '0x07F8217c68ed9b838b0b8B58C19c79bACE746e9A',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     tokenPerBlock: '0.5787',\n//     sortOrder: 999,\n//     isFinished: false,\n//   },\n//   {\n//     sousId: 68,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.nuls,\n//     contractAddress: {\n//       97: '',\n//       56: '0x580DC9bB9260A922E3A4355b9119dB990F09410d',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     tokenPerBlock: '0.0868',\n//     sortOrder: 999,\n//     isFinished: false,\n//   },\n//   {\n//     sousId: 67,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.belt,\n//     contractAddress: {\n//       97: '',\n//       56: '0x6f0037d158eD1AeE395e1c12d21aE8583842F472',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     tokenPerBlock: '0.00868',\n//     sortOrder: 999,\n//     isFinished: true,\n//   },\n//   {\n//     sousId: 66,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.ramp,\n//     contractAddress: {\n//       97: '',\n//       56: '0x423382f989C6C289c8D441000e1045e231bd7d90',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     tokenPerBlock: '0.4861',\n//     sortOrder: 999,\n//     isFinished: true,\n//     enableEmergencyWithdraw: true,\n//   },\n//   {\n//     sousId: 65,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.bfi,\n//     contractAddress: {\n//       97: '',\n//       56: '0x0A595623b58dFDe6eB468b613C11A7A8E84F09b9',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     tokenPerBlock: '0.0001157',\n//     sortOrder: 999,\n//     isFinished: false,\n//   },\n//   {\n//     sousId: 64,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.dexe,\n//     contractAddress: {\n//       97: '',\n//       56: '0x9E6dA246d369a41DC44673ce658966cAf487f7b2',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     tokenPerBlock: '0.009837',\n//     sortOrder: 999,\n//     isFinished: true,\n//     enableEmergencyWithdraw: true,\n//   },\n//   {\n//     sousId: 63,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.bel,\n//     contractAddress: {\n//       97: '',\n//       56: '0x2C0f449387b15793B9da27c2d945dBed83ab1B07',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     tokenPerBlock: '0.0549',\n//     sortOrder: 999,\n//     isFinished: false,\n//   },\n//   {\n//     sousId: 62,\n//     stakingToken: tokens.tpt,\n//     earningToken: tokens.cake,\n//     contractAddress: {\n//       97: '',\n//       56: '0x0c3D6892aa3b23811Af3bd1bbeA8b0740E8e4528',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     tokenPerBlock: '0.0462',\n//     sortOrder: 999,\n//     isFinished: true,\n//   },\n//   {\n//     sousId: 61,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.tpt,\n//     contractAddress: {\n//       97: '',\n//       56: '0x75C91844c5383A68b7d3A427A44C32E3ba66Fe45',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     tokenPerBlock: '3.616',\n//     sortOrder: 999,\n//     isFinished: true,\n//   },\n//   {\n//     sousId: 60,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.watch,\n//     contractAddress: {\n//       97: '',\n//       56: '0xC58954199E268505fa3D3Cb0A00b7207af8C2D1d',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     tokenPerBlock: '0.3472',\n//     sortOrder: 999,\n//     isFinished: true,\n//   },\n//   {\n//     sousId: 59,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.xmark,\n//     contractAddress: {\n//       97: '',\n//       56: '0xA5137e08C48167E363Be8Ec42A68f4F54330964E',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     tokenPerBlock: '0.0413',\n//     sortOrder: 999,\n//     isFinished: true,\n//   },\n//   {\n//     sousId: 58,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.bmxx,\n//     contractAddress: {\n//       97: '',\n//       56: '0x6F31B87f51654424Ce57E9F8243E27ed13846CDB',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     tokenPerBlock: '0.00248',\n//     sortOrder: 999,\n//     isFinished: true,\n//   },\n//   {\n//     sousId: 57,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.iotx,\n//     contractAddress: {\n//       97: '',\n//       56: '0xCE54BA909d23B9d4BE0Ff0d84e5aE83F0ADD8D9a',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     tokenPerBlock: '6.365',\n//     sortOrder: 999,\n//     isFinished: true,\n//   },\n//   {\n//     sousId: 56,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.bor,\n//     contractAddress: {\n//       97: '',\n//       56: '0x3e677dC00668d69c2A7724b9AFA7363e8A56994e',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     tokenPerBlock: '0.000395',\n//     sortOrder: 999,\n//     isFinished: true,\n//   },\n//   {\n//     sousId: 55,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.bopen,\n//     contractAddress: {\n//       97: '',\n//       56: '0x5Ac8406498dC1921735d559CeC271bEd23B294A7',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     tokenPerBlock: '0.0723',\n//     sortOrder: 999,\n//     isFinished: true,\n//   },\n//   {\n//     sousId: 54,\n//     stakingToken: tokens.sushi,\n//     earningToken: tokens.cake,\n//     contractAddress: {\n//       97: '',\n//       56: '0xb69b6e390cba1F68442A886bC89E955048DAe7E3',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     tokenPerBlock: '0.0367',\n//     sortOrder: 999,\n//     isFinished: true,\n//   },\n//   {\n//     sousId: 53,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.dodo,\n//     contractAddress: {\n//       97: '',\n//       56: '0xae3001ddb18A6A57BEC2C19D71680437CA87bA1D',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     tokenPerBlock: '0.0578',\n//     sortOrder: 999,\n//     isFinished: true,\n//   },\n//   {\n//     sousId: 52,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.swingby,\n//     contractAddress: {\n//       97: '',\n//       56: '0x02aa767e855b8e80506fb47176202aA58A95315a',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     tokenPerBlock: '0.13',\n//     sortOrder: 999,\n//     isFinished: true,\n//   },\n//   {\n//     sousId: 51,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.bry,\n//     contractAddress: {\n//       97: '',\n//       56: '0x1c736F4FB20C7742Ee83a4099fE92abA61dFca41',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     tokenPerBlock: '0.1157',\n//     sortOrder: 999,\n//     isFinished: true,\n//   },\n//   {\n//     sousId: 50,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.zee,\n//     contractAddress: {\n//       97: '',\n//       56: '0x02861B607a5E87daf3FD6ec19DFB715F1b371379',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     tokenPerBlock: '0.1736',\n//     sortOrder: 999,\n//     isFinished: true,\n//   },\n//   {\n//     sousId: 49,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.swgb,\n//     contractAddress: {\n//       97: '',\n//       56: '0x73e4E8d010289267dEe3d1Fc48974B60363963CE',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     tokenPerBlock: '0.899',\n//     sortOrder: 999,\n//     isFinished: true,\n//   },\n//   {\n//     sousId: 48,\n//     stakingToken: tokens.comp,\n//     earningToken: tokens.cake,\n//     contractAddress: {\n//       97: '',\n//       56: '0xE0565fBb109A3f3f8097D8A9D931277bfd795072',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     tokenPerBlock: '0.055',\n//     sortOrder: 999,\n//     isFinished: true,\n//   },\n//   {\n//     sousId: 47,\n//     stakingToken: tokens.comp,\n//     earningToken: tokens.cake,\n//     contractAddress: {\n//       97: '',\n//       56: '0xc3693e3cbc3514d5d07EA5b27A721F184F617900',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     tokenPerBlock: '0.55',\n//     sortOrder: 999,\n//     isFinished: true,\n//   },\n//   {\n//     sousId: 46,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.sfp,\n//     contractAddress: {\n//       97: '',\n//       56: '0x2B02d43967765b18E31a9621da640588f3550EFD',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     tokenPerBlock: '0.6',\n//     sortOrder: 999,\n//     isFinished: true,\n//   },\n//   {\n//     sousId: 45,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.lina,\n//     contractAddress: {\n//       97: '',\n//       56: '0x212bb602418C399c29D52C55100fD6bBa12bea05',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     tokenPerBlock: '0.983',\n//     sortOrder: 999,\n//     isFinished: true,\n//   },\n//   {\n//     sousId: 44,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.lina,\n//     contractAddress: {\n//       97: '',\n//       56: '0x04aE8ca68A116278026fB721c06dCe709eD7013C',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     tokenPerBlock: '0.0983',\n//     sortOrder: 999,\n//     isFinished: true,\n//   },\n//   {\n//     sousId: 43,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.lit,\n//     contractAddress: {\n//       97: '',\n//       56: '0x1714bAAE9DD4738CDEA07756427FA8d4F08D9479',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     tokenPerBlock: '0.231',\n//     sortOrder: 999,\n//     isFinished: true,\n//   },\n//   {\n//     sousId: 42,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.hget,\n//     contractAddress: {\n//       97: '',\n//       56: '0xcCD0b93cC6ce3dC6dFaA9DB68f70e5C8455aC5bd',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     tokenPerBlock: '0.0138',\n//     sortOrder: 999,\n//     isFinished: true,\n//   },\n//   {\n//     sousId: 41,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.bdo,\n//     contractAddress: {\n//       97: '',\n//       56: '0x9cB24e9460351bC51d4066BC6AEd1F3809b02B78',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     tokenPerBlock: '0.075',\n//     sortOrder: 999,\n//     isFinished: true,\n//   },\n//   {\n//     sousId: 40,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.egld,\n//     contractAddress: {\n//       97: '',\n//       56: '0x2dcf4cDFf4Dd954683Fe0a6123077f8a025b66cF',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     tokenPerBlock: '0.001215',\n//     sortOrder: 999,\n//     isFinished: true,\n//   },\n//   {\n//     sousId: 39,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.ust,\n//     contractAddress: {\n//       97: '',\n//       56: '0x6EFa207ACdE6e1caB77c1322CbdE9628929ba88F',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     tokenPerBlock: '0.1157',\n//     sortOrder: 999,\n//     isFinished: true,\n//   },\n//   {\n//     sousId: 38,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.wsote,\n//     contractAddress: {\n//       97: '',\n//       56: '0xD0b738eC507571176D40f28bd56a0120E375f73a',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     tokenPerBlock: '0.23',\n//     sortOrder: 999,\n//     isFinished: true,\n//   },\n//   {\n//     sousId: 37,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.front,\n//     contractAddress: {\n//       97: '',\n//       56: '0xf7a31366732F08E8e6B88519dC3E827e04616Fc9',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     tokenPerBlock: '0.2546',\n//     sortOrder: 999,\n//     isFinished: true,\n//   },\n//   {\n//     sousId: 36,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.helmet,\n//     contractAddress: {\n//       97: '',\n//       56: '0x9F23658D5f4CEd69282395089B0f8E4dB85C6e79',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     tokenPerBlock: '0.81',\n//     sortOrder: 999,\n//     isFinished: true,\n//   },\n//   {\n//     sousId: 35,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.btcst,\n//     contractAddress: {\n//       97: '',\n//       56: '0xB6fd2724cc9c90DD31DA35DbDf0300009dceF97d',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     tokenPerBlock: '0.011574',\n//     sortOrder: 999,\n//     isFinished: true,\n//   },\n//   {\n//     sousId: 34,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.bscx,\n//     contractAddress: {\n//       97: '',\n//       56: '0x108BFE84Ca8BCe0741998cb0F60d313823cEC143',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     tokenPerBlock: '0.17361',\n//     sortOrder: 999,\n//     isFinished: true,\n//   },\n//   {\n//     sousId: 33,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.ten,\n//     contractAddress: {\n//       97: '',\n//       56: '0x4A26b082B432B060B1b00A84eE4E823F04a6f69a',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     tokenPerBlock: '0.05787',\n//     sortOrder: 999,\n//     isFinished: true,\n//   },\n//   {\n//     sousId: 32,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.balbt,\n//     contractAddress: {\n//       97: '',\n//       56: '0x3cc08B7C6A31739CfEd9d8d38b484FDb245C79c8',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     tokenPerBlock: '0.4166',\n//     sortOrder: 999,\n//     isFinished: true,\n//   },\n//   {\n//     sousId: 31,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.asr,\n//     contractAddress: {\n//       97: '',\n//       56: '0xd18E1AEb349ef0a6727eCe54597D98D263e05CAB',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     tokenPerBlock: '0.01',\n//     sortOrder: 999,\n//     isFinished: true,\n//   },\n//   {\n//     sousId: 30,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.atm,\n//     contractAddress: {\n//       97: '',\n//       56: '0x68C7d180bD8F7086D91E65A422c59514e4aFD638',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     tokenPerBlock: '0.01',\n//     sortOrder: 999,\n//     isFinished: true,\n//   },\n//   {\n//     sousId: 29,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.og,\n//     contractAddress: {\n//       97: '',\n//       56: '0xbE65d7e42E05aD2c4ad28769dc9c5b4b6EAff2C7',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     tokenPerBlock: '0.01',\n//     sortOrder: 999,\n//     isFinished: true,\n//   },\n//   {\n//     sousId: 28,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.reef,\n//     contractAddress: {\n//       97: '',\n//       56: '0x1500fa1afbfe4f4277ed0345cdf12b2c9ca7e139',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     tokenPerBlock: '115.74',\n//     sortOrder: 999,\n//     isFinished: true,\n//   },\n//   {\n//     sousId: 27,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.ditto,\n//     contractAddress: {\n//       97: '',\n//       56: '0x624ef5C2C6080Af188AF96ee5B3160Bb28bb3E02',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     tokenPerBlock: '0.01157',\n//     sortOrder: 999,\n//     isFinished: false,\n//   },\n//   {\n//     sousId: 26,\n//     stakingToken: tokens.twt,\n//     earningToken: tokens.cake,\n//     contractAddress: {\n//       97: '',\n//       56: '0x0554a5D083Abf2f056ae3F6029e1714B9A655174',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     tokenPerBlock: '0.248',\n//     sortOrder: 999,\n//     isFinished: true,\n//   },\n//   {\n//     sousId: 24,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.juv,\n//     contractAddress: {\n//       97: '',\n//       56: '0x543467B17cA5De50c8BF7285107A36785Ab57E56',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     tokenPerBlock: '0.02',\n//     sortOrder: 999,\n//     isFinished: true,\n//   },\n//   {\n//     sousId: 25,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.psg,\n//     contractAddress: {\n//       97: '',\n//       56: '0x65aFEAFaec49F23159e897EFBDCe19D94A86A1B6',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     tokenPerBlock: '0.02',\n//     sortOrder: 999,\n//     isFinished: true,\n//   },\n//   {\n//     sousId: 21,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.vai,\n//     contractAddress: {\n//       97: '',\n//       56: '0x1AD34D8d4D79ddE88c9B6b8490F8fC67831f2CAe',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     tokenPerBlock: '0.104',\n//     sortOrder: 999,\n//     isFinished: true,\n//   },\n//   {\n//     sousId: 20,\n//     stakingToken: tokens.bnb,\n//     earningToken: tokens.cake,\n//     contractAddress: {\n//       97: '',\n//       56: '0x555Ea72d7347E82C614C16f005fA91cAf06DCB5a',\n//     },\n//     poolCategory: PoolCategory.BINANCE,\n//     harvest: true,\n//     tokenPerBlock: '0.5',\n//     sortOrder: 999,\n//     isFinished: true,\n//   },\n//   {\n//     sousId: 19,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.bnb,\n//     contractAddress: {\n//       97: '',\n//       56: '0x326D754c64329aD7cb35744770D56D0E1f3B3124',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     tokenPerBlock: '0.0041',\n//     sortOrder: 999,\n//     isFinished: true,\n//   },\n//   {\n//     sousId: 18,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.blink,\n//     contractAddress: {\n//       97: '',\n//       56: '0x42Afc29b2dEa792974d1e9420696870f1Ca6d18b',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     tokenPerBlock: '23.14',\n//     sortOrder: 999,\n//     isFinished: true,\n//   },\n//   {\n//     sousId: 17,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.blink,\n//     contractAddress: {\n//       97: '',\n//       56: '0xBb2B66a2c7C2fFFB06EA60BeaD69741b3f5BF831',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     tokenPerBlock: '23.14',\n//     sortOrder: 999,\n//     isFinished: true,\n//     enableEmergencyWithdraw: true,\n//   },\n//   {\n//     sousId: 16,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.unfi,\n//     contractAddress: {\n//       97: '',\n//       56: '0xFb1088Dae0f03C5123587d2babb3F307831E6367',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     tokenPerBlock: '0.02893',\n//     sortOrder: 999,\n//     isFinished: true,\n//   },\n//   {\n//     sousId: 15,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.twt,\n//     contractAddress: {\n//       97: '',\n//       56: '0x9c4EBADa591FFeC4124A7785CAbCfb7068fED2fb',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     tokenPerBlock: '5',\n//     sortOrder: 999,\n//     isFinished: true,\n//   },\n//   {\n//     sousId: 14,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.hard,\n//     contractAddress: {\n//       97: '',\n//       56: '0x90F995b9d46b32c4a1908A8c6D0122e392B3Be97',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     tokenPerBlock: '0.346',\n//     sortOrder: 999,\n//     isFinished: true,\n//   },\n//   {\n//     sousId: 13,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.broobee,\n//     contractAddress: {\n//       97: '',\n//       56: '0xdc8c45b7F3747Ca9CaAEB3fa5e0b5FCE9430646b',\n//     },\n//     poolCategory: PoolCategory.COMMUNITY,\n//     harvest: true,\n//     tokenPerBlock: '12.5',\n//     sortOrder: 999,\n//     isFinished: true,\n//   },\n//   {\n//     sousId: 12,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.stax,\n//     contractAddress: {\n//       97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n//       56: '0xFF02241a2A1d2a7088A344309400E9fE74772815',\n//     },\n//     poolCategory: PoolCategory.COMMUNITY,\n//     harvest: true,\n//     tokenPerBlock: '0.2',\n//     sortOrder: 999,\n//     isFinished: true,\n//   },\n//   {\n//     sousId: 11,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.nar,\n//     contractAddress: {\n//       97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n//       56: '0xDc938BA1967b06d666dA79A7B1E31a8697D1565E',\n//     },\n//     poolCategory: PoolCategory.COMMUNITY,\n//     harvest: true,\n//     tokenPerBlock: '1',\n//     sortOrder: 999,\n//     isFinished: true,\n//   },\n//   {\n//     sousId: 10,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.nya,\n//     contractAddress: {\n//       97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n//       56: '0x07a0A5B67136d40F4d7d95Bc8e0583bafD7A81b9',\n//     },\n//     poolCategory: PoolCategory.COMMUNITY,\n//     harvest: true,\n//     sortOrder: 999,\n//     tokenPerBlock: '10',\n//     isFinished: true,\n//   },\n//   {\n//     sousId: 9,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.ctk,\n//     contractAddress: {\n//       97: '0xAfd61Dc94f11A70Ae110dC0E0F2061Af5633061A',\n//       56: '0x21A9A53936E812Da06B7623802DEc9A1f94ED23a',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     tokenPerBlock: '0.5',\n//     sortOrder: 999,\n//     isFinished: true,\n//   },\n//   {\n//     sousId: 8,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.twt,\n//     contractAddress: {\n//       97: '0xAfd61Dc94f11A70Ae110dC0E0F2061Af5633061A',\n//       56: '0xe7f9A439Aa7292719aC817798DDd1c4D35934aAF',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     tokenPerBlock: '20',\n//     sortOrder: 999,\n//     isFinished: true,\n//   },\n//   {\n//     sousId: 7,\n//     stakingToken: tokens.cake,\n//     earningToken: tokens.inj,\n//     contractAddress: {\n//       97: '0xAfd61Dc94f11A70Ae110dC0E0F2061Af5633061A',\n//       56: '0xcec2671C81a0Ecf7F8Ee796EFa6DBDc5Cb062693',\n//     },\n//     poolCategory: PoolCategory.CORE,\n//     harvest: true,\n//     tokenPerBlock: '0.25',\n//     sortOrder: 999,\n//     isFinished: true,\n//   },\n]\n\nexport default pools\n","import { ThunkAction } from 'redux-thunk'\nimport { AnyAction } from '@reduxjs/toolkit'\nimport BigNumber from 'bignumber.js'\nimport { CampaignType, FarmConfig, Nft, PoolConfig, Team } from 'config/constants/types'\n\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType, State, unknown, AnyAction>\n\nexport type TranslatableText =\n  | string\n  | {\n      key: string\n      data?: {\n        [key: string]: string | number\n      }\n    }\n\nexport type SerializedBigNumber = string\n\nexport interface Farm extends FarmConfig {\n  tokenAmountMc?: SerializedBigNumber\n  quoteTokenAmountMc?: SerializedBigNumber\n  tokenAmountTotal?: SerializedBigNumber\n  quoteTokenAmountTotal?: SerializedBigNumber\n  lpTotalInQuoteToken?: SerializedBigNumber\n  lpTotalSupply?: SerializedBigNumber\n  tokenPriceVsQuote?: SerializedBigNumber\n  poolWeight?: SerializedBigNumber\n  userData?: {\n    allowance: string\n    tokenBalance: string\n    stakedBalance: string\n    earnings: string\n  }\n}\n\nexport interface Pool extends PoolConfig {\n  totalStaked?: BigNumber\n  stakingLimit?: BigNumber\n  startBlock?: number\n  endBlock?: number\n  apr?: number\n  stakingTokenPrice?: number\n  earningTokenPrice?: number\n  isAutoVault?: boolean\n  userData?: {\n    allowance: BigNumber\n    stakingTokenBalance: BigNumber\n    stakedBalance: BigNumber\n    pendingReward: BigNumber\n  }\n}\n\nexport interface Profile {\n  userId: number\n  points: number\n  teamId: number\n  nftAddress: string\n  tokenId: number\n  isActive: boolean\n  username: string\n  nft?: Nft\n  team: Team\n  hasRegistered: boolean\n}\n\n// Slices states\n\nexport interface FarmsState {\n  data: Farm[]\n  loadArchivedFarmsData: boolean\n  userDataLoaded: boolean\n}\n\nexport interface VaultFees {\n  performanceFee: number\n  callFee: number\n  withdrawalFee: number\n  withdrawalFeePeriod: number\n}\n\nexport interface VaultUser {\n  isLoading: boolean\n  userShares: string\n  cakeAtLastUserAction: string\n  lastDepositedTime: string\n  lastUserActionTime: string\n}\nexport interface CakeVault {\n  totalShares?: string\n  pricePerFullShare?: string\n  totalCakeInVault?: string\n  estimatedCakeBountyReward?: string\n  totalPendingCakeHarvest?: string\n  fees?: VaultFees\n  userData?: VaultUser\n}\n\nexport interface PoolsState {\n  data: Pool[]\n  cakeVault: CakeVault\n  userDataLoaded: boolean\n}\n\nexport interface ProfileState {\n  isInitialized: boolean\n  isLoading: boolean\n  hasRegistered: boolean\n  data: Profile\n}\n\nexport type TeamResponse = {\n  0: string\n  1: string\n  2: string\n  3: string\n  4: boolean\n}\n\nexport type TeamsById = {\n  [key: string]: Team\n}\n\nexport interface TeamsState {\n  isInitialized: boolean\n  isLoading: boolean\n  data: TeamsById\n}\n\nexport interface Achievement {\n  id: string\n  type: CampaignType\n  address: string\n  title: TranslatableText\n  description?: TranslatableText\n  badge: string\n  points: number\n}\n\nexport interface AchievementState {\n  data: Achievement[]\n}\n\n// Block\n\nexport interface BlockState {\n  currentBlock: number\n  initialBlock: number\n}\n\n// Collectibles\n\nexport interface CollectiblesState {\n  isInitialized: boolean\n  isLoading: boolean\n  data: {\n    [key: string]: number[]\n  }\n}\n\n// Predictions\n\nexport enum BetPosition {\n  BULL = 'Bull',\n  BEAR = 'Bear',\n  HOUSE = 'House',\n}\n\nexport enum PredictionStatus {\n  INITIAL = 'initial',\n  LIVE = 'live',\n  PAUSED = 'paused',\n  ERROR = 'error',\n}\n\nexport interface Round {\n  id: string\n  epoch: number\n  failed?: boolean\n  startBlock: number\n  startAt: number\n  lockAt: number\n  lockBlock: number\n  lockPrice: number\n  endBlock: number\n  closePrice: number\n  totalBets: number\n  totalAmount: number\n  bullBets: number\n  bearBets: number\n  bearAmount: number\n  bullAmount: number\n  position: BetPosition\n  bets?: Bet[]\n}\n\nexport interface Market {\n  id: string\n  paused: boolean\n  epoch: number\n}\n\nexport interface Bet {\n  id?: string\n  hash?: string\n  amount: number\n  position: BetPosition\n  claimed: boolean\n  claimedHash: string\n  user?: PredictionUser\n  round: Round\n}\n\nexport interface PredictionUser {\n  id: string\n  address: string\n  block: number\n  totalBets: number\n  totalBNB: number\n}\n\nexport interface RoundData {\n  [key: string]: Round\n}\n\nexport interface HistoryData {\n  [key: string]: Bet[]\n}\n\nexport interface BetData {\n  [key: string]: {\n    [key: string]: Bet\n  }\n}\n\nexport enum HistoryFilter {\n  ALL = 'all',\n  COLLECTED = 'collected',\n  UNCOLLECTED = 'uncollected',\n}\n\nexport interface PredictionsState {\n  status: PredictionStatus\n  isLoading: boolean\n  isHistoryPaneOpen: boolean\n  isChartPaneOpen: boolean\n  isFetchingHistory: boolean\n  historyFilter: HistoryFilter\n  currentEpoch: number\n  currentRoundStartBlockNumber: number\n  intervalBlocks: number\n  bufferBlocks: number\n  minBetAmount: string\n  lastOraclePrice: string\n  rounds: RoundData\n  history: HistoryData\n  bets: BetData\n}\n\n// Global state\n\nexport interface State {\n  achievements: AchievementState\n  block: BlockState\n  farms: FarmsState\n  pools: PoolsState\n  predictions: PredictionsState\n  profile: ProfileState\n  teams: TeamsState\n  collectibles: CollectiblesState\n}\n","import Web3 from 'web3'\nimport { HttpProviderOptions } from 'web3-core-helpers'\nimport { ARCHIVED_NODE } from 'config/constants/endpoints'\nimport getRpcUrl from 'utils/getRpcUrl'\n\nconst RPC_URL = getRpcUrl()\nconst httpProvider = new Web3.providers.HttpProvider(RPC_URL, { timeout: 10000 } as HttpProviderOptions)\nconst web3NoAccount = new Web3(httpProvider)\n\nconst getWeb3NoAccount = () => {\n  return web3NoAccount\n}\n\nconst getWeb3WithArchivedNodeProvider = () => {\n  const archivedHttpProvider = new Web3.providers.HttpProvider(ARCHIVED_NODE, { timeout: 10000 } as HttpProviderOptions)\n  return new Web3(archivedHttpProvider)\n}\n\nexport { getWeb3NoAccount, getWeb3WithArchivedNodeProvider }\nexport default web3NoAccount\n","import BigNumber from 'bignumber.js'\nimport poolsConfig from 'config/constants/pools'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport cakeABI from 'config/abi/cake.json'\nimport wbnbABI from 'config/abi/weth.json'\nimport multicall from 'utils/multicall'\nimport { getAddress, getWbnbAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getSouschefV2Contract } from 'utils/contractHelpers'\n\nexport const fetchPoolsBlockLimits = async () => {\n  const poolsWithEnd = poolsConfig.filter((p) => p.sousId !== 0)\n  const callsStartBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.contractAddress),\n      name: 'startBlock',\n    }\n  })\n  const callsEndBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.contractAddress),\n      name: 'bonusEndBlock',\n    }\n  })\n\n  const starts = await multicall(sousChefABI, callsStartBlock)\n  const ends = await multicall(sousChefABI, callsEndBlock)\n\n  return poolsWithEnd.map((cakePoolConfig, index) => {\n    const startBlock = starts[index]\n    const endBlock = ends[index]\n    return {\n      sousId: cakePoolConfig.sousId,\n      startBlock: new BigNumber(startBlock).toJSON(),\n      endBlock: new BigNumber(endBlock).toJSON(),\n    }\n  })\n}\n\nexport const fetchPoolsTotalStaking = async () => {\n  const nonBnbPools = poolsConfig.filter((p) => p.stakingToken.symbol !== 'BNB')\n  const bnbPool = poolsConfig.filter((p) => p.stakingToken.symbol === 'BNB')\n\n  const callsNonBnbPools = nonBnbPools.map((poolConfig) => {\n    console.log(\"In callsNonBnbPools, stakingToken address: \", getAddress(poolConfig.stakingToken.address))\n    console.log(\"In callsNonBnbPools, contract address: \", getAddress(poolConfig.contractAddress))\n    return {\n      address: getAddress(poolConfig.stakingToken.address),\n      name: 'balanceOf',\n      params: [getAddress(poolConfig.contractAddress)],\n    }\n  })\n\n  const callsBnbPools = bnbPool.map((poolConfig) => {\n    return {\n      address: getWbnbAddress(),\n      name: 'balanceOf',\n      params: [getAddress(poolConfig.contractAddress)],\n    }\n  })\n\n  const nonBnbPoolsTotalStaked = await multicall(cakeABI, callsNonBnbPools)\n  const bnbPoolsTotalStaked = await multicall(wbnbABI, callsBnbPools)\n\n  console.log(\"[DAVID] nonBnbPoolsTotalStaked = \", nonBnbPoolsTotalStaked);\n  return [\n    ...nonBnbPools.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(nonBnbPoolsTotalStaked[index]).toJSON(),\n    })),\n    ...bnbPool.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(bnbPoolsTotalStaked[index]).toJSON(),\n    })),\n  ]\n}\n\nexport const fetchPoolStakingLimit = async (sousId: number): Promise<BigNumber> => {\n  try {\n    const sousContract = getSouschefV2Contract(sousId)\n    const stakingLimit = await sousContract.methods.poolLimitPerUser().call()\n    return new BigNumber(stakingLimit)\n  } catch (error) {\n    return BIG_ZERO\n  }\n}\n\nexport const fetchPoolsStakingLimits = async (\n  poolsWithStakingLimit: number[],\n): Promise<{ [key: string]: BigNumber }> => {\n  const validPools = poolsConfig\n    .filter((p) => p.stakingToken.symbol !== 'BNB' && !p.isFinished)\n    .filter((p) => !poolsWithStakingLimit.includes(p.sousId))\n\n  // Get the staking limit for each valid pool\n  // Note: We cannot batch the calls via multicall because V1 pools do not have \"poolLimitPerUser\" and will throw an error\n  const stakingLimitPromises = validPools.map((validPool) => fetchPoolStakingLimit(validPool.sousId))\n  const stakingLimits = await Promise.all(stakingLimitPromises)\n\n  return stakingLimits.reduce((accum, stakingLimit, index) => {\n    return {\n      ...accum,\n      [validPools[index].sousId]: stakingLimit,\n    }\n  }, {})\n}\n","import { AbiItem } from 'web3-utils'\nimport poolsConfig from 'config/constants/pools'\nimport masterChefABI from 'config/abi/masterchef.json'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport erc20ABI from 'config/abi/erc20.json'\nimport multicall from 'utils/multicall'\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\nimport { getWeb3NoAccount } from 'utils/web3'\nimport BigNumber from 'bignumber.js'\n\n// Pool 0, BRIS / BRIS is a different kind of contract (master chef)\n// BNB pools use the native BNB token (wrapping ? unwrapping is done at the contract level)\nconst nonBnbPools = poolsConfig.filter((p) => p.stakingToken.symbol !== 'BNB')\nconst bnbPools = poolsConfig.filter((p) => p.stakingToken.symbol === 'BNB')\nconst nonMasterPools = poolsConfig.filter((p) => p.sousId !== 0)\nconst web3 = getWeb3NoAccount()\nconst masterChefContract = new web3.eth.Contract(masterChefABI as unknown as AbiItem, getMasterChefAddress())\n\nexport const fetchPoolsAllowance = async (account) => {\n  const calls = nonBnbPools.map((p) => ({\n    address: getAddress(p.stakingToken.address),\n    name: 'allowance',\n    params: [account, getAddress(p.contractAddress)],\n  }))\n\n  const allowances = await multicall(erc20ABI, calls)\n  return nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(allowances[index]).toJSON() }),\n    {},\n  )\n}\n\nexport const fetchUserBalances = async (account) => {\n  // Non BNB pools\n  const calls = nonBnbPools.map((p) => ({\n    address: getAddress(p.stakingToken.address),\n    name: 'balanceOf',\n    params: [account],\n  }))\n  const tokenBalancesRaw = await multicall(erc20ABI, calls)\n  const tokenBalances = nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(tokenBalancesRaw[index]).toJSON() }),\n    {},\n  )\n\n  // BNB pools\n  const bnbBalance = await web3.eth.getBalance(account)\n  const bnbBalances = bnbPools.reduce(\n    (acc, pool) => ({ ...acc, [pool.sousId]: new BigNumber(bnbBalance).toJSON() }),\n    {},\n  )\n\n  return { ...tokenBalances, ...bnbBalances }\n}\n\nexport const fetchUserStakeBalances = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'userInfo',\n    params: [account],\n  }))\n  const userInfo = await multicall(sousChefABI, calls)\n  const stakedBalances = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(userInfo[index].amount._hex).toJSON(),\n    }),\n    {},\n  )\n\n  // BRIS / BRIS pool\n  const { amount: masterPoolAmount } = await masterChefContract.methods.userInfo('0', account).call()\n\n  return { ...stakedBalances, 0: new BigNumber(masterPoolAmount).toJSON() }\n}\n\nexport const fetchUserPendingRewards = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'pendingReward',\n    params: [account],\n  }))\n  const res = await multicall(sousChefABI, calls)\n  const pendingRewards = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(res[index]).toJSON(),\n    }),\n    {},\n  )\n\n  // BRIS / BRIS pool\n  const pendingReward = await masterChefContract.methods.pendingBris('0', account).call()\n\n  return { ...pendingRewards, 0: new BigNumber(pendingReward).toJSON() }\n}\n","import BigNumber from 'bignumber.js'\nimport { convertSharesToCake } from 'views/Pools/helpers'\nimport { getCakeVaultContract } from 'utils/contractHelpers'\nimport makeBatchRequest from 'utils/makeBatchRequest'\n\nconst cakeVaultContract = getCakeVaultContract()\n\nexport const fetchPublicVaultData = async () => {\n  try {\n    const [sharePrice, shares, estimatedCakeBountyReward, totalPendingCakeHarvest] = await makeBatchRequest([\n      cakeVaultContract.methods.getPricePerFullShare().call,\n      cakeVaultContract.methods.totalShares().call,\n      cakeVaultContract.methods.calculateHarvestBrisRewards().call,\n      cakeVaultContract.methods.calculateTotalPendingBrisRewards().call,\n    ])\n    const totalSharesAsBigNumber = new BigNumber(shares as string)\n    const sharePriceAsBigNumber = new BigNumber(sharePrice as string)\n    const totalCakeInVaultEstimate = convertSharesToCake(totalSharesAsBigNumber, sharePriceAsBigNumber)\n    return {\n      totalShares: totalSharesAsBigNumber.toJSON(),\n      pricePerFullShare: sharePriceAsBigNumber.toJSON(),\n      totalCakeInVault: totalCakeInVaultEstimate.cakeAsBigNumber.toJSON(),\n      estimatedCakeBountyReward: new BigNumber(estimatedCakeBountyReward as string).toJSON(),\n      totalPendingCakeHarvest: new BigNumber(totalPendingCakeHarvest as string).toJSON(),\n    }\n  } catch (error) {\n    return {\n      totalShares: null,\n      pricePerFullShare: null,\n      totalCakeInVault: null,\n      estimatedCakeBountyReward: null,\n      totalPendingCakeHarvest: null,\n    }\n  }\n}\n\nexport const fetchVaultFees = async () => {\n  try {\n    const [performanceFee, callFee, withdrawalFee, withdrawalFeePeriod] = await makeBatchRequest([\n      cakeVaultContract.methods.performanceFee().call,\n      cakeVaultContract.methods.callFee().call,\n      cakeVaultContract.methods.withdrawFee().call,\n      cakeVaultContract.methods.withdrawFeePeriod().call,\n    ])\n    return {\n      performanceFee: parseInt(performanceFee as string, 10),\n      callFee: parseInt(callFee as string, 10),\n      withdrawalFee: parseInt(withdrawalFee as string, 10),\n      withdrawalFeePeriod: parseInt(withdrawalFeePeriod as string, 10),\n    }\n  } catch (error) {\n    return {\n      performanceFee: null,\n      callFee: null,\n      withdrawalFee: null,\n      withdrawalFeePeriod: null,\n    }\n  }\n}\n\nexport default fetchPublicVaultData\n","import BigNumber from 'bignumber.js'\nimport { getCakeVaultContract } from 'utils/contractHelpers'\n\nconst cakeVaultContract = getCakeVaultContract()\n\nconst fetchVaultUser = async (account: string) => {\n  try {\n    const userContractResponse = await cakeVaultContract.methods.userInfo(account).call()\n    return {\n      isLoading: false,\n      userShares: new BigNumber(userContractResponse.shares).toJSON(),\n      lastDepositedTime: userContractResponse.lastDepositedTime as string,\n      lastUserActionTime: userContractResponse.lastUserActionTime as string,\n      cakeAtLastUserAction: new BigNumber(userContractResponse.brisAtLastUserAction).toJSON(),\n    }\n  } catch (error) {\n    return {\n      isLoading: true,\n      userShares: null,\n      lastDepositedTime: null,\n      lastUserActionTime: null,\n      cakeAtLastUserAction: null,\n    }\n  }\n}\n\nexport default fetchVaultUser\n","/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport BigNumber from 'bignumber.js'\nimport poolsConfig from 'config/constants/pools'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { PoolsState, Pool, CakeVault, VaultFees, VaultUser, AppThunk } from 'state/types'\nimport { getPoolApr } from 'utils/apr'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { getAddress } from 'utils/addressHelpers'\nimport { fetchPoolsBlockLimits, fetchPoolsStakingLimits, fetchPoolsTotalStaking } from './fetchPools'\nimport {\n  fetchPoolsAllowance,\n  fetchUserBalances,\n  fetchUserStakeBalances,\n  fetchUserPendingRewards,\n} from './fetchPoolsUser'\nimport { fetchPublicVaultData, fetchVaultFees } from './fetchVaultPublic'\nimport fetchVaultUser from './fetchVaultUser'\nimport { getTokenPricesFromFarm } from './helpers'\n\nconst initialState: PoolsState = {\n  data: [...poolsConfig],\n  userDataLoaded: false,\n  cakeVault: {\n    totalShares: null,\n    pricePerFullShare: null,\n    totalCakeInVault: null,\n    estimatedCakeBountyReward: null,\n    totalPendingCakeHarvest: null,\n    fees: {\n      performanceFee: null,\n      callFee: null,\n      withdrawalFee: null,\n      withdrawalFeePeriod: null,\n    },\n    userData: {\n      isLoading: true,\n      userShares: null,\n      cakeAtLastUserAction: null,\n      lastDepositedTime: null,\n      lastUserActionTime: null,\n    },\n  },\n}\n\n// Thunks\nexport const fetchPoolsPublicDataAsync = (currentBlock: number) => async (dispatch, getState) => {\n  const blockLimits = await fetchPoolsBlockLimits()\n  const totalStakings = await fetchPoolsTotalStaking()\n\n  const prices = getTokenPricesFromFarm(getState().farms.data)\n\n  const liveData = poolsConfig.map((pool) => {\n    const blockLimit = blockLimits.find((entry) => entry.sousId === pool.sousId)\n    const totalStaking = totalStakings.find((entry) => entry.sousId === pool.sousId)\n    const isPoolEndBlockExceeded = currentBlock > 0 && blockLimit ? currentBlock > Number(blockLimit.endBlock) : false\n    const isPoolFinished = pool.isFinished || isPoolEndBlockExceeded\n\n    const stakingTokenAddress = pool.stakingToken.address ? getAddress(pool.stakingToken.address).toLowerCase() : null\n    const stakingTokenPrice = stakingTokenAddress ? prices[stakingTokenAddress] : 0\n\n    const earningTokenAddress = pool.earningToken.address ? getAddress(pool.earningToken.address).toLowerCase() : null\n    const earningTokenPrice = earningTokenAddress ? prices[earningTokenAddress] : 0\n    const apr = !isPoolFinished\n      ? getPoolApr(\n          stakingTokenPrice,\n          earningTokenPrice,\n          getBalanceNumber(new BigNumber(totalStaking.totalStaked), pool.stakingToken.decimals),\n          parseFloat(pool.tokenPerBlock),\n        )\n      : 0\n    return {\n      ...blockLimit,\n      ...totalStaking,\n      stakingTokenPrice,\n      earningTokenPrice,\n      apr,\n      isFinished: isPoolFinished,\n    }\n  })\n\n  dispatch(setPoolsPublicData(liveData))\n}\n\nexport const fetchPoolsStakingLimitsAsync = () => async (dispatch, getState) => {\n  const poolsWithStakingLimit = getState()\n    .pools.data.filter(({ stakingLimit }) => stakingLimit !== null && stakingLimit !== undefined)\n    .map((pool) => pool.sousId)\n\n  const stakingLimits = await fetchPoolsStakingLimits(poolsWithStakingLimit)\n\n  const stakingLimitData = poolsConfig.map((pool) => {\n    if (poolsWithStakingLimit.includes(pool.sousId)) {\n      return { sousId: pool.sousId }\n    }\n    const stakingLimit = stakingLimits[pool.sousId] || BIG_ZERO\n    return {\n      sousId: pool.sousId,\n      stakingLimit: stakingLimit.toJSON(),\n    }\n  })\n\n  dispatch(setPoolsPublicData(stakingLimitData))\n}\n\nexport const fetchPoolsUserDataAsync =\n  (account: string): AppThunk =>\n  async (dispatch) => {\n    const allowances = await fetchPoolsAllowance(account)\n    const stakingTokenBalances = await fetchUserBalances(account)\n    const stakedBalances = await fetchUserStakeBalances(account)\n    const pendingRewards = await fetchUserPendingRewards(account)\n\n    const userData = poolsConfig.map((pool) => ({\n      sousId: pool.sousId,\n      allowance: allowances[pool.sousId],\n      stakingTokenBalance: stakingTokenBalances[pool.sousId],\n      stakedBalance: stakedBalances[pool.sousId],\n      pendingReward: pendingRewards[pool.sousId],\n    }))\n\n    dispatch(setPoolsUserData(userData))\n  }\n\nexport const updateUserAllowance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const allowances = await fetchPoolsAllowance(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'allowance', value: allowances[sousId] }))\n  }\n\nexport const updateUserBalance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const tokenBalances = await fetchUserBalances(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'stakingTokenBalance', value: tokenBalances[sousId] }))\n  }\n\nexport const updateUserStakedBalance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const stakedBalances = await fetchUserStakeBalances(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'stakedBalance', value: stakedBalances[sousId] }))\n  }\n\nexport const updateUserPendingReward =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const pendingRewards = await fetchUserPendingRewards(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'pendingReward', value: pendingRewards[sousId] }))\n  }\n\nexport const fetchCakeVaultPublicData = createAsyncThunk<CakeVault>('cakeVault/fetchPublicData', async () => {\n  const publicVaultInfo = await fetchPublicVaultData()\n  return publicVaultInfo\n})\n\nexport const fetchCakeVaultFees = createAsyncThunk<VaultFees>('cakeVault/fetchFees', async () => {\n  const vaultFees = await fetchVaultFees()\n  return vaultFees\n})\n\nexport const fetchCakeVaultUserData = createAsyncThunk<VaultUser, { account: string }>(\n  'cakeVault/fetchUser',\n  async ({ account }) => {\n    const userData = await fetchVaultUser(account)\n    return userData\n  },\n)\n\nexport const PoolsSlice = createSlice({\n  name: 'Pools',\n  initialState,\n  reducers: {\n    setPoolsPublicData: (state, action) => {\n      const livePoolsData: Pool[] = action.payload\n      console.log(\"[DAVID](reducer: pools) setPoolsPublicData :: \", livePoolsData);\n      state.data = state.data.map((pool) => {\n        const livePoolData = livePoolsData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, ...livePoolData }\n      })\n    },\n    setPoolsUserData: (state, action) => {\n      const userData = action.payload\n      state.data = state.data.map((pool) => {\n        const userPoolData = userData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, userData: userPoolData }\n      })\n      state.userDataLoaded = true\n    },\n    updatePoolsUserData: (state, action) => {\n      const { field, value, sousId } = action.payload\n      const index = state.data.findIndex((p) => p.sousId === sousId)\n      if (index >= 0) {\n        state.data[index] = { ...state.data[index], userData: { ...state.data[index].userData, [field]: value } }\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    // Vault public data that updates frequently\n    builder.addCase(fetchCakeVaultPublicData.fulfilled, (state, action: PayloadAction<CakeVault>) => {\n      state.cakeVault = { ...state.cakeVault, ...action.payload }\n    })\n    // Vault fees\n    builder.addCase(fetchCakeVaultFees.fulfilled, (state, action: PayloadAction<VaultFees>) => {\n      const fees = action.payload\n      state.cakeVault = { ...state.cakeVault, fees }\n    })\n    // Vault user data\n    builder.addCase(fetchCakeVaultUserData.fulfilled, (state, action: PayloadAction<VaultUser>) => {\n      const userData = action.payload\n      userData.isLoading = false\n      state.cakeVault = { ...state.cakeVault, userData }\n    })\n  },\n})\n\n// Actions\nexport const { setPoolsPublicData, setPoolsUserData, updatePoolsUserData } = PoolsSlice.actions\n\nexport default PoolsSlice.reducer\n","import { request, gql } from 'graphql-request'\nimport { GRAPH_API_PREDICTION } from 'config/constants/endpoints'\nimport { Bet, BetPosition, Market, PredictionStatus, Round, RoundData } from 'state/types'\nimport makeBatchRequest from 'utils/makeBatchRequest'\nimport { getPredictionsContract } from 'utils/contractHelpers'\nimport {\n  BetResponse,\n  getRoundBaseFields,\n  getBetBaseFields,\n  getUserBaseFields,\n  RoundResponse,\n  MarketResponse,\n} from './queries'\n\nexport enum Result {\n  WIN = 'win',\n  LOSE = 'lose',\n  CANCELED = 'canceled',\n  LIVE = 'live',\n}\n\nexport const numberOrNull = (value: string) => {\n  if (value === null) {\n    return null\n  }\n\n  const valueNum = Number(value)\n  return Number.isNaN(valueNum) ? null : valueNum\n}\n\nexport const makeFutureRoundResponse = (epoch: number, startBlock: number): RoundResponse => {\n  return {\n    id: epoch.toString(),\n    epoch: epoch.toString(),\n    startBlock: startBlock.toString(),\n    failed: null,\n    startAt: null,\n    lockAt: null,\n    lockBlock: null,\n    lockPrice: null,\n    endBlock: null,\n    closePrice: null,\n    totalBets: '0',\n    totalAmount: '0',\n    bearBets: '0',\n    bullBets: '0',\n    bearAmount: '0',\n    bullAmount: '0',\n    position: null,\n    bets: [],\n  }\n}\n\nexport const transformBetResponse = (betResponse: BetResponse): Bet => {\n  const bet = {\n    id: betResponse.id,\n    hash: betResponse.hash,\n    amount: betResponse.amount ? parseFloat(betResponse.amount) : 0,\n    position: betResponse.position === 'Bull' ? BetPosition.BULL : BetPosition.BEAR,\n    claimed: betResponse.claimed,\n    claimedHash: betResponse.claimedHash,\n    user: {\n      id: betResponse.user.id,\n      address: betResponse.user.address,\n      block: numberOrNull(betResponse.user.block),\n      totalBets: numberOrNull(betResponse.user.totalBets),\n      totalBNB: numberOrNull(betResponse.user.totalBNB),\n    },\n  } as Bet\n\n  if (betResponse.round) {\n    bet.round = transformRoundResponse(betResponse.round)\n  }\n\n  return bet\n}\n\nexport const transformRoundResponse = (roundResponse: RoundResponse): Round => {\n  const {\n    id,\n    epoch,\n    failed,\n    startBlock,\n    startAt,\n    lockAt,\n    lockBlock,\n    lockPrice,\n    endBlock,\n    closePrice,\n    totalBets,\n    totalAmount,\n    bullBets,\n    bearBets,\n    bearAmount,\n    bullAmount,\n    position,\n    bets = [],\n  } = roundResponse\n\n  const getRoundPosition = (positionResponse: string) => {\n    if (positionResponse === 'Bull') {\n      return BetPosition.BULL\n    }\n\n    if (positionResponse === 'Bear') {\n      return BetPosition.BEAR\n    }\n\n    return null\n  }\n\n  return {\n    id,\n    failed,\n    epoch: numberOrNull(epoch),\n    startBlock: numberOrNull(startBlock),\n    startAt: numberOrNull(startAt),\n    lockAt: numberOrNull(lockAt),\n    lockBlock: numberOrNull(lockBlock),\n    lockPrice: lockPrice ? parseFloat(lockPrice) : null,\n    endBlock: numberOrNull(endBlock),\n    closePrice: closePrice ? parseFloat(closePrice) : null,\n    totalBets: numberOrNull(totalBets),\n    totalAmount: totalAmount ? parseFloat(totalAmount) : 0,\n    bullBets: numberOrNull(bullBets),\n    bearBets: numberOrNull(bearBets),\n    bearAmount: numberOrNull(bearAmount),\n    bullAmount: numberOrNull(bullAmount),\n    position: getRoundPosition(position),\n    bets: bets.map(transformBetResponse),\n  }\n}\n\nexport const transformMarketResponse = (marketResponse: MarketResponse): Market => {\n  return {\n    id: marketResponse.id,\n    paused: marketResponse.paused,\n    epoch: Number(marketResponse.epoch.epoch),\n  }\n}\n\nexport const makeRoundData = (rounds: Round[]): RoundData => {\n  return rounds.reduce((accum, round) => {\n    return {\n      ...accum,\n      [round.id]: round,\n    }\n  }, {})\n}\n\nexport const getRoundResult = (bet: Bet, currentEpoch: number): Result => {\n  const { round } = bet\n  if (round.failed) {\n    return Result.CANCELED\n  }\n\n  if (round.epoch >= currentEpoch - 1) {\n    return Result.LIVE\n  }\n  const roundResultPosition = round.closePrice > round.lockPrice ? BetPosition.BULL : BetPosition.BEAR\n\n  return bet.position === roundResultPosition ? Result.WIN : Result.LOSE\n}\n\n/**\n * Given a bet object, check if it is eligible to be claimed or refunded\n */\nexport const getCanClaim = (bet: Bet) => {\n  return !bet.claimed && (bet.position === bet.round.position || bet.round.failed === true)\n}\n\n/**\n * Returns only bets where the user has won.\n * This is necessary because the API currently cannot distinguish between an uncliamed bet that has won or lost\n */\nexport const getUnclaimedWinningBets = (bets: Bet[]): Bet[] => {\n  return bets.filter(getCanClaim)\n}\n\n/**\n * Gets static data from the contract\n */\nexport const getStaticPredictionsData = async () => {\n  const { methods } = getPredictionsContract()\n  const [currentEpoch, intervalBlocks, minBetAmount, isPaused, bufferBlocks] = await makeBatchRequest([\n    methods.currentEpoch().call,\n    methods.intervalBlocks().call,\n    methods.minBetAmount().call,\n    methods.paused().call,\n    methods.bufferBlocks().call,\n  ])\n\n  return {\n    status: isPaused ? PredictionStatus.PAUSED : PredictionStatus.LIVE,\n    currentEpoch: Number(currentEpoch),\n    intervalBlocks: Number(intervalBlocks),\n    bufferBlocks: Number(bufferBlocks),\n    minBetAmount,\n  }\n}\n\nexport const getMarketData = async (): Promise<{\n  rounds: Round[]\n  market: Market\n}> => {\n  const response = (await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getMarketData {\n        rounds(first: 5, orderBy: epoch, orderDirection: desc) {\n          ${getRoundBaseFields()}\n        }\n        market(id: 1) {\n          id\n          paused\n          epoch {\n            epoch\n          }\n        }\n      }\n    `,\n  )) as { rounds: RoundResponse[]; market: MarketResponse }\n\n  return {\n    rounds: response.rounds.map(transformRoundResponse),\n    market: transformMarketResponse(response.market),\n  }\n}\n\nexport const getRound = async (id: string) => {\n  const response = await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getRound($id: ID!) {\n        round(id: $id) {\n          ${getRoundBaseFields()}\n          bets {\n           ${getBetBaseFields()}\n            user {\n             ${getUserBaseFields()}\n            }\n          }\n        }\n      }\n  `,\n    { id },\n  )\n  return response.round\n}\n\ntype BetHistoryWhereClause = Record<string, string | number | boolean | string[]>\n\nexport const getBetHistory = async (\n  where: BetHistoryWhereClause = {},\n  first = 1000,\n  skip = 0,\n): Promise<BetResponse[]> => {\n  const response = await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getBetHistory($first: Int!, $skip: Int!, $where: Bet_filter) {\n        bets(first: $first, skip: $skip, where: $where) {\n          ${getBetBaseFields()}\n          round {\n            ${getRoundBaseFields()}\n          }\n          user {\n            ${getUserBaseFields()}\n          } \n        }\n      }\n    `,\n    { first, skip, where },\n  )\n  return response.bets\n}\n\nexport const getBet = async (betId: string): Promise<BetResponse> => {\n  const response = await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getBet($id: ID!) {\n        bet(id: $id) {\n          ${getBetBaseFields()}\n          round {\n            ${getRoundBaseFields()}\n          }\n          user {\n            ${getUserBaseFields()}\n          } \n        }\n      }\n  `,\n    {\n      id: betId.toLowerCase(),\n    },\n  )\n  return response.bet\n}\n","export interface UserResponse {\n  id: string\n  address: string\n  block: string\n  totalBets: string\n  totalBNB: string\n  bets?: BetResponse[]\n}\n\nexport interface BetResponse {\n  id: string\n  hash: string\n  amount: string\n  position: string\n  claimed: boolean\n  claimedHash: string\n  user?: UserResponse\n  round?: RoundResponse\n}\n\nexport interface HistoricalBetResponse {\n  id: string\n  hash: string\n  amount: string\n  position: string\n  claimed: boolean\n  user?: UserResponse\n  round: {\n    id: string\n    epoch: string\n  }\n}\n\nexport interface RoundResponse {\n  id: string\n  epoch: string\n  failed: boolean\n  startBlock: string\n  startAt: string\n  lockAt: string\n  lockBlock: string\n  lockPrice: string\n  endBlock: string\n  closePrice: string\n  totalBets: string\n  totalAmount: string\n  bearBets: string\n  bullBets: string\n  bearAmount: string\n  bullAmount: string\n  position: string\n  bets: BetResponse[]\n}\n\nexport interface MarketResponse {\n  id: string\n  paused: boolean\n  epoch: {\n    epoch: string\n  }\n}\n\n/**\n * Base fields are the all the top-level fields available in the api. Used in multiple queries\n */\nexport const getRoundBaseFields = () => `\n  id\n  epoch\n  failed\n  startAt\n  startBlock\n  lockAt\n  lockBlock\n  lockPrice\n  endAt\n  endBlock\n  closePrice\n  totalBets\n  totalAmount\n  bullBets\n  bullAmount\n  bearBets\n  bearAmount\n  position\n`\n\nexport const getBetBaseFields = () => `\n  id\n  hash  \n  amount\n  position\n  claimed\n  claimedHash\n`\n\nexport const getUserBaseFields = () => `\n  id\n  address\n  block\n  totalBets\n  totalBNB\n`\n","import { Language } from '@pancakeswap/uikit'\n\n// export const AR: Language = { locale: 'ar-SA', language: 'العربية', code: 'ar' }\n// export const BN: Language = { locale: 'bn-BD', language: 'বাংলা', code: 'bn' }\nexport const EN: Language = { locale: 'en-US', language: 'English', code: 'en' }\n// export const DE: Language = { locale: 'de-DE', language: 'Deutsch', code: 'de' }\n// export const EL: Language = { locale: 'el-GR', language: 'Ελληνικά', code: 'el' }\n// export const ESES: Language = { locale: 'es-ES', language: 'Español', code: 'es-ES' }\n// export const FI: Language = { locale: 'fi-FI', language: 'Suomalainen', code: 'fi' }\n// export const FIL: Language = { locale: 'fil-PH', language: 'Filipino', code: 'fil' }\n// export const FR: Language = { locale: 'fr-FR', language: 'Français', code: 'fr' }\n// export const HI: Language = { locale: 'hi-IN', language: 'हिंदी', code: 'hi' }\n// export const HU: Language = { locale: 'hu-HU', language: 'Magyar', code: 'hu' }\n// export const ID: Language = { locale: 'id-ID', language: 'Bahasa Indonesia', code: 'id' }\n// export const IT: Language = { locale: 'it-IT', language: 'Italiano', code: 'it' }\n// export const JA: Language = { locale: 'ja-JP', language: '日本語', code: 'ja' }\n// export const KO: Language = { locale: 'ko-KR', language: '한국어', code: 'ko' }\n// export const NL: Language = { locale: 'nl-NL', language: 'Nederlands', code: 'nl' }\n// export const PL: Language = { locale: 'pl-PL', language: 'Polski', code: 'pl' }\n// export const PTBR: Language = { locale: 'pt-BR', language: 'Português (Brazil)', code: 'pt-br' }\n// export const PTPT: Language = { locale: 'pt-PT', language: 'Português', code: 'pt-pt' }\n// export const RO: Language = { locale: 'ro-RO', language: 'Română', code: 'ro' }\n// export const RU: Language = { locale: 'ru-RU', language: 'Русский', code: 'ru' }\n// export const SVSE: Language = { locale: 'sv-SE', language: 'Svenska', code: 'sv' }\n// export const TA: Language = { locale: 'ta-IN', language: 'தமிழ்', code: 'ta' }\n// export const TR: Language = { locale: 'tr-TR', language: 'Türkçe', code: 'tr' }\n// export const UK: Language = { locale: 'uk-UA', language: 'Українська', code: 'uk' }\n// export const VI: Language = { locale: 'vi-VN', language: 'Tiếng Việt', code: 'vi' }\n// export const ZHCN: Language = { locale: 'zh-CN', language: '简体中文', code: 'zh-cn' }\n// export const ZHTW: Language = { locale: 'zh-TW', language: '繁體中文', code: 'zh-tw' }\n\nexport const languages = {\n  // 'ar-SA': AR,\n  // 'bn-BD': BN,\n  'en-US': EN,\n  // 'de-DE': DE,\n  // 'el-GR': EL,\n  // 'es-ES': ESES,\n  // 'fi-FI': FI,\n  // 'fil-PH': FIL,\n  // 'fr-FR': FR,\n  // 'hi-IN': HI,\n  // 'hu-HU': HU,\n  // 'id-ID': ID,\n  // 'it-IT': IT,\n  // 'ja-JP': JA,\n  // 'ko-KR': KO,\n  // 'nl-NL': NL,\n  // 'pl-PL': PL,\n  // 'pt-BR': PTBR,\n  // 'pt-PT': PTPT,\n  // 'ro-RO': RO,\n  // 'ru-RU': RU,\n  // 'sv-SE': SVSE,\n  // 'ta-IN': TA,\n  // 'tr-TR': TR,\n  // 'uk-UA': UK,\n  // 'vi-VN': VI,\n  // 'zh-CN': ZHCN,\n  // 'zh-TW': ZHTW,\n}\n\nexport const languageList = Object.values(languages)\n","import BigNumber from 'bignumber.js/bignumber'\nimport { BIG_TEN } from 'utils/bigNumber'\n\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nexport const BSC_BLOCK_TIME = 3\n\n// CAKE_PER_BLOCK details\n// 40 BRIS is minted per block\n// 20 BRIS per block is sent to Burn pool (A farm just for burning cake)\n// 10 BRIS per block goes to BRIS syrup pool\n// 10 BRIS per block goes to Yield farms and lottery\n// BRIS_PER_BLOCK in config/index.ts = 40 as we only change the amount sent to the burn pool which is effectively a farm.\n// BRIS/Block in src/views/Home/components/CakeStats.tsx = 20 (40 - Amount sent to burn pool)\n\nexport const CAKE_PER_BLOCK = new BigNumber(40)\nexport const BLOCKS_PER_YEAR = new BigNumber((60 / BSC_BLOCK_TIME) * 60 * 24 * 365) // 10512000\nexport const CAKE_PER_YEAR = CAKE_PER_BLOCK.times(BLOCKS_PER_YEAR)\nexport const BASE_URL = 'https://bridgeswap.app'\nexport const BASE_EXCHANGE_URL = 'https://dex.bridgeswap.app'\nexport const BASE_ADD_LIQUIDITY_URL = `${BASE_EXCHANGE_URL}/#/add`\nexport const BASE_LIQUIDITY_POOL_URL = `${BASE_EXCHANGE_URL}/#/pool`\nexport const BASE_BSC_SCAN_URL = 'https://bscscan.com'\nexport const LOTTERY_MAX_NUMBER_OF_TICKETS = 50\nexport const LOTTERY_TICKET_PRICE = 1\nexport const DEFAULT_TOKEN_DECIMAL = BIG_TEN.pow(18)\nexport const DEFAULT_GAS_LIMIT = 2000000\nexport const DEFAULT_GAS_PRICE = 5\nexport const TESTNET_CHAIN_ID = '97'\nexport const MAINNET_CHAIN_ID = '56'\n","import { Profile } from 'state/types'\n\nexport type ProfileResponse = {\n  0: string\n  1: string\n  2: string\n  3: string\n  4: string\n  5: boolean\n}\n\nexport const transformProfileResponse = (profileResponse: ProfileResponse): Partial<Profile> => {\n  const { 0: userId, 1: numberPoints, 2: teamId, 3: nftAddress, 4: tokenId, 5: isActive } = profileResponse\n\n  return {\n    userId: Number(userId),\n    points: Number(numberPoints),\n    teamId: Number(teamId),\n    tokenId: Number(tokenId),\n    nftAddress,\n    isActive,\n  }\n}\n","import Cookies from 'js-cookie'\nimport { getProfileContract } from 'utils/contractHelpers'\nimport { Nft } from 'config/constants/types'\nimport { getNftByTokenId } from 'utils/collectibles'\nimport { Profile } from 'state/types'\nimport { getTeam } from 'state/teams/helpers'\nimport { transformProfileResponse } from './helpers'\n\nconst profileContract = getProfileContract()\nconst profileApi = process.env.REACT_APP_API_PROFILE\n\nexport interface GetProfileResponse {\n  hasRegistered: boolean\n  profile?: Profile\n}\n\nconst getUsername = async (address: string): Promise<string> => {\n  try {\n    const response = await fetch(`${profileApi}/api/users/${address}`)\n\n    if (!response.ok) {\n      return ''\n    }\n\n    const { username = '' } = await response.json()\n\n    return username\n  } catch (error) {\n    return ''\n  }\n}\n\nconst getProfile = async (address: string): Promise<GetProfileResponse> => {\n  try {\n    const hasRegistered = (await profileContract.methods.hasRegistered(address).call()) as boolean\n\n    if (!hasRegistered) {\n      return { hasRegistered, profile: null }\n    }\n\n    const profileResponse = await profileContract.methods.getUserProfile(address).call()\n    const { userId, points, teamId, tokenId, nftAddress, isActive } = transformProfileResponse(profileResponse)\n    const team = await getTeam(teamId)\n    const username = await getUsername(address)\n\n    // If the profile is not active the tokenId returns 0, which is still a valid token id\n    // so only fetch the nft data if active\n    let nft: Nft\n    if (isActive) {\n      nft = await getNftByTokenId(nftAddress, tokenId)\n\n      // Save the preview image in a cookie so it can be used on the exchange\n      Cookies.set(\n        `profile_${address}`,\n        {\n          username,\n          avatar: `https://pancakeswap.finance/images/nfts/${nft?.images.sm}`,\n        },\n        { domain: 'pancakeswap.finance', secure: true, expires: 30 },\n      )\n    }\n\n    const profile = {\n      userId,\n      points,\n      teamId,\n      tokenId,\n      username,\n      nftAddress,\n      isActive,\n      nft,\n      team,\n    } as Profile\n\n    return { hasRegistered, profile }\n  } catch (error) {\n    return null\n  }\n}\n\nexport default getProfile\n","/* eslint-disable no-param-reassign */\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { ProfileState } from 'state/types'\nimport type { AppDispatch } from 'state'\nimport getProfile, { GetProfileResponse } from './getProfile'\n\nconst initialState: ProfileState = {\n  isInitialized: false,\n  isLoading: true,\n  hasRegistered: false,\n  data: null,\n}\n\nexport const profileSlice = createSlice({\n  name: 'profile',\n  initialState,\n  reducers: {\n    profileFetchStart: (state) => {\n      state.isLoading = true\n    },\n    profileFetchSucceeded: (_state, action: PayloadAction<GetProfileResponse>) => {\n      const { profile, hasRegistered } = action.payload\n\n      return {\n        isInitialized: true,\n        isLoading: false,\n        hasRegistered,\n        data: profile,\n      }\n    },\n    profileFetchFailed: (state) => {\n      state.isLoading = false\n      state.isInitialized = true\n    },\n    profileClear: () => ({\n      ...initialState,\n      isLoading: false,\n    }),\n    addPoints: (state, action: PayloadAction<number>) => {\n      state.data.points += action.payload\n    },\n  },\n})\n\n// Actions\nexport const { profileFetchStart, profileFetchSucceeded, profileFetchFailed, profileClear, addPoints } =\n  profileSlice.actions\n\n// Thunks\n// TODO: this should be an AsyncThunk\nexport const fetchProfile = (address: string) => async (dispatch: AppDispatch) => {\n  try {\n    dispatch(profileFetchStart())\n    const response = await getProfile(address)\n    dispatch(profileFetchSucceeded(response))\n  } catch (error) {\n    dispatch(profileFetchFailed())\n  }\n}\n\nexport default profileSlice.reducer\n","/* eslint-disable no-param-reassign */\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport teamsList from 'config/constants/teams'\nimport { Team } from 'config/constants/types'\nimport { TeamsById, TeamsState } from '../types'\nimport { getTeam, getTeams } from './helpers'\n\nconst teamsById: TeamsById = teamsList.reduce((accum, team) => {\n  return {\n    ...accum,\n    [team.id]: team,\n  }\n}, {})\n\nconst initialState: TeamsState = {\n  isInitialized: false,\n  isLoading: true,\n  data: teamsById,\n}\n\nexport const teamsSlice = createSlice({\n  name: 'teams',\n  initialState,\n  reducers: {\n    fetchStart: (state) => {\n      state.isLoading = true\n    },\n    fetchFailed: (state) => {\n      state.isLoading = false\n      state.isInitialized = true\n    },\n    teamFetchSucceeded: (state, action: PayloadAction<Team>) => {\n      state.isInitialized = true\n      state.isLoading = false\n      state.data[action.payload.id] = action.payload\n    },\n    teamsFetchSucceeded: (state, action: PayloadAction<TeamsById>) => {\n      state.isInitialized = true\n      state.isLoading = false\n      state.data = action.payload\n    },\n  },\n})\n\n// Actions\nexport const { fetchStart, teamFetchSucceeded, fetchFailed, teamsFetchSucceeded } = teamsSlice.actions\n\n// Thunks\nexport const fetchTeam = (teamId: number) => async (dispatch) => {\n  try {\n    dispatch(fetchStart())\n    const team = await getTeam(teamId)\n    dispatch(teamFetchSucceeded(team))\n  } catch (error) {\n    dispatch(fetchFailed())\n  }\n}\n\nexport const fetchTeams = () => async (dispatch) => {\n  try {\n    dispatch(fetchStart())\n    const teams = await getTeams()\n    dispatch(teamsFetchSucceeded(teams))\n  } catch (error) {\n    dispatch(fetchFailed())\n  }\n}\n\nexport default teamsSlice.reducer\n","import { Nft, NftSource, NftType } from './types'\n\nexport const IPFS_GATEWAY = 'https://gateway.pinata.cloud'\n\nexport const nftSources: NftSource = {\n  [NftType.PANCAKE]: {\n    address: {\n      56: '0xDf7952B35f24aCF7fC0487D01c8d5690a60DBa07',\n      97: '0x60935F36e4631F73f0f407e68642144e07aC7f5E',\n    },\n    identifierKey: 'image',\n  },\n  [NftType.MIXIE]: {\n    address: {\n      56: '0xa251b5EAa9E67F2Bc8b33F33e20E91552Bf85566',\n      97: '',\n    },\n    identifierKey: 'image',\n  },\n}\n\nconst Nfts: Nft[] = [\n  {\n    name: 'Mixie v1',\n    description: 'Stories were told, and songs were sung, about Chef Mixie’s pancakes and her big Syrup gun.',\n    images: {\n      lg: 'mixie-1-lg.png',\n      md: 'mixie-1-md.png',\n      sm: 'mixie-1-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmQiRpr7ZMkzV7qbqVaUZ1LiuHTTdpWmapUhaY6ZGmVLQ4/001-Chef-Mixie.png',\n    },\n    sortOrder: 999,\n    identifier: '001-Chef-Mixie',\n    type: NftType.MIXIE,\n    variationId: 1,\n  },\n  {\n    name: 'Mixie v2',\n    description: 'Stories were told, and songs were sung, about Chef Mixie’s pancakes and her big Syrup gun.',\n    images: {\n      lg: 'mixie-2-lg.png',\n      md: 'mixie-2-md.png',\n      sm: 'mixie-2-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmQiRpr7ZMkzV7qbqVaUZ1LiuHTTdpWmapUhaY6ZGmVLQ4/002-Chef-Mixie.png',\n    },\n    sortOrder: 999,\n    identifier: '002-Chef-Mixie',\n    type: NftType.MIXIE,\n    variationId: 2,\n  },\n  {\n    name: 'Mixie v3',\n    description: 'Stories were told, and songs were sung, about Chef Mixie’s pancakes and her big Syrup gun.',\n    images: {\n      lg: 'mixie-3-lg.png',\n      md: 'mixie-3-md.png',\n      sm: 'mixie-3-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmQiRpr7ZMkzV7qbqVaUZ1LiuHTTdpWmapUhaY6ZGmVLQ4/003-Chef-Mixie.png',\n    },\n    sortOrder: 999,\n    identifier: '003-Chef-Mixie',\n    type: NftType.MIXIE,\n    variationId: 3,\n  },\n  {\n    name: 'Easter ‘21 Champions',\n    description: 'Eggscellent! Celebrating Syrup Storm winning the Easter Battle!',\n    images: {\n      lg: 'easter-champion-storm-lg.png',\n      md: 'easter-champion-storm-md.png',\n      sm: 'easter-champion-storm-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.png',\n    },\n    video: {\n      webm: 'https://gateway.pinata.cloud/ipfs/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.webm',\n      mp4: 'https://gateway.pinata.cloud/ipfs/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.mp4',\n    },\n    sortOrder: 999,\n    identifier: 'easter-champion-storm',\n    type: NftType.PANCAKE,\n    variationId: 15,\n  },\n  {\n    name: \"Cakeston Easter '21\",\n    description: 'Melting Easter eggs and melting hearts!',\n    images: {\n      lg: 'cakeston-easter-21-lg.png',\n      md: 'cakeston-easter-21-md.png',\n      sm: 'cakeston-easter-21-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-caker.png',\n    },\n    sortOrder: 999,\n    identifier: 'easter-caker',\n    type: NftType.PANCAKE,\n    variationId: 15,\n  },\n  {\n    name: \"Flipsie Easter '21\",\n    description: 'Watch out for Flipsie’s spatula smash!',\n    images: {\n      lg: 'flipsie-easter-21-lg.png',\n      md: 'flipsie-easter-21-md.png',\n      sm: 'flipsie-easter-21-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-flipper.png',\n    },\n    sortOrder: 999,\n    identifier: 'easter-flipper',\n    type: NftType.PANCAKE,\n    variationId: 14,\n  },\n  {\n    name: \"Stormy Easter '21\",\n    description: 'Do you like chocolate with your syrup? Go long!',\n    images: {\n      lg: 'stormy-easter-21-lg.png',\n      md: 'stormy-easter-21-md.png',\n      sm: 'stormy-easter-21-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-storm.png',\n    },\n    sortOrder: 999,\n    identifier: 'easter-storm',\n    type: NftType.PANCAKE,\n    variationId: 12,\n  },\n  {\n    name: 'Bullish',\n    description: 'Happy Niu Year! This bunny’s excited for the year of the bull (market!)',\n    images: {\n      lg: 'bullish-lg.png',\n      md: 'bullish-md.png',\n      sm: 'bullish-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.png',\n    },\n    video: {\n      webm: 'https://gateway.pinata.cloud/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.webm',\n      mp4: 'https://gateway.pinata.cloud/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.mp4',\n    },\n    sortOrder: 999,\n    identifier: 'bullish',\n    type: NftType.PANCAKE,\n    variationId: 11,\n  },\n  {\n    name: 'Hiccup',\n    description: \"Oopsie daisy! Hiccup's had a bit of an accident. Poor little fella.\",\n    images: {\n      lg: 'hiccup-lg.png',\n      md: 'hiccup-md.png',\n      sm: 'hiccup-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmQ6EE6gkVzAQUdQLLM7CyrnME6LZHCoy92ZERW8HXmyjw/hiccup.png',\n    },\n    sortOrder: 999,\n    identifier: 'hiccup',\n    type: NftType.PANCAKE,\n    variationId: 10,\n  },\n  {\n    name: 'Sleepy',\n    description: 'Aww, looks like eating pancakes all day is tough work. Sweet dreams!',\n    images: {\n      lg: 'sleepy-lg.png',\n      md: 'sleepy-md.png',\n      sm: 'sleepy-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/sleepy.png',\n      blur: 'sleepy-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'sleepy',\n    type: NftType.PANCAKE,\n    variationId: 5,\n  },\n  {\n    name: 'Sunny',\n    description: 'Sunny is always cheerful when there are pancakes around. Smile!',\n    images: {\n      lg: 'sunny-lg.png',\n      md: 'sunny-md.png',\n      sm: 'sunny-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/sunny.png',\n      blur: 'sunny-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'sunny',\n    type: NftType.PANCAKE,\n    variationId: 9,\n  },\n  {\n    name: 'Churro',\n    description: \"Don't let that dopey smile deceive you... Churro's a master BRIS chef!\",\n    images: {\n      lg: 'churro-lg.png',\n      md: 'churro-md.png',\n      sm: 'churro-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/churro.png',\n      blur: 'churro-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'churro',\n    type: NftType.PANCAKE,\n    variationId: 8,\n  },\n  {\n    name: 'Dollop',\n    description: \"Nommm... Oh hi, I'm just meditating on the meaning of CAKE.\",\n    images: {\n      lg: 'dollop-lg.png',\n      md: 'dollop-md.png',\n      sm: 'dollop-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/dollop.png',\n      blur: 'dollop-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'dollop',\n    type: NftType.PANCAKE,\n    variationId: 6,\n  },\n  {\n    name: 'Twinkle',\n    description: \"Three guesses what's put that twinkle in those eyes! (Hint: it's CAKE)\",\n    images: {\n      lg: 'twinkle-lg.png',\n      md: 'twinkle-md.png',\n      sm: 'twinkle-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/twinkle.png',\n      blur: 'twinkle-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'twinkle',\n    type: NftType.PANCAKE,\n    variationId: 7,\n  },\n  {\n    name: 'Swapsies',\n    description: 'These bunnies love nothing more than swapping pancakes. Especially on BSC.',\n    images: {\n      lg: 'swapsies-lg.png',\n      md: 'swapsies-md.png',\n      sm: 'swapsies-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/swapsies.png',\n      blur: 'swapsies-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'swapsies',\n    type: NftType.PANCAKE,\n    variationId: 0,\n  },\n  {\n    name: 'Drizzle',\n    description: \"It's raining syrup on this bunny, but he doesn't seem to mind. Can you blame him?\",\n    images: {\n      lg: 'drizzle-lg.png',\n      md: 'drizzle-md.png',\n      sm: 'drizzle-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/drizzle.png',\n      blur: 'drizzle-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'drizzle',\n    type: NftType.PANCAKE,\n    variationId: 1,\n  },\n  {\n    name: 'Blueberries',\n    description: \"These bunnies like their pancakes with blueberries. What's your favorite topping?\",\n    images: {\n      lg: 'blueberries-lg.png',\n      md: 'blueberries-md.png',\n      sm: 'blueberries-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/blueberries.png',\n      blur: 'blueberries-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'blueberries',\n    type: NftType.PANCAKE,\n    variationId: 2,\n  },\n  {\n    name: 'Circular',\n    description: \"Love makes the world go 'round... but so do pancakes. And these bunnies know it.\",\n    images: {\n      lg: 'circular-lg.png',\n      md: 'circular-md.png',\n      sm: 'circular-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/circular.png',\n      blur: 'circular-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'circular',\n    type: NftType.PANCAKE,\n    variationId: 3,\n  },\n  {\n    name: 'Sparkle',\n    description: 'It’s sparkling syrup, pancakes, and even lottery tickets! This bunny really loves it.',\n    images: {\n      lg: 'sparkle-lg.png',\n      md: 'sparkle-md.png',\n      sm: 'sparkle-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/sparkle.png',\n      blur: 'sparkle-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'sparkle',\n    type: NftType.PANCAKE,\n    variationId: 4,\n  },\n]\n\nexport default Nfts\n","import { useEffect, useMemo } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { orderBy } from 'lodash'\nimport { Team } from 'config/constants/types'\nimport Nfts from 'config/constants/nfts'\nimport { farmsConfig } from 'config/constants'\nimport { getWeb3NoAccount } from 'utils/web3'\nimport { getBalanceAmount } from 'utils/formatBalance'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport useRefresh from 'hooks/useRefresh'\nimport { filterFarmsByQuoteToken } from 'utils/farmsPriceHelpers'\nimport {\n  fetchFarmsPublicDataAsync,\n  fetchPoolsPublicDataAsync,\n  fetchPoolsUserDataAsync,\n  fetchCakeVaultPublicData,\n  fetchCakeVaultUserData,\n  fetchCakeVaultFees,\n  setBlock,\n} from './actions'\nimport { State, Farm, Pool, ProfileState, TeamsState, AchievementState, FarmsState } from './types'\nimport { fetchProfile } from './profile'\nimport { fetchTeam, fetchTeams } from './teams'\nimport { fetchAchievements } from './achievements'\nimport { fetchWalletNfts } from './collectibles'\nimport { getCanClaim } from './predictions/helpers'\nimport { transformPool } from './pools/helpers'\nimport { fetchPoolsStakingLimitsAsync } from './pools'\nimport { fetchFarmUserDataAsync, nonArchivedFarms } from './farms'\n\nexport const usePollFarmsData = (includeArchive = false) => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n  const web3 = getWeb3NoAccount()\n  const { account } = useWeb3React()\n\n  useEffect(() => {\n    const farmsToFetch = includeArchive ? farmsConfig : nonArchivedFarms\n    const pids = farmsToFetch.map((farmToFetch) => farmToFetch.pid)\n\n    dispatch(fetchFarmsPublicDataAsync(pids))\n\n    if (account) {\n      dispatch(fetchFarmUserDataAsync({ account, pids }))\n    }\n  }, [includeArchive, dispatch, slowRefresh, web3, account])\n}\n\n/**\n * On Pancakeswap\n * Fetches the \"core\" farm data used globally\n * 251 = CAKE-BNB LP\n * 252 = BUSD-BNB LP\n * \n * On Bridgeswap\n * 1 = BRIS-BNB LP\n * 3 = BUSD-BNB LP\n */\nexport const usePollCoreFarmData = () => {\n  const dispatch = useAppDispatch()\n  const { fastRefresh } = useRefresh()\n  const web3 = getWeb3NoAccount()\n\n  useEffect(() => {\n    dispatch(fetchFarmsPublicDataAsync([1, 3]))\n  }, [dispatch, fastRefresh, web3])\n}\n\nexport const usePollBlockNumber = () => {\n  const dispatch = useAppDispatch()\n  const web3 = getWeb3NoAccount()\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      const blockNumber = await web3.eth.getBlockNumber()\n      dispatch(setBlock(blockNumber))\n    }, 6000)\n\n    return () => clearInterval(interval)\n  }, [dispatch, web3])\n}\n\n// Farms\n\nexport const useFarms = (): FarmsState => {\n  const farms = useSelector((state: State) => state.farms)\n  return farms\n}\n\nexport const useFarmFromPid = (pid): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.pid === pid))\n  return farm\n}\n\nexport const useFarmFromLpSymbol = (lpSymbol: string): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.lpSymbol === lpSymbol))\n  return farm\n}\n\nexport const useFarmUser = (pid) => {\n  const farm = useFarmFromPid(pid)\n\n  return {\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : BIG_ZERO,\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : BIG_ZERO,\n    stakedBalance: farm.userData ? new BigNumber(farm.userData.stakedBalance) : BIG_ZERO,\n    earnings: farm.userData ? new BigNumber(farm.userData.earnings) : BIG_ZERO,\n  }\n}\n\n// Return a farm for a given token symbol. The farm is filtered based on attempting to return a farm with a quote token from an array of preferred quote tokens\nexport const useFarmFromTokenSymbol = (tokenSymbol: string, preferredQuoteTokens?: string[]): Farm => {\n  const farms = useSelector((state: State) => state.farms.data.filter((farm) => farm.token.symbol === tokenSymbol))\n  const filteredFarm = filterFarmsByQuoteToken(farms, preferredQuoteTokens)\n  return filteredFarm\n}\n\n// Return the base token price for a farm, from a given pid\nexport const useBusdPriceFromPid = (pid: number): BigNumber => {\n  const farm = useFarmFromPid(pid)\n  return farm && new BigNumber(farm.token.busdPrice)\n}\n\nexport const useBusdPriceFromToken = (tokenSymbol: string): BigNumber => {\n  const tokenFarm = useFarmFromTokenSymbol(tokenSymbol)\n  const tokenPrice = useBusdPriceFromPid(tokenFarm?.pid)\n  return tokenPrice\n}\n\nexport const useLpTokenPrice = (symbol: string) => {\n  const farm = useFarmFromLpSymbol(symbol)\n  const farmTokenPriceInUsd = useBusdPriceFromPid(farm.pid)\n  let lpTokenPrice = BIG_ZERO\n\n  if (farm.lpTotalSupply && farm.lpTotalInQuoteToken) {\n    // Total value of base token in LP\n    const valueOfBaseTokenInFarm = farmTokenPriceInUsd.times(farm.tokenAmountTotal)\n    // Double it to get overall value in LP\n    const overallValueOfAllTokensInFarm = valueOfBaseTokenInFarm.times(2)\n    // Divide total value of all tokens, by the number of LP tokens\n    const totalLpTokens = getBalanceAmount(new BigNumber(farm.lpTotalSupply))\n    lpTokenPrice = overallValueOfAllTokensInFarm.div(totalLpTokens)\n  }\n\n  return lpTokenPrice\n}\n\n// Pools\n\nexport const useFetchPublicPoolsData = () => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n  const web3 = getWeb3NoAccount()\n\n  useEffect(() => {\n    const fetchPoolsPublicData = async () => {\n      const blockNumber = await web3.eth.getBlockNumber()\n      dispatch(fetchPoolsPublicDataAsync(blockNumber))\n    }\n\n    fetchPoolsPublicData()\n    dispatch(fetchPoolsStakingLimitsAsync())\n  }, [dispatch, slowRefresh, web3])\n}\n\nexport const usePools = (account): { pools: Pool[]; userDataLoaded: boolean } => {\n  const { fastRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchPoolsUserDataAsync(account))\n    }\n  }, [account, dispatch, fastRefresh])\n\n  const { pools, userDataLoaded } = useSelector((state: State) => ({\n    pools: state.pools.data,\n    userDataLoaded: state.pools.userDataLoaded,\n  }))\n  return { pools: pools.map(transformPool), userDataLoaded }\n}\n\nexport const usePoolFromPid = (sousId: number): Pool => {\n  const pool = useSelector((state: State) => state.pools.data.find((p) => p.sousId === sousId))\n  return transformPool(pool)\n}\n\nexport const useFetchCakeVault = () => {\n  const { account } = useWeb3React()\n  const { fastRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultPublicData())\n  }, [dispatch, fastRefresh])\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultUserData({ account }))\n  }, [dispatch, fastRefresh, account])\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultFees())\n  }, [dispatch])\n}\n\nexport const useCakeVault = () => {\n  const {\n    totalShares: totalSharesAsString,\n    pricePerFullShare: pricePerFullShareAsString,\n    totalCakeInVault: totalCakeInVaultAsString,\n    estimatedCakeBountyReward: estimatedCakeBountyRewardAsString,\n    totalPendingCakeHarvest: totalPendingCakeHarvestAsString,\n    fees: { performanceFee, callFee, withdrawalFee, withdrawalFeePeriod },\n    userData: {\n      isLoading,\n      userShares: userSharesAsString,\n      cakeAtLastUserAction: cakeAtLastUserActionAsString,\n      lastDepositedTime,\n      lastUserActionTime,\n    },\n  } = useSelector((state: State) => state.pools.cakeVault)\n\n  const estimatedCakeBountyReward = useMemo(() => {\n    return new BigNumber(estimatedCakeBountyRewardAsString)\n  }, [estimatedCakeBountyRewardAsString])\n\n  const totalPendingCakeHarvest = useMemo(() => {\n    return new BigNumber(totalPendingCakeHarvestAsString)\n  }, [totalPendingCakeHarvestAsString])\n\n  const totalShares = useMemo(() => {\n    return new BigNumber(totalSharesAsString)\n  }, [totalSharesAsString])\n\n  const pricePerFullShare = useMemo(() => {\n    return new BigNumber(pricePerFullShareAsString)\n  }, [pricePerFullShareAsString])\n\n  const totalCakeInVault = useMemo(() => {\n    return new BigNumber(totalCakeInVaultAsString)\n  }, [totalCakeInVaultAsString])\n\n  const userShares = useMemo(() => {\n    return new BigNumber(userSharesAsString)\n  }, [userSharesAsString])\n\n  const cakeAtLastUserAction = useMemo(() => {\n    return new BigNumber(cakeAtLastUserActionAsString)\n  }, [cakeAtLastUserActionAsString])\n\n  return {\n    totalShares,\n    pricePerFullShare,\n    totalCakeInVault,\n    estimatedCakeBountyReward,\n    totalPendingCakeHarvest,\n    fees: {\n      performanceFee,\n      callFee,\n      withdrawalFee,\n      withdrawalFeePeriod,\n    },\n    userData: {\n      isLoading,\n      userShares,\n      cakeAtLastUserAction,\n      lastDepositedTime,\n      lastUserActionTime,\n    },\n  }\n}\n\n// Profile\n\nexport const useFetchProfile = () => {\n  const { account } = useWeb3React()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchProfile(account))\n  }, [account, dispatch])\n}\n\nexport const useProfile = () => {\n  const { isInitialized, isLoading, data, hasRegistered }: ProfileState = useSelector((state: State) => state.profile)\n  return { profile: data, hasProfile: isInitialized && hasRegistered, isInitialized, isLoading }\n}\n\n// Teams\n\nexport const useTeam = (id: number) => {\n  const team: Team = useSelector((state: State) => state.teams.data[id])\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchTeam(id))\n  }, [id, dispatch])\n\n  return team\n}\n\nexport const useTeams = () => {\n  const { isInitialized, isLoading, data }: TeamsState = useSelector((state: State) => state.teams)\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchTeams())\n  }, [dispatch])\n\n  return { teams: data, isInitialized, isLoading }\n}\n\n// Achievements\n\nexport const useFetchAchievements = () => {\n  const { account } = useWeb3React()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchAchievements(account))\n    }\n  }, [account, dispatch])\n}\n\nexport const useAchievements = () => {\n  const achievements: AchievementState['data'] = useSelector((state: State) => state.achievements.data)\n  return achievements\n}\n\nexport const usePriceBnbBusd = (): BigNumber => {\n  const bnbBusdFarm = useFarmFromPid(3)\n  return new BigNumber(bnbBusdFarm.quoteToken.busdPrice)\n}\n\nexport const usePriceCakeBusd = (): BigNumber => {\n  const cakeBnbFarm = useFarmFromPid(1)\n  return new BigNumber(cakeBnbFarm.token.busdPrice)\n}\n\n// Block\nexport const useBlock = () => {\n  return useSelector((state: State) => state.block)\n}\n\nexport const useInitialBlock = () => {\n  return useSelector((state: State) => state.block.initialBlock)\n}\n\n// Predictions\nexport const useIsHistoryPaneOpen = () => {\n  return useSelector((state: State) => state.predictions.isHistoryPaneOpen)\n}\n\nexport const useIsChartPaneOpen = () => {\n  return useSelector((state: State) => state.predictions.isChartPaneOpen)\n}\n\nexport const useGetRounds = () => {\n  return useSelector((state: State) => state.predictions.rounds)\n}\n\nexport const useGetSortedRounds = () => {\n  const roundData = useGetRounds()\n  return orderBy(Object.values(roundData), ['epoch'], ['asc'])\n}\n\nexport const useGetCurrentEpoch = () => {\n  return useSelector((state: State) => state.predictions.currentEpoch)\n}\n\nexport const useGetIntervalBlocks = () => {\n  return useSelector((state: State) => state.predictions.intervalBlocks)\n}\n\nexport const useGetBufferBlocks = () => {\n  return useSelector((state: State) => state.predictions.bufferBlocks)\n}\n\nexport const useGetTotalIntervalBlocks = () => {\n  const intervalBlocks = useGetIntervalBlocks()\n  const bufferBlocks = useGetBufferBlocks()\n  return intervalBlocks + bufferBlocks\n}\n\nexport const useGetRound = (id: string) => {\n  const rounds = useGetRounds()\n  return rounds[id]\n}\n\nexport const useGetCurrentRound = () => {\n  const currentEpoch = useGetCurrentEpoch()\n  const rounds = useGetSortedRounds()\n  return rounds.find((round) => round.epoch === currentEpoch)\n}\n\nexport const useGetPredictionsStatus = () => {\n  return useSelector((state: State) => state.predictions.status)\n}\n\nexport const useGetHistoryFilter = () => {\n  return useSelector((state: State) => state.predictions.historyFilter)\n}\n\nexport const useGetCurrentRoundBlockNumber = () => {\n  return useSelector((state: State) => state.predictions.currentRoundStartBlockNumber)\n}\n\nexport const useGetMinBetAmount = () => {\n  const minBetAmount = useSelector((state: State) => state.predictions.minBetAmount)\n  return useMemo(() => new BigNumber(minBetAmount), [minBetAmount])\n}\n\nexport const useGetIsFetchingHistory = () => {\n  return useSelector((state: State) => state.predictions.isFetchingHistory)\n}\n\nexport const useGetHistory = () => {\n  return useSelector((state: State) => state.predictions.history)\n}\n\nexport const useGetHistoryByAccount = (account: string) => {\n  const bets = useGetHistory()\n  return bets ? bets[account] : []\n}\n\nexport const useGetBetByRoundId = (account: string, roundId: string) => {\n  const bets = useSelector((state: State) => state.predictions.bets)\n\n  if (!bets[account]) {\n    return null\n  }\n\n  if (!bets[account][roundId]) {\n    return null\n  }\n\n  return bets[account][roundId]\n}\n\nexport const useBetCanClaim = (account: string, roundId: string) => {\n  const bet = useGetBetByRoundId(account, roundId)\n\n  if (!bet) {\n    return false\n  }\n\n  return getCanClaim(bet)\n}\n\nexport const useGetLastOraclePrice = (): BigNumber => {\n  const lastOraclePrice = useSelector((state: State) => state.predictions.lastOraclePrice)\n  return new BigNumber(lastOraclePrice)\n}\n\n// Collectibles\nexport const useGetCollectibles = () => {\n  const { account } = useWeb3React()\n  const dispatch = useAppDispatch()\n  const { isInitialized, isLoading, data } = useSelector((state: State) => state.collectibles)\n  const identifiers = Object.keys(data)\n\n  useEffect(() => {\n    // Fetch nfts only if we have not done so already\n    if (!isInitialized) {\n      dispatch(fetchWalletNfts(account))\n    }\n  }, [isInitialized, account, dispatch])\n\n  return {\n    isInitialized,\n    isLoading,\n    tokenIds: data,\n    nftsInWallet: Nfts.filter((nft) => identifiers.includes(nft.identifier)),\n  }\n}\n","import { useEffect } from 'react'\nimport { connectorLocalStorageKey, ConnectorNames } from '@pancakeswap/uikit'\nimport useAuth from 'hooks/useAuth'\n\nconst _binanceChainListener = async () =>\n  new Promise<void>((resolve) =>\n    Object.defineProperty(window, 'BinanceChain', {\n      get() {\n        return this.bsc\n      },\n      set(bsc) {\n        this.bsc = bsc\n\n        resolve()\n      },\n    }),\n  )\n\nconst useEagerConnect = () => {\n  const { login } = useAuth()\n\n  useEffect(() => {\n    const connectorId = window.localStorage.getItem(connectorLocalStorageKey) as ConnectorNames\n\n    if (connectorId) {\n      const isConnectorBinanceChain = connectorId === ConnectorNames.BSC\n      const isBinanceChainDefined = Reflect.has(window, 'BinanceChain')\n\n      // Currently BSC extension doesn't always inject in time.\n      // We must check to see if it exists, and if not, wait for it before proceeding.\n      if (isConnectorBinanceChain && !isBinanceChainDefined) {\n        _binanceChainListener().then(() => login(connectorId))\n\n        return\n      }\n\n      login(connectorId)\n    }\n  }, [login])\n}\n\nexport default useEagerConnect\n","import { createGlobalStyle } from 'styled-components'\n// eslint-disable-next-line import/no-unresolved\nimport { PancakeTheme } from '@pancakeswap/uikit/dist/theme'\n\ndeclare module 'styled-components' {\n  /* eslint-disable @typescript-eslint/no-empty-interface */\n  export interface DefaultTheme extends PancakeTheme {}\n}\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    font-family: 'Kanit', sans-serif;\n  }\n  body {\n    background-color: ${({ theme }) => theme.colors.background};\n\n    img {\n      height: auto;\n      max-width: 100%;\n    }\n  }\n`\n\nexport default GlobalStyle\n","\nimport BSCLogo2 from \"./chainLogos/BSCLogo\";\n\nexport interface ChainDetail {\n    name: string;\n    shortName: string;\n    chainIdHex: string;\n    networkId: number;\n    logo: JSX.Element;\n}\n\nexport interface ChainNameType {\n    [key: number]: ChainDetail\n}\n\nconst chainName : ChainNameType = {\n    56: {\n        name: \"BSC Mainnet\",\n        shortName: \"BSC\",\n        chainIdHex: \"0x38\",\n        networkId: 56,\n        logo: BSCLogo2,\n    }\n}\n\nexport default chainName","import React from \"react\";\n\nconst BSCLogo = <svg width=\"26\" height=\"26\" viewBox=\"0 0 26 26\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path opacity=\"0.2\" d=\"M13 26C20.1797 26 26 20.1797 26 13C26 5.8203 20.1797 0 13 0C5.8203 0 0 5.8203 0 13C0 20.1797 5.8203 26 13 26Z\" fill=\"#F3BA2F\"/>\n    <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M10.2822 11.8826L13.0013 9.16468L15.7216 11.8848L17.3029 10.3025L13.0013 6L8.69981 10.3014L10.2822 11.8826ZM6 13.0002L7.58181 11.4185L9.16362 13.0002L7.58181 14.582L6 13.0002ZM13.0013 16.8364L10.2822 14.1174L8.69759 15.6975L8.69981 15.6997L13.0013 20L17.3029 15.6975L17.304 15.6964L15.7216 14.1163L13.0013 16.8364ZM16.8364 13.0006L18.4182 11.4189L20 13.0006L18.4182 14.5824L16.8364 13.0006ZM13.0013 11.3939L14.6058 12.9994H14.607L14.6058 13.0006L13.0013 14.6061L11.3968 13.0028L11.3946 12.9994L11.3968 12.9972L11.6777 12.7164L11.8148 12.5804L13.0013 11.3939Z\" fill=\"#F3BA2F\"/>\n</svg>\n\nexport default BSCLogo","import chainName from \"config/constants/chainName\";\n\nexport default function getChainLogo(chainId: number): JSX.Element{\n    return chainName[chainId].logo\n}","import chainName from \"config/constants/chainName\";\n\n\nexport default function getChainName(chainId: number): string{\n    return chainName[chainId].name\n}","import { MenuEntry, menuStatus } from '@pancakeswap/uikit'\nimport { ContextApi } from 'contexts/Localization/types'\n\nconst config: (t: ContextApi['t']) => MenuEntry[] = (t) => [\n  {\n    label: t('Home'),\n    icon: 'HomeIcon',\n    href: '/',\n  },\n  {\n    label: t('Trade'),\n    icon: 'TradeIcon',\n    items: [\n      {\n        label: t('Exchange'),\n        href: 'https://dex.bridgeswap.app/#/swap',\n      },\n      {\n        label: t('Liquidity'),\n        href: 'https://dex.bridgeswap.app/#/pool',\n      },\n      \n    ],\n  },\n  {\n    label: t('Farms'),\n    icon: 'FarmIcon',\n    href: '/farms',\n  },\n  {\n    label: t('Pools'),\n    icon: 'PoolIcon',\n    href: '/pools',\n  },\n  {\n    label: \"Defi 2.0 Zap\",\n    icon: \"DefiIcon\",\n    href: \"/defi\",\n  },\n  // {\n  //   label: t('Prediction (BETA)'),\n  //   icon: 'PredictionsIcon',\n  //   href: '/prediction',\n  // },\n  {\n    label: t('Lottery'),\n    icon: 'TicketIcon',\n    href: '/lottery',\n  },\n  {\n    label: t('Referral Program'),\n    icon: 'ReferralIcon',\n    href: '/referral',\n    status: menuStatus.LIVE\n  },\n  // {\n  //   label: t('Collectibles'),\n  //   icon: 'NftIcon',\n  //   href: '/collectibles',\n  // },\n  // {\n  //   label: t('Team Battle'),\n  //   icon: 'TeamBattleIcon',\n  //   href: '/competition',\n  // },\n  // {\n  //   label: t('Teams & Profile'),\n  //   icon: 'GroupsIcon',\n  //   items: [\n  //     {\n  //       label: t('Leaderboard'),\n  //       href: '/teams',\n  //     },\n  //     {\n  //       label: t('Task Center'),\n  //       href: '/profile/tasks',\n  //     },\n  //     {\n  //       label: t('Your Profile'),\n  //       href: '/profile',\n  //     },\n  //   ],\n  // },\n  // {\n  //   label: t('Info'),\n  //   icon: 'InfoIcon',\n  //   items: [\n  //     {\n  //       label: t('Overview'),\n  //       href: 'https://bridgeswap.info',\n  //     },\n  //     {\n  //       label: t('Tokens'),\n  //       href: 'https://bridgeswap.info/tokens',\n  //     },\n  //     {\n  //       label: t('Pairs'),\n  //       href: 'https://bridgeswap.info/pairs',\n  //     },\n  //     {\n  //       label: t('Accounts'),\n  //       href: 'https://bridgeswap.info/accounts',\n  //     },\n  //   ],\n  // },\n  // {\n  //   label: t('IFO'),\n  //   icon: 'IfoIcon',\n  //   href: '/ifo',\n  // },\n  {\n    label: t('More'),\n    icon: 'MoreIcon',\n    items: [\n      {\n        label: t('Team'),\n        href: 'https://bridgeswap-exchange-1.gitbook.io/bridgeswap/our-team',\n      },\n      // {\n      //   label: t('Voting'),\n      //   href: 'https://voting.bridgeswap.app',\n      // },\n      // {\n      //   label: t('Github'),\n      //   href: 'https://github.com/Bridgeswap-Dex',\n      // },\n      // {\n      //   label: t('Docs'),\n      //   href: 'https://docs.bridgeswap.app',\n      // },\n      // {\n      //   label: t('Blog'),\n      //   href: 'https://bridgeswap.medium.com/',\n      // },\n      // {\n      //   label: t('Merch'),\n      //   href: 'https://bridgeswap.creator-spring.com/',\n      // },\n    ],\n  },\n]\n\nexport default config\n","import React from 'react'\nimport { Menu as UikitMenu } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { languageList } from 'config/localization/languages'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport useAuth from 'hooks/useAuth'\nimport { usePriceCakeBusd, useProfile } from 'state/hooks'\nimport getChainLogo from 'utils/getChainLogo'\nimport getChainName from 'utils/getChainName'\nimport config from './config'\n\nconst Menu = (props) => {\n  const { account, chainId } = useWeb3React()\n  const { login, logout } = useAuth()\n  const { isDark, toggleTheme } = useTheme()\n  const cakePriceUsd = usePriceCakeBusd()\n  const { profile } = useProfile()\n  const { currentLanguage, setLanguage, t } = useTranslation()\n\n  return (\n    <UikitMenu\n      netLogo={chainId !== undefined ? getChainLogo(chainId) : undefined}\n      netName={chainId !== undefined ? getChainName(chainId) : undefined}\n      platform=\"Home\"\n      account={account}\n      login={login}\n      logout={logout}\n      isDark={isDark}\n      toggleTheme={toggleTheme}\n      currentLang={currentLanguage.code}\n      langs={languageList}\n      setLang={setLanguage}\n      cakePriceUsd={Number.isNaN(cakePriceUsd.toNumber()) === true ? 5.001 : cakePriceUsd.toNumber()}\n      links={config(t)}\n      profile={{\n        username: profile?.username,\n        image: profile?.nft ? `/images/nfts/${profile.nft?.images.sm}` : undefined,\n        profileLink: '/profile',\n        noProfileLink: '/profile',\n        showPip: !profile?.username,\n      }}\n      {...props}\n    />\n  )\n}\n\nexport default Menu\n","import React, { Suspense, SuspenseProps } from 'react'\n\ninterface State {\n  hasError: boolean\n}\n\nclass SuspenseWithChunkError extends React.Component<SuspenseProps, State> {\n  constructor(props) {\n    super(props)\n    this.state = { hasError: false }\n  }\n\n  static getDerivedStateFromError() {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true }\n  }\n\n  componentDidCatch(error) {\n    const isJsChunkLoadError = error.name === 'ChunkLoadError'\n    const isCssChunkLoadError = error.code === 'CSS_CHUNK_LOAD_FAILED'\n    const isChunkLoadError = isJsChunkLoadError || isCssChunkLoadError\n\n    // Save a flag on the window object indicating that we have already had a chunk error.\n    // This prevents infinite reloads\n    const isRecoveringFromChunkError = !!window.history.state?.isRecoveringFromChunkError\n\n    // If was a chunk load error, refresh the page\n    if (isChunkLoadError && !isRecoveringFromChunkError) {\n      const nextState = { ...window.history.state, isRecoveringFromChunkError: true }\n      window.history.replaceState(nextState, '')\n      window.location.reload()\n      return\n    }\n\n    throw error\n  }\n\n  render() {\n    const { hasError } = this.state\n    const { fallback } = this.props\n\n    if (hasError) {\n      return fallback\n    }\n\n    return <Suspense {...this.props} />\n  }\n}\n\nexport default SuspenseWithChunkError\n","import React from 'react'\nimport { ToastContainer } from '@pancakeswap/uikit'\nimport useToast from 'hooks/useToast'\n\nconst ToastListener = () => {\n  const { toasts, remove } = useToast()\n\n  const handleRemove = (id: string) => remove(id)\n\n  return <ToastContainer toasts={toasts} onRemove={handleRemove} />\n}\n\nexport default ToastListener\n","import React, { useState, useCallback } from 'react'\nimport { FallingBunnies, FallingBunniesProps, useKonamiCheatCode } from '@pancakeswap/uikit'\n\nconst EasterEgg: React.FC<FallingBunniesProps> = (props) => {\n  const [show, setShow] = useState(false)\n  const startFalling = useCallback(() => setShow(true), [setShow])\n  useKonamiCheatCode(startFalling)\n\n  if (show) {\n    return (\n      <div onAnimationEnd={() => setShow(false)}>\n        <FallingBunnies {...props} />\n      </div>\n    )\n  }\n  return null\n}\n\nexport default React.memo(EasterEgg)\n","import React, { lazy } from 'react'\nimport { Router, Redirect, Route, Switch } from 'react-router-dom'\nimport { ResetCSS } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport useEagerConnect from 'hooks/useEagerConnect'\nimport { usePollCoreFarmData, useFetchProfile, usePollBlockNumber } from 'state/hooks'\nimport GlobalStyle from './style/Global'\nimport Menu from './components/Menu'\nimport SuspenseWithChunkError from './components/SuspenseWithChunkError'\nimport ToastListener from './components/ToastListener'\nimport PageLoader from './components/PageLoader'\nimport EasterEgg from './components/EasterEgg'\nimport history from './routerHistory'\n\n// Route-based code splitting\n// Only pool is included in the main bundle because of it's the most visited page\nconst Home = lazy(() => import('./views/Home'))\nconst Farms = lazy(() => import('./views/Farms'))\nconst Pools = lazy(() => import('./views/Pools'))\nconst DefiZap = lazy(() => import('./views/DefiZap'))\nconst Lottery = lazy(() => import('./views/Lottery'))\nconst Referral = lazy(() => import('./views/Referral'))\nconst Ifos = lazy(() => import('./views/Ifos'))\nconst NotFound = lazy(() => import('./views/NotFound'))\nconst Collectibles = lazy(() => import('./views/Collectibles'))\nconst Teams = lazy(() => import('./views/Teams'))\nconst Team = lazy(() => import('./views/Teams/Team'))\nconst Profile = lazy(() => import('./views/Profile'))\nconst TradingCompetition = lazy(() => import('./views/TradingCompetition'))\nconst Predictions = lazy(() => import('./views/Predictions'))\n\n// This config is required for number formatting\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nconst App: React.FC = () => {\n  usePollBlockNumber()\n  useEagerConnect()\n  useFetchProfile()\n  usePollCoreFarmData()\n\n  return (\n    <Router history={history}>\n      <ResetCSS />\n      <GlobalStyle />\n      <Menu>\n        <SuspenseWithChunkError fallback={<PageLoader />}>\n          <Switch>\n            <Route path=\"/\" exact>\n              <Home />\n            </Route>\n            <Route path=\"/farms\">\n              <Farms />\n            </Route>\n            <Route path=\"/pools\">\n              <Pools />\n            </Route>\n            <Route path=\"/defi\">\n              <DefiZap />\n            </Route>\n            <Route path=\"/lottery\">\n              <Lottery />\n            </Route>\n            <Route path=\"/referral\">\n              <Referral />\n            </Route>\n            <Route path=\"/ifo\">\n              <Ifos />\n            </Route>\n            <Route path=\"/collectibles\">\n              <Collectibles />\n            </Route>\n            <Route exact path=\"/teams\">\n              <Teams />\n            </Route>\n            <Route path=\"/teams/:id\">\n              <Team />\n            </Route>\n            <Route path=\"/profile\">\n              <Profile />\n            </Route>\n            <Route path=\"/competition\">\n              <TradingCompetition />\n            </Route>\n            <Route path=\"/prediction\">\n              <Predictions />\n            </Route>\n            {/* Redirect */}\n            <Route path=\"/staking\">\n              <Redirect to=\"/pools\" />\n            </Route>\n            <Route path=\"/syrup\">\n              <Redirect to=\"/pools\" />\n            </Route>\n            <Route path=\"/nft\">\n              <Redirect to=\"/collectibles\" />\n            </Route>\n            {/* 404 */}\n            <Route component={NotFound} />\n          </Switch>\n        </SuspenseWithChunkError>\n      </Menu>\n      <EasterEgg iterations={2} />\n      <ToastListener />\n    </Router>\n  )\n}\n\nexport default React.memo(App)\n","import React from 'react'\nimport { ModalProvider } from '@pancakeswap/uikit'\nimport { Web3ReactProvider } from '@web3-react/core'\nimport { HelmetProvider } from 'react-helmet-async'\nimport { Provider } from 'react-redux'\nimport { getLibrary } from 'utils/web3React'\nimport { ThemeContextProvider } from 'contexts/ThemeContext'\nimport { LanguageProvider } from 'contexts/Localization'\nimport { RefreshContextProvider } from 'contexts/RefreshContext'\nimport { ToastsProvider } from 'contexts/ToastsContext'\nimport store from 'state'\n\nconst Providers: React.FC = ({ children }) => {\n  return (\n    <Web3ReactProvider getLibrary={getLibrary}>\n      <Provider store={store}>\n        <ToastsProvider>\n          <HelmetProvider>\n            <ThemeContextProvider>\n              <LanguageProvider>\n                <RefreshContextProvider>\n                  <ModalProvider>{children}</ModalProvider>\n                </RefreshContextProvider>\n              </LanguageProvider>\n            </ThemeContextProvider>\n          </HelmetProvider>\n        </ToastsProvider>\n      </Provider>\n    </Web3ReactProvider>\n  )\n}\n\nexport default Providers\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport Providers from './Providers'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Providers>\n      <App />\n    </Providers>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n","import { getWeb3NoAccount } from './web3'\n\n/**\n * Accepts an array of contract method calls and batches them\n *\n * Example:\n *\n * [\n *  contract.method.balanceOf().call,\n *  contract.method.startBlockNumber().call\n * ]\n */\nconst makeBatchRequest = (calls: any[]) => {\n  try {\n    const web3 = getWeb3NoAccount()\n    const batch = new web3.BatchRequest()\n\n    const promises = calls.map((call) => {\n      return new Promise((resolve, reject) => {\n        batch.add(\n          call.request({}, (err, result) => {\n            if (err) {\n              reject(err)\n            } else {\n              resolve(result)\n            }\n          }),\n        )\n      })\n    })\n\n    batch.execute()\n\n    return Promise.all(promises)\n  } catch {\n    return null\n  }\n}\n\nexport default makeBatchRequest\n","export { fetchFarmsPublicDataAsync, fetchFarmUserDataAsync } from './farms'\nexport {\n  fetchPoolsPublicDataAsync,\n  fetchPoolsUserDataAsync,\n  fetchCakeVaultPublicData,\n  fetchCakeVaultUserData,\n  fetchCakeVaultFees,\n  updateUserAllowance,\n  updateUserBalance,\n  updateUserPendingReward,\n  updateUserStakedBalance,\n} from './pools'\nexport { profileFetchStart, profileFetchSucceeded, profileFetchFailed } from './profile'\nexport { fetchStart, teamFetchSucceeded, fetchFailed, teamsFetchSucceeded } from './teams'\nexport { setBlock } from './block'\n","export const GRAPH_API_PROFILE = process.env.REACT_APP_GRAPH_API_PROFILE\nexport const GRAPH_API_PREDICTION = process.env.REACT_APP_GRAPH_API_PREDICTION\nexport const ARCHIVED_NODE = process.env.REACT_APP_ARCHIVED_NODE\n","import { EN } from 'config/localization/languages'\n\nconst publicUrl = process.env.PUBLIC_URL\n\nexport const LS_KEY = 'pancakeswap_language'\n\nexport const fetchLocale = async (locale) => {\n  const response = await fetch(`${publicUrl}/locales/${locale}.json`)\n  const data = await response.json()\n  return data\n}\n\nexport const getLanguageCodeFromLS = () => {\n  try {\n    const codeFromStorage = localStorage.getItem(LS_KEY)\n\n    return codeFromStorage || EN.locale\n  } catch {\n    return EN.locale\n  }\n}\n","import React, { createContext, useCallback, useEffect, useState } from 'react'\nimport { Language } from '@pancakeswap/uikit'\nimport { EN, languages } from 'config/localization/languages'\nimport translations from 'config/localization/translations.json'\nimport { ContextApi, ContextData, ProviderState } from './types'\nimport { LS_KEY, fetchLocale, getLanguageCodeFromLS } from './helpers'\n\nconst initialState: ProviderState = {\n  isFetching: true,\n  currentLanguage: EN,\n}\n\n// Export the translations directly\nexport const languageMap = new Map<Language['locale'], Record<string, string>>()\nlanguageMap.set(EN.locale, translations)\n\nexport const LanguageContext = createContext<ContextApi>(undefined)\n\nexport const LanguageProvider: React.FC = ({ children }) => {\n  const [state, setState] = useState<ProviderState>(() => {\n    const codeFromStorage = getLanguageCodeFromLS()\n\n    return {\n      ...initialState,\n      currentLanguage: languages[codeFromStorage],\n    }\n  })\n  const { currentLanguage } = state\n\n  useEffect(() => {\n    const fetchInitialLocales = async () => {\n      const codeFromStorage = getLanguageCodeFromLS()\n\n      if (codeFromStorage !== EN.locale) {\n        const enLocale = languageMap.get(EN.locale)\n        const currentLocale = await fetchLocale(codeFromStorage)\n        languageMap.set(codeFromStorage, { ...enLocale, ...currentLocale })\n      }\n\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n      }))\n    }\n\n    fetchInitialLocales()\n  }, [setState])\n\n  const setLanguage = async (language: Language) => {\n    if (!languageMap.has(language.locale)) {\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: true,\n      }))\n\n      const locale = await fetchLocale(language.locale)\n      const enLocale = languageMap.get(EN.locale)\n\n      // Merge the EN locale to ensure that any locale fetched has all the keys\n      languageMap.set(language.locale, { ...enLocale, ...locale })\n      localStorage.setItem(LS_KEY, language.locale)\n\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n        currentLanguage: language,\n      }))\n    } else {\n      localStorage.setItem(LS_KEY, language.locale)\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n        currentLanguage: language,\n      }))\n    }\n  }\n\n  const translate = useCallback(\n    (key: string, data?: ContextData) => {\n      const translationSet = languageMap.has(currentLanguage.locale)\n        ? languageMap.get(currentLanguage.locale)\n        : languageMap.get(EN.locale)\n      const translatedText = translationSet[key] || key\n\n      // Check the existence of at least one combination of %%, separated by 1 or more non space characters\n      const includesVariable = translatedText.match(/%\\S+?%/gm)\n\n      if (includesVariable && data) {\n        let interpolatedText = translatedText\n        Object.keys(data).forEach((dataKey) => {\n          const templateKey = new RegExp(`%${dataKey}%`, 'g')\n          interpolatedText = interpolatedText.replace(templateKey, data[dataKey].toString())\n        })\n\n        return interpolatedText\n      }\n\n      return translatedText\n    },\n    [currentLanguage],\n  )\n\n  return <LanguageContext.Provider value={{ ...state, setLanguage, t: translate }}>{children}</LanguageContext.Provider>\n}\n","import { useContext } from 'react'\nimport { LanguageContext } from './Provider'\n\nconst useTranslation = () => {\n  const languageContext = useContext(LanguageContext)\n\n  if (languageContext === undefined) {\n    throw new Error('Language context is undefined')\n  }\n\n  return languageContext\n}\n\nexport default useTranslation\n","import tokens from './tokens'\nimport { FarmConfig } from './types'\n\nconst priceHelperLps: FarmConfig[] = [\n  /**\n   * These LPs are just used to help with price calculation for MasterChef LPs (farms.ts).\n   * This list is added to the MasterChefLps and passed to fetchFarm. The calls to get contract information about the token/quoteToken in the LP are still made.\n   * The absense of a PID means the masterchef contract calls are skipped for this farm.\n   * Prices are then fetched for all farms (masterchef + priceHelperLps).\n   * Before storing to redux, farms without a PID are filtered out.\n   */\n  {\n    pid: null,\n    lpSymbol: 'QSD-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x7b3ae32eE8C532016f3E31C8941D937c59e055B9',\n    },\n    token: tokens.qsd,\n    quoteToken: tokens.wbnb,\n  },\n]\n\nexport default priceHelperLps\n","import BigNumber from 'bignumber.js'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport erc20 from 'config/abi/erc20.json'\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\nimport { BIG_TEN, BIG_ZERO } from 'utils/bigNumber'\nimport multicall from 'utils/multicall'\nimport { Farm, SerializedBigNumber } from '../types'\n\ntype PublicFarmData = {\n  tokenAmountMc: SerializedBigNumber\n  quoteTokenAmountMc: SerializedBigNumber\n  tokenAmountTotal: SerializedBigNumber\n  quoteTokenAmountTotal: SerializedBigNumber\n  lpTotalInQuoteToken: SerializedBigNumber\n  lpTotalSupply: SerializedBigNumber\n  tokenPriceVsQuote: SerializedBigNumber\n  poolWeight: SerializedBigNumber\n  multiplier: string\n}\n\nconst fetchFarm = async (farm: Farm): Promise<PublicFarmData> => {\n  const { pid, lpAddresses, token, quoteToken } = farm\n  const lpAddress = getAddress(lpAddresses)\n  const calls = [\n    // Balance of token in the LP contract\n    {\n      address: getAddress(token.address),\n      name: 'balanceOf',\n      params: [lpAddress],\n    },\n    // Balance of quote token on LP contract\n    {\n      address: getAddress(quoteToken.address),\n      name: 'balanceOf',\n      params: [lpAddress],\n    },\n    // Balance of LP tokens in the master chef contract\n    {\n      address: lpAddress,\n      name: 'balanceOf',\n      params: [getMasterChefAddress()],\n    },\n    // Total supply of LP tokens\n    {\n      address: lpAddress,\n      name: 'totalSupply',\n    },\n    // Token decimals\n    {\n      address: getAddress(token.address),\n      name: 'decimals',\n    },\n    // Quote token decimals\n    {\n      address: getAddress(quoteToken.address),\n      name: 'decimals',\n    },\n  ]\n\n  const [tokenBalanceLP, quoteTokenBalanceLP, lpTokenBalanceMC, lpTotalSupply, tokenDecimals, quoteTokenDecimals] =\n    await multicall(erc20, calls)\n\n  console.log(`[DAVID](fetchFarm) ${farm.lpSymbol} :: (${tokenBalanceLP}, ${quoteTokenBalanceLP})`);\n  // Ratio in % of LP tokens that are staked in the MC, vs the total number in circulation\n  const lpTokenRatio = new BigNumber(lpTokenBalanceMC).div(new BigNumber(lpTotalSupply))\n\n  // Raw amount of token in the LP, including those not staked\n  const tokenAmountTotal = new BigNumber(tokenBalanceLP).div(BIG_TEN.pow(tokenDecimals))\n  const quoteTokenAmountTotal = new BigNumber(quoteTokenBalanceLP).div(BIG_TEN.pow(quoteTokenDecimals))\n\n  // Amount of token in the LP that are staked in the MC (i.e amount of token * lp ratio)\n  const tokenAmountMc = tokenAmountTotal.times(lpTokenRatio)\n  const quoteTokenAmountMc = quoteTokenAmountTotal.times(lpTokenRatio)\n\n  // Total staked in LP, in quote token value\n  const lpTotalInQuoteToken = quoteTokenAmountMc.times(new BigNumber(2))\n\n  // Only make masterchef calls if farm has pid\n  const [info, totalAllocPoint] =\n    pid || pid === 0\n      ? await multicall(masterchefABI, [\n          {\n            address: getMasterChefAddress(),\n            name: 'poolInfo',\n            params: [pid],\n          },\n          {\n            address: getMasterChefAddress(),\n            name: 'totalAllocPoint',\n          },\n        ])\n      : [null, null]\n\n      const allocPoint = info ? new BigNumber(info.allocPoint?._hex) : BIG_ZERO\n      const poolWeight = totalAllocPoint ? allocPoint.div(new BigNumber(totalAllocPoint)) : BIG_ZERO\n\n  return {\n    tokenAmountMc: tokenAmountMc.toJSON(),\n    quoteTokenAmountMc: quoteTokenAmountMc.toJSON(),\n    tokenAmountTotal: tokenAmountTotal.toJSON(),\n    quoteTokenAmountTotal: quoteTokenAmountTotal.toJSON(),\n    lpTotalSupply: new BigNumber(lpTotalSupply).toJSON(),\n    lpTotalInQuoteToken: lpTotalInQuoteToken.toJSON(),\n    tokenPriceVsQuote: quoteTokenAmountTotal.div(tokenAmountTotal).toJSON(),\n    poolWeight: poolWeight.toJSON(),\n    multiplier: `${allocPoint.div(100).toString()}X`,\n  }\n}\n\nexport default fetchFarm\n","import { Farm } from 'state/types'\nimport fetchPublicFarmData from './fetchPublicFarmData'\n\nconst fetchFarm = async (farm: Farm): Promise<Farm> => {\n  const farmPublicData = await fetchPublicFarmData(farm)\n\n  return { ...farm, ...farmPublicData }\n}\n\nexport default fetchFarm\n","import { FarmConfig } from 'config/constants/types'\nimport fetchFarm from './fetchFarm'\n\nconst fetchFarms = async (farmsToFetch: FarmConfig[]) => {\n  const data = await Promise.all(\n    farmsToFetch.map(async (farmConfig) => {\n      const farm = await fetchFarm(farmConfig)\n      return farm\n    }),\n  )\n  return data\n}\n\nexport default fetchFarms\n","import BigNumber from 'bignumber.js'\nimport { BIG_ONE, BIG_ZERO } from 'utils/bigNumber'\nimport { filterFarmsByQuoteToken } from 'utils/farmsPriceHelpers'\nimport { Farm } from 'state/types'\n\nconst getFarmFromTokenSymbol = (farms: Farm[], tokenSymbol: string, preferredQuoteTokens?: string[]): Farm => {\n  const farmsWithTokenSymbol = farms.filter((farm) => farm.token.symbol === tokenSymbol)\n  const filteredFarm = filterFarmsByQuoteToken(farmsWithTokenSymbol, preferredQuoteTokens)\n  return filteredFarm\n}\n\nconst getFarmBaseTokenPrice = (farm: Farm, quoteTokenFarm: Farm, bnbPriceBusd: BigNumber): BigNumber => {\n  const hasTokenPriceVsQuote = Boolean(farm.tokenPriceVsQuote)\n\n  if (farm.quoteToken.symbol === 'BUSD') {\n    return hasTokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  if (farm.quoteToken.symbol === 'wBNB') {\n    return hasTokenPriceVsQuote ? bnbPriceBusd.times(farm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  // We can only calculate profits without a quoteTokenFarm for BUSD/BNB farms\n  if (!quoteTokenFarm) {\n    return BIG_ZERO\n  }\n\n  // Possible alternative farm quoteTokens:\n  // UST (i.e. MIR-UST), pBTC (i.e. PNT-pBTC), BTCB (i.e. bBADGER-BTCB), ETH (i.e. SUSHI-ETH)\n  // If the farm's quote token isn't BUSD or wBNB, we then use the quote token, of the original farm's quote token\n  // i.e. for farm PNT - pBTC we use the pBTC farm's quote token - BNB, (pBTC - BNB)\n  // from the BNB - pBTC price, we can calculate the PNT - BUSD price\n  if (quoteTokenFarm.quoteToken.symbol === 'wBNB') {\n    const quoteTokenInBusd = bnbPriceBusd.times(quoteTokenFarm.tokenPriceVsQuote)\n    return hasTokenPriceVsQuote && quoteTokenInBusd\n      ? new BigNumber(farm.tokenPriceVsQuote).times(quoteTokenInBusd)\n      : BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'BUSD') {\n    const quoteTokenInBusd = quoteTokenFarm.tokenPriceVsQuote\n    return hasTokenPriceVsQuote && quoteTokenInBusd\n      ? new BigNumber(farm.tokenPriceVsQuote).times(quoteTokenInBusd)\n      : BIG_ZERO\n  }\n\n  // Catch in case token does not have immediate or once-removed BUSD/wBNB quoteToken\n  return BIG_ZERO\n}\n\nconst getFarmQuoteTokenPrice = (farm: Farm, quoteTokenFarm: Farm, bnbPriceBusd: BigNumber): BigNumber => {\n  if (farm.quoteToken.symbol === 'BUSD') {\n    return BIG_ONE\n  }\n\n  if (farm.quoteToken.symbol === 'wBNB') {\n    return bnbPriceBusd\n  }\n\n  if (!quoteTokenFarm) {\n    return BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'wBNB') {\n    return quoteTokenFarm.tokenPriceVsQuote ? bnbPriceBusd.times(quoteTokenFarm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'BUSD') {\n    return quoteTokenFarm.tokenPriceVsQuote ? new BigNumber(quoteTokenFarm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  return BIG_ZERO\n}\n\nconst fetchFarmsPrices = async (farms) => {\n  const bnbBusdFarm = farms.find((farm: Farm) => farm.pid === 3)\n  const bnbPriceBusd = bnbBusdFarm.tokenPriceVsQuote ? BIG_ONE.div(bnbBusdFarm.tokenPriceVsQuote) : BIG_ZERO\n  const farmsWithPrices = farms.map((farm) => {\n    const quoteTokenFarm = getFarmFromTokenSymbol(farms, farm.quoteToken.symbol)\n    console.log(\"[DAVID](fetchFarmsPrices) farm = \", farm, bnbPriceBusd.toString());\n    const baseTokenPrice = getFarmBaseTokenPrice(farm, quoteTokenFarm, bnbPriceBusd)\n    const quoteTokenPrice = getFarmQuoteTokenPrice(farm, quoteTokenFarm, bnbPriceBusd)\n    console.log(\"[DAVID](fetchFarmsPrices) baseTokenPrice, quoteTokenPrice\", baseTokenPrice.toString(), quoteTokenPrice.toString());\n    const token = { ...farm.token, busdPrice: baseTokenPrice.toJSON() }\n    const quoteToken = { ...farm.quoteToken, busdPrice: quoteTokenPrice.toJSON() }\n    return { ...farm, token, quoteToken }\n  })\n\n  return farmsWithPrices\n}\n\nexport default fetchFarmsPrices\n","import BigNumber from 'bignumber.js'\nimport erc20ABI from 'config/abi/erc20.json'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport multicall from 'utils/multicall'\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\nimport { FarmConfig } from 'config/constants/types'\n\nexport const fetchFarmUserAllowances = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    const lpContractAddress = getAddress(farm.lpAddresses)\n    return { address: lpContractAddress, name: 'allowance', params: [account, masterChefAddress] }\n  })\n\n  const rawLpAllowances = await multicall(erc20ABI, calls)\n  const parsedLpAllowances = rawLpAllowances.map((lpBalance) => {\n    return new BigNumber(lpBalance).toJSON()\n  })\n  return parsedLpAllowances\n}\n\nexport const fetchFarmUserTokenBalances = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const calls = farmsToFetch.map((farm) => {\n    const lpContractAddress = getAddress(farm.lpAddresses)\n    return {\n      address: lpContractAddress,\n      name: 'balanceOf',\n      params: [account],\n    }\n  })\n\n  const rawTokenBalances = await multicall(erc20ABI, calls)\n  const parsedTokenBalances = rawTokenBalances.map((tokenBalance) => {\n    return new BigNumber(tokenBalance).toJSON()\n  })\n  return parsedTokenBalances\n}\n\nexport const fetchFarmUserStakedBalances = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    return {\n      address: masterChefAddress,\n      name: 'userInfo',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawStakedBalances = await multicall(masterchefABI, calls)\n  const parsedStakedBalances = rawStakedBalances.map((stakedBalance) => {\n    return new BigNumber(stakedBalance[0]._hex).toJSON()\n  })\n  return parsedStakedBalances\n}\n\nexport const fetchFarmUserEarnings = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    return {\n      address: masterChefAddress,\n      name: 'pendingBris',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawEarnings = await multicall(masterchefABI, calls)\n  const parsedEarnings = rawEarnings.map((earnings) => {\n    return new BigNumber(earnings).toJSON()\n  })\n  return parsedEarnings\n}\n","/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport farmsConfig from 'config/constants/farms'\nimport isArchivedPid from 'utils/farmHelpers'\nimport priceHelperLpsConfig from 'config/constants/priceHelperLps'\nimport fetchFarms from './fetchFarms'\nimport fetchFarmsPrices from './fetchFarmsPrices'\nimport {\n  fetchFarmUserEarnings,\n  fetchFarmUserAllowances,\n  fetchFarmUserTokenBalances,\n  fetchFarmUserStakedBalances,\n} from './fetchFarmUser'\nimport { FarmsState, Farm } from '../types'\n\nconst noAccountFarmConfig = farmsConfig.map((farm) => ({\n  ...farm,\n  userData: {\n    allowance: '0',\n    tokenBalance: '0',\n    stakedBalance: '0',\n    earnings: '0',\n  },\n}))\n\nconst initialState: FarmsState = { data: noAccountFarmConfig, loadArchivedFarmsData: false, userDataLoaded: false }\n\nexport const nonArchivedFarms = farmsConfig.filter(({ pid }) => !isArchivedPid(pid))\n\n// Async thunks\nexport const fetchFarmsPublicDataAsync = createAsyncThunk<Farm[], number[]>(\n  'farms/fetchFarmsPublicDataAsync',\n  async (pids) => {\n    const farmsToFetch = farmsConfig.filter((farmConfig) => pids.includes(farmConfig.pid))\n    // Add price helper farms\n    const farmsWithPriceHelpers = farmsToFetch.concat(priceHelperLpsConfig)\n    const farms = await fetchFarms(farmsWithPriceHelpers)\n    const farmsWithPrices = await fetchFarmsPrices(farms)\n    // console.log(\"[DAVID] fetchFarmsPublicDataAsync :: farmsWithPrices = \", farmsWithPrices);\n\n    // Filter out price helper LP config farms\n    const farmsWithoutHelperLps = farmsWithPrices.filter((farm: Farm) => {\n      return farm.pid || farm.pid === 0\n    })\n\n    return farmsWithoutHelperLps\n  },\n)\n\ninterface FarmUserDataResponse {\n  pid: number\n  allowance: string\n  tokenBalance: string\n  stakedBalance: string\n  earnings: string\n}\n\nexport const fetchFarmUserDataAsync = createAsyncThunk<FarmUserDataResponse[], { account: string; pids: number[] }>(\n  'farms/fetchFarmUserDataAsync',\n  async ({ account, pids }) => {\n    const farmsToFetch = farmsConfig.filter((farmConfig) => pids.includes(farmConfig.pid))\n    const userFarmAllowances = await fetchFarmUserAllowances(account, farmsToFetch)\n    const userFarmTokenBalances = await fetchFarmUserTokenBalances(account, farmsToFetch)\n    const userStakedBalances = await fetchFarmUserStakedBalances(account, farmsToFetch)\n    const userFarmEarnings = await fetchFarmUserEarnings(account, farmsToFetch)\n\n    return userFarmAllowances.map((farmAllowance, index) => {\n      return {\n        pid: farmsToFetch[index].pid,\n        allowance: userFarmAllowances[index],\n        tokenBalance: userFarmTokenBalances[index],\n        stakedBalance: userStakedBalances[index],\n        earnings: userFarmEarnings[index],\n      }\n    })\n  },\n)\n\nexport const farmsSlice = createSlice({\n  name: 'Farms',\n  initialState,\n  reducers: {\n    setLoadArchivedFarmsData: (state, action) => {\n      const loadArchivedFarmsData = action.payload\n      state.loadArchivedFarmsData = loadArchivedFarmsData\n    },\n  },\n  extraReducers: (builder) => {\n    // Update farms with live data\n    builder.addCase(fetchFarmsPublicDataAsync.fulfilled, (state, action) => {\n      state.data = state.data.map((farm) => {\n        const liveFarmData = action.payload.find((farmData) => farmData.pid === farm.pid)\n        return { ...farm, ...liveFarmData }\n      })\n    })\n\n    // Update farms with user data\n    builder.addCase(fetchFarmUserDataAsync.fulfilled, (state, action) => {\n      action.payload.forEach((userDataEl) => {\n        const { pid } = userDataEl\n        const index = state.data.findIndex((farm) => farm.pid === pid)\n        state.data[index] = { ...state.data[index], userData: userDataEl }\n      })\n      state.userDataLoaded = true\n    })\n  },\n})\n\n// Actions\nexport const { setLoadArchivedFarmsData } = farmsSlice.actions\n\nexport default farmsSlice.reducer\n"],"sourceRoot":""}