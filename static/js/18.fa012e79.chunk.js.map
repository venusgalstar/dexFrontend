{"version":3,"sources":["views/Home/components/CakeStats.tsx","views/Home/components/TotalValueLockedCard.tsx","hooks/api.ts","config/constants/partners.ts","hooks/useFarmsWithApr.ts","views/Home/components/ComingSoon.tsx","views/Home/Home.tsx","hooks/useLastUpdated.ts","hooks/usePreviousValue.ts","hooks/useTokenBalance.ts","views/Home/components/CardValue.tsx"],"names":["StyledCakeStats","styled","Card","Row","div","CakeStats","t","useTranslation","totalSupply","useTotalSupply","burnedBalance","getBalanceNumber","useBurnedBalance","getCakeAddress","cakeSupply","color","fontSize","CardValue","value","decimals","StyledTotalValueLockedCard","TotalValueLockedCard","data","useState","setData","useEffect","a","fetch","response","json","responseData","console","error","fetchData","useGetStats","useFarms","farmsLP","tvl","userDataLoaded","reduce","accum","farm","totalDepositedBusd","parseFloat","tokenAmountTotal","token","busdPrice","quoteTokenAmountTotal","quoteToken","Number","isNaN","toFixed","scale","mb","height","partners","name","logo","useFarmsWithApr","farms","farmsWithApr","setFarmsWithApr","cakePrice","usePriceCakeBusd","farmsToDisplayWithAPR","map","lpTotalInQuoteToken","apr","undefined","totalLiquidity","BigNumber","times","log","toString","getFarmApr","poolWeight","SlideImg","img","theme","mediaQueries","xs","md","lg","ComingSoon","carouseImg","maxWidth","margin","autoPlay","interval","infiniteLoop","showArrows","showStatus","showIndicators","width","style","src","alt","Hero","BridgeBoard","BaseLayout","sm","FeatBtn","Button","colors","bright","FeatsGrid","StatsValue","Flex","BridgeLottery","StatsFigures","Partners","Grid","LearnMoreBtn","primary","LoadingTopPerformers","AuditCard","display","justifyContent","padding","backgroundColor","borderRadius","flexDirection","paddingLeft","textAlign","marginBottom","href","Home","maxBalance","useBrisBalance","useModal","BuyTicketModal","max","onPresentBuyTicketsModal","farmsList","useCallback","farmsToDisplay","liquidity","useMemo","Page","as","target","rel","p","small","variant","external","to","background","ReactLink","fontWeight","onClick","marginTop","pt","partner","useLastUpdated","Date","now","lastUpdated","setStateLastUpdated","previousLastUpdated","usePreviousValue","setLastUpdated","ref","useRef","current","FetchStatus","slowRefresh","useRefresh","setTotalSupply","cakeContract","getCakeContract","methods","call","supply","fetchTotalSupply","tokenAddress","BIG_ZERO","balance","setBalance","web3","useWeb3","contract","getBep20Contract","balanceOf","res","fetchBalance","useGetBnbBalance","account","useWeb3React","eth","getBalance","walletBalance","refresh","useTokenBalance","NOT_FETCHED","SUCCESS","FAILED","fetchStatus","balanceState","setBalanceState","fastRefresh","prev","lineHeight","prefix","bold","useCountUp","start","end","duration","separator","countUp","update","updateValue"],"mappings":"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","file":"static/js/18.fa012e79.chunk.js","sourcesContent":["import React from 'react'\nimport { Card, CardBody, Heading, Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useTotalSupply, useBurnedBalance } from 'hooks/useTokenBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport CardValue from './CardValue'\n\nconst StyledCakeStats = styled(Card)`\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 8px;\n`\n\nconst Row = styled.div`\n  align-items: center;\n  display: flex;\n  font-size: 14px;\n  justify-content: space-between;\n  margin-bottom: 8px;\n`\n\nconst CakeStats = () => {\n  const { t } = useTranslation()\n  const totalSupply = useTotalSupply()\n  const burnedBalance = getBalanceNumber(useBurnedBalance(getCakeAddress()))\n  const cakeSupply = totalSupply ? getBalanceNumber(totalSupply) - burnedBalance : 0\n\n  return (\n    <StyledCakeStats>\n      <CardBody>\n        {/* <Heading scale=\"xl\" mb=\"24px\">\n          {t('BRIS Stats')}\n        </Heading> */}\n        <Row>\n          <Text color=\"text\" fontSize=\"14px\">{t('Total BRIS Supply')}</Text>\n          {cakeSupply && <CardValue fontSize=\"14px\" value={cakeSupply} />}\n        </Row>\n        <Row>\n          <Text color=\"text\" fontSize=\"14px\">{t('Total BRIS Burned')}</Text>\n          <CardValue fontSize=\"14px\" decimals={0} value={burnedBalance} />\n        </Row>\n        <Row>\n          <Text color=\"text\" fontSize=\"14px\">{t('New BRIS/block')}</Text>\n          {/* <CardValue fontSize=\"14px\" decimals={100} value={0.100} /> */}\n          <div>0.01</div>\n        </Row>\n      </CardBody>\n    </StyledCakeStats>\n  )\n}\n\nexport default CakeStats\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Card, CardBody, Heading, Skeleton, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useGetStats } from 'hooks/api'\nimport { useFarms } from 'state/hooks'\n\nconst StyledTotalValueLockedCard = styled(Card)`\n  align-items: center;\n  display: flex;\n  flex: 1;\n`\n\nconst TotalValueLockedCard = () => {\n  const { t } = useTranslation()\n  const data = useGetStats()\n  // const tvl = data ? data.tvl.toLocaleString('en-US', { maximumFractionDigits: 0 }) : null\n\n  const { data: farmsLP, userDataLoaded } = useFarms();\n  const tvl1 = farmsLP.reduce((accum, farm) => {\n    const tokenAmount = parseFloat(farm?.tokenAmountTotal);\n    const tokenAmountInBusd = tokenAmount * parseFloat(farm?.token?.busdPrice);\n\n    const qTokenAmount = parseFloat(farm?.quoteTokenAmountTotal);\n    const qTokenAmountInBusd = qTokenAmount * parseFloat(farm?.quoteToken?.busdPrice);\n\n    const totalDepositedBusd = tokenAmountInBusd + qTokenAmountInBusd;\n    if (Number.isNaN(totalDepositedBusd))\n      return accum;\n    return accum + totalDepositedBusd;\n  }, 0);\n  const tvl = tvl1.toFixed(3);\n  return (\n    <StyledTotalValueLockedCard>\n      <CardBody>\n        <Heading color=\"text\" scale=\"md\" mb=\"24px\">\n          {t('Total Value Locked (TVL)')}\n        </Heading>\n        {data ? (\n          <>\n            <Heading color=\"text\" scale=\"md\">{`$${tvl}`}</Heading>\n            <Text color=\"text\">{t('Across all farms and pools')}</Text>\n          </>\n        ) : (\n          <Skeleton height={66} />\n        )}\n      </CardBody>\n    </StyledTotalValueLockedCard>\n  )\n}\n\nexport default TotalValueLockedCard\n","import { useEffect, useState } from 'react'\n\n/* eslint-disable camelcase */\nexport interface DeBankTvlResponse {\n  id: string\n  chain: string\n  name: string\n  site_url: string\n  logo_url: string\n  has_supported_portfolio: boolean\n  tvl: number\n}\n\nexport const useGetStats = () => {\n  const [data, setData] = useState<DeBankTvlResponse | null>(null)\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('https://openapi.debank.com/v1/protocol?id=bsc_pancakeswap')\n        const responseData: DeBankTvlResponse = await response.json()\n\n        setData(responseData)\n      } catch (error) {\n        console.error('Unable to fetch data:', error)\n      }\n    }\n\n    fetchData()\n  }, [setData])\n\n  return data\n}\n","\nconst partners = [\n    {\n        name: \"\",\n        logo: \"\"\n    },\n    {\n        name: \"\",\n        logo: \"\"\n    },\n    {\n        name: \"\",\n        logo: \"\"\n    },\n    {\n        name: \"\",\n        logo: \"\"\n    },\n    {\n        name: \"\",\n        logo: \"\"\n    },\n    {\n        name: \"\",\n        logo: \"\"\n    },\n    {\n        name: \"\",\n        logo: \"\"\n    },\n    {\n        name: \"\",\n        logo: \"\"\n    },\n    {\n        name: \"\",\n        logo: \"\"\n    },\n    {\n        name: \"\",\n        logo: \"\"\n    },\n    {\n        name: \"\",\n        logo: \"\"\n    },\n    {\n        name: \"\",\n        logo: \"\"\n    },\n    {\n        name: \"\",\n        logo: \"\"\n    },\n    {\n        name: \"\",\n        logo: \"\"\n    },\n    {\n        name: \"\",\n        logo: \"\"\n    },\n    {\n        name: \"\",\n        logo: \"\"\n    },\n]\n\nexport default partners","import { useState, useEffect } from \"react\";\nimport { useFarms, usePriceCakeBusd } from \"state/hooks\";\nimport BigNumber from \"bignumber.js\";\nimport { getFarmApr } from \"utils/apr\";\nimport { Farm } from \"state/types\";\n\nexport interface FarmWithApr extends Farm {\n  apr: number\n}\n\nconst useFarmsWithApr = () => {\n  const { data: farms } = useFarms();\n  const [farmsWithApr, setFarmsWithApr] = useState<FarmWithApr[]>([]);\n  const cakePrice = usePriceCakeBusd();\n\n  useEffect(() => {\n    const farmsToDisplayWithAPR = farms.map((farm) => {\n      if (!farm.lpTotalInQuoteToken || !farm.quoteToken.busdPrice) {\n        return {...farm, apr: undefined}\n      }\n      const totalLiquidity = new BigNumber(farm.lpTotalInQuoteToken).times(farm.quoteToken.busdPrice)\n      console.log(\"[DAVID] useFarmsWithApr :: \", farm, cakePrice.toString(), totalLiquidity.toString());\n      const apr = getFarmApr(new BigNumber(farm.poolWeight), cakePrice, totalLiquidity);\n      \n      return { ...farm, apr}\n    })\n\n    setFarmsWithApr(farmsToDisplayWithAPR);\n  }, [farms, cakePrice]);\n  return farmsWithApr;\n}\n\nexport default useFarmsWithApr;\n","import React from 'react'\nimport { Carousel } from 'react-responsive-carousel'\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"\nimport { Heading, Text, Button, Image, Card } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\n\nconst SlideImg = styled.img`\n    width: 260px;\n    height: 200px;\n    ${({ theme }) => theme.mediaQueries.xs} {\n        width: 260px;\n        height: 200px;\n    }\n\n    ${({ theme }) => theme.mediaQueries.md} {\n        width: 400px;\n        height: 200px;\n    }\n\n    ${({ theme }) => theme.mediaQueries.lg} {\n        width: 600px;\n        height: 200px;\n    }\n`\n\n\nconst ComingSoon = () => {\n\n    const carouseImg = {\n        maxWidth: '400px',\n        margin: '0 auto'\n    }\n\n    return (\n        <Carousel \n        autoPlay\n        interval={2000}\n        infiniteLoop\n        showArrows={false}\n        showStatus={false}\n        showIndicators={false}\n        width='100'        \n        >\n            <div style={carouseImg}>\n                <SlideImg src=\"/images/baners/bridgeswap-farms.webp\" alt='TTNEX farms'/>\n            </div>\n            <div style={carouseImg}>\n                <SlideImg src=\"/images/baners/bridgeswap-lottery.webp\" alt='TTNEX lottery'/>\n            </div>\n            <div style={carouseImg}>\n                <SlideImg src=\"/images/baners/bridgeswap-pools.webp\" alt='TTNEX-pools'/>\n            </div>\n            <div style={carouseImg}>\n                <SlideImg src=\"/images/baners/defi2.0-zap.webp\" alt='defi2.0-zap'/>\n            </div>\n            <div style={carouseImg}>\n                <SlideImg src=\"/images/baners/referral-program.webp\" alt='referral-program'/>\n            </div>\n            \n        </Carousel>\n    \n    )\n}\n\nexport default ComingSoon","import React, { useCallback, useMemo } from 'react'\nimport styled from 'styled-components'\nimport { Link as ReactLink } from 'react-router-dom'\nimport BigNumber from 'bignumber.js'\nimport {\n  Heading,\n  Text,\n  BaseLayout,\n  Button,\n  Image,\n  Card,\n  Flex,\n  Grid,\n  Link,\n  useModal,\n  Skeleton,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport Page from 'components/layout/Page'\nimport FarmStakingCard from 'views/Home/components/FarmStakingCard'\nimport LotteryCard from 'views/Home/components/LotteryCard'\nimport CakeStats from 'views/Home/components/CakeStats'\nimport TotalValueLockedCard from 'views/Home/components/TotalValueLockedCard'\nimport EarnAPRCard from 'views/Home/components/EarnAPRCard'\nimport EarnAssetCard from 'views/Home/components/EarnAssetCard'\nimport WinCard from 'views/Home/components/WinCard'\nimport partners from 'config/constants/partners'\nimport useBrisBalance from 'hooks/useGetBrisBalance'\nimport BuyTicketModal from 'views/Lottery/components/TicketCard/BuyTicketModal'\nimport { useFarms, usePools, usePriceCakeBusd } from 'state/hooks'\nimport { useWeb3React } from '@web3-react/core'\nimport { getFarmApr } from 'utils/apr'\nimport { Farm } from 'state/types'\nimport { FarmWithStakedValue } from 'views/Farms/components/FarmCard/CardActionsContainer'\nimport useFarmsWithApr from 'hooks/useFarmsWithApr'\nimport Apr from '../Farms/components/FarmTable/Apr'\nimport ComingSoon from './components/ComingSoon'\n\nconst Hero = styled.div`\n  align-items: center;\n  border-radius: 20px;\n  background-image: linear-gradient(245.94deg, rgba(8, 8, 56, 0.2) -63.8%, rgba(17, 17, 139, 0.2) 73.44%);\n  backdrop-filter: blur(20px);\n  background-repeat: no-repeat;\n  background-position: top center;\n  max-width: 98%;\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  margin: auto;\n  margin-bottom: 32px;\n  padding: 0px 30px;\n  padding-top: 16px;\n  text-align: center;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    background-position: left center, right center;\n    max-width: 90%;\n    padding: 0px 120px;\n    padding-top: 116px;\n    height: 265px;\n    padding-top: 0;\n  }\n`\n\nconst Cards = styled(BaseLayout)`\n  align-items: stretch;\n  justify-content: stretch;\n  margin-bottom: 24px;\n  grid-gap: 24px;\n\n  & > div {\n    grid-column: span 6;\n    width: 100%;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    & > div {\n      grid-column: span 8;\n    }\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    margin-bottom: 32px;\n    grid-gap: 32px;\n\n    & > div {\n      grid-column: span 6;\n    }\n  }\n`\n\nconst CTACards = styled(BaseLayout)`\n  align-items: start;\n  margin-bottom: 24px;\n  grid-gap: 24px;\n\n  & > div {\n    grid-column: span 6;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    & > div {\n      grid-column: span 8;\n    }\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    margin-bottom: 32px;\n    grid-gap: 32px;\n\n    & > div {\n      grid-column: span 4;\n    }\n  }\n`\nconst AdsCards = styled(BaseLayout)`\n  align-items: stretch;\n  margin-bottom: 24px;\n  grid-gap: 24px;\n\n  & > div {\n    grid-column: span 6;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    & > div {\n      grid-column: span 8;\n    }\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    margin-left: 50px;\n    margin-bottom: 32px;\n    grid-gap: 32px;\n\n    & > div {\n      grid-column: span 4;\n    }\n  }\n`\n\nconst BridgeBoard = styled.div`\n  align-items: center;\n  box-shadow: 3px 7px 5px 7px #121254;\n  border-radius: 20px;\n  background: #09092b;\n  max-width: 98%;\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  margin: auto;\n  margin-bottom: 32px;\n  padding: 10px 30px;\n  text-align: center;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    max-width: 90%;\n    padding: 20px 40px;\n  }\n`\nconst FeatBtn = styled(Button)`\n  color: ${({ theme }) => theme.colors.bright};\n  border-color: ${({ theme }) => theme.colors.bright};\n  margin: 20px 0px;\n`\n\nconst FeatsGrid = styled(BaseLayout)`\n  width: 100%;\n  align-items: start;\n  & > div {\n    grid-column: span 6;\n  }\n`\n\nconst PerformersFlex = styled(Flex)`\n  width: 100%;\n  padding: 12px;\n  justify-content: center;\n  align-items: center;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    justify-content: flex-start;\n  }\n`\n\nconst Performer = styled(Flex)`\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  margin: 10px;\n`\nconst TopSymbol = styled(Flex)`\n  align-items: center;\n  justify-content: flex-start;\n`\nconst TopAPR = styled(Flex)`\n  margin-top: 12px;\n`\n\nconst StatsValue = styled(Flex)`\n  flex-direction: column;\n  width: 90%;\n  margin: 0 auto;\n  align-items: center;\n  justify-content: space-between;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    flex-direction: row;\n  }\n`\n\nconst BridgeLottery = styled(Flex)`\n  background-image: url(/images/decorations/bg-design.svg);\n  background-repeat: no-repeat;\n  background-position: top center;\n  flex-direction: column;\n  justify-content: center;\n  width: 100%;\n  border-radius: 12px;\n  text-align: center;\n  padding: 30px 0px;\n  margin: 12px;\n`\n\nconst StatsFigures = styled.div`\n  width: 100%;\n`\nconst Performers = styled(Grid)`\n  width: 100%;\n  grid-column-gap: 16px;\n  grid-row-gap: 8px;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    grid-template-columns: repeat(2, 1fr);\n  }\n  ${({ theme }) => theme.mediaQueries.lg} {\n    grid-template-columns: repeat(4, 1fr);\n    grid-auto-flow: column;\n  }\n`\nconst Partners = styled(Grid)`\n  width: 100%;\n  grid-template-columns: repeat(3, 1fr);\n  grid-gap: 12px;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    grid-template-columns: repeat(4, 1fr);\n    grid-gap: 15px;\n  }\n  ${({ theme }) => theme.mediaQueries.md} {\n    grid-template-columns: repeat(6, 1fr);\n    grid-gap: 18px;\n  }\n  ${({ theme }) => theme.mediaQueries.lg} {\n    grid-template-columns: repeat(6, 1fr);\n    grid-gap: 21px;\n  }\n`\nconst Partner = styled.div`\n  background: #18186b;\n  height: auto;\n  width: 75px;\n  border-radius: 5px;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    height: 25px;\n    width: 82px;\n  }\n  ${({ theme }) => theme.mediaQueries.md} {\n    height: 30px;\n    width: 95px;\n  }\n  ${({ theme }) => theme.mediaQueries.lg} {\n    height: 38px;\n    width: 100px;\n  }\n`\n\nconst LearnMoreBtn = styled.a`\n  background-color: ${({ theme }) => theme.colors.primary};\n  color: ${({ theme }) => theme.colors.bright};\n  padding: 12px 10px;\n  border-radius: 9px;\n  margin-top: 12px;\n  margin-bottom: 12px;\n`\n\nconst LoadingTopPerformers = styled.div`\n  width: 90%;\n  height: 80px;\n`\n\nconst Title = styled.div`\n  display: flex;\n  ${({ theme }) => theme.mediaQueries.xs} {\n    flex-flow: column-reverse;\n  }\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-flow: wrap;\n  }\n`\n\nconst AuditCard: React.FC = () => {\n  return (\n    <div style={{ display:\"flex\", width:\"100%\", justifyContent: \"end\" }}>\n      <div\n        style={{\n          padding: '16px',\n          display: 'flex',\n          backgroundColor: '#333376',\n          borderRadius: '8px',\n          color: 'white',\n          height: 'fit-content',\n          width: 'fit-content',\n        }}\n      >\n        <img src=\"images/symbols/certik.png\" alt=\"certik-brand\" style={{ width: '32px', height: 'fit-content' }} />\n        <div style={{ display: 'flex', flexDirection: 'column', paddingLeft: '8px' }}>\n          <div style={{ textAlign: 'left', fontSize: '12px', marginBottom: '4px' }}>\n            AUDITED BY\n            <img src=\"images/symbols/check-shield.png\" alt=\"audit-check\" width=\"16px\" style={{ paddingLeft: '4px' }} />\n          </div>\n          <a href=\"http://audits.finance/\" style={{ fontSize: '14px' }}>\n            AUDITS.FINANCE\n          </a>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst Home: React.FC = () => {\n  const { t } = useTranslation()\n  const { data: farms } = useFarms();\n  const cakePrice = usePriceCakeBusd();\n  const farmsWitApr = useFarmsWithApr();\n\n  const maxBalance = useBrisBalance()\n  const [onPresentBuyTicketsModal] = useModal(<BuyTicketModal max={new BigNumber(maxBalance)} />)\n  const farmsList = useCallback(\n    (farmsToDisplay: Farm[]): FarmWithStakedValue[] => {\n      const farmsToDisplayWithAPR: FarmWithStakedValue[] = farmsToDisplay.map((farm) => {\n        if (!farm.lpTotalInQuoteToken || !farm.quoteToken.busdPrice) {\n          return farm\n        }\n        const totalLiquidity = new BigNumber(farm.lpTotalInQuoteToken).times(farm.quoteToken.busdPrice)\n        const apr = getFarmApr(new BigNumber(farm.poolWeight), cakePrice, totalLiquidity);\n        \n        return { ...farm, apr, liquidity: totalLiquidity }\n      })\n\n      return farmsToDisplayWithAPR\n    },\n    [cakePrice],\n  );\n\n  const farmsMemoized = useMemo(() => {\n    let farmsStaked = [];\n    farmsStaked = farmsList(farms);\n    return farmsStaked;\n  }, [farmsList, farms])\n\n  return (\n    <Page>\n      <Hero>\n        <AuditCard />\n        <Heading as=\"h1\" scale=\"xl\" mb=\"24px\" color=\"blue\">\n          {t('Bridging Defi on Web 3.0')}\n        </Heading>\n        <Text color=\"white\">\n          {t(\n            'TTNEX is bridging Defi on Web 3.0 from traditional finance in a decentralized manner to create a fair global economy that is sustainable, accessible, and community-driven DAO.',\n          )}\n        </Text>\n        {/* <Button variant=\"primary\" style={{margin: \"20px 0px\"}}>Learn more</Button> */}\n        <LearnMoreBtn\n          href=\"https://bridgeswap-exchange-1.gitbook.io/bridgeswap/\"\n          target=\"_blank\"\n          rel=\"noreferrer noopener\"\n        >\n          Learn more\n        </LearnMoreBtn>\n      </Hero>\n      <div>\n        <ComingSoon />\n        <BridgeBoard>\n          <Heading as=\"h3\" mb=\"24px\" color=\"primary\">\n            {t('A suite of Features Powering TTNEX')}\n          </Heading>\n          <FeatsGrid>\n            <Card p=\"15px\">\n              <Heading as=\"h5\" mb=\"10px\" color=\"text\">\n                {t('Trade')}\n              </Heading>\n              <Text small fontSize=\"12px\" color=\"text\">\n                {t('Instantly swap crypto tokens: NO registration or account needed.')}\n              </Text>\n              <FeatBtn variant=\"secondary\" scale=\"sm\">\n                <Link external href=\"https://dex.bridgeswap.app/#/swap\" color=\"text\">\n                  Enter exchange\n                </Link>\n              </FeatBtn>\n            </Card>\n\n            <Card p=\"15px\">\n              <Heading as=\"h5\" mb=\"10px\" color=\"text\">\n                {t('Farms')}\n              </Heading>\n              <Text fontSize=\"12px\" color=\"text\">\n                {t('Provide liqudity to earn yield.')}\n              </Text>\n              <FeatBtn variant=\"secondary\" scale=\"sm\">\n                <Link href=\"https://dex.bridgeswap.app/#/pool\" color=\"text\">\n                  Add liquidity\n                </Link>\n              </FeatBtn>\n            </Card>\n\n            <Card p=\"15px\">\n              <Heading as=\"h3\" mb=\"12px\" color=\"text\">\n                {t('Pools')}\n              </Heading>\n              <Text small fontSize=\"12px\" color=\"text\">\n                {t('Stake tokens, earn passive inome with crypto.')}\n              </Text>\n              <FeatBtn variant=\"secondary\" scale=\"sm\">\n                <ReactLink to=\"/pools\" color=\"text\">\n                  Enter pools\n                </ReactLink>\n              </FeatBtn>\n            </Card>\n\n            <Card p=\"15px\">\n              <Heading as=\"h5\" mb=\"10px\" color=\"text\">\n                {t('Defi 2.0 Zap')}\n              </Heading>\n              <Text small fontSize=\"12px\" color=\"text\">\n                {t('Swap LPs to receive discounted BRIS tokens.')}\n              </Text>\n              <FeatBtn variant=\"secondary\" scale=\"sm\">\n                <ReactLink to=\"/defi\" color=\"text\">\n                  Swap now\n                </ReactLink>\n              </FeatBtn>\n            </Card>\n\n            <Card p=\"15px\">\n              <Heading as=\"h5\" mb=\"10px\" color=\"text\">\n                {t('Lottery')}\n              </Heading>\n              <Text small fontSize=\"12px\" color=\"text\">\n                {t('Provably fair, on-chain game. WIN BIG!!!')}\n              </Text>\n              <FeatBtn variant=\"secondary\" scale=\"sm\">\n                <ReactLink to=\"/lottery\">Play now</ReactLink>\n              </FeatBtn>\n            </Card>\n\n            <Card p=\"15px\" style={{ background: 'linear-gradient(155.08deg, #FA00FF -35.34%, #17D2FB 134.08%)' }}>\n              <Heading as=\"h5\" mb=\"10px\" color=\"text\">\n                {t('Referral Program')}\n              </Heading>\n              <Text small fontSize=\"12px\" color=\"text\">\n                {t('Share your referral link, invite your fiend and earn 10% of their yields FOREVER!')}\n              </Text>\n              <Button as={ReactLink} to=\"/referral\" variant=\"primary\" scale=\"sm\" style={{ margin: '20px 0px' }}>\n                Invite friends\n              </Button>\n            </Card>\n          </FeatsGrid>\n        </BridgeBoard>\n\n        <BridgeBoard>\n          <Heading as=\"h5\" mb=\"10px\" color=\"text\">\n            {t('Top performers')}\n          </Heading>\n          {/* <Performers>\n            {\n              farmsWitApr.map((f, i) => (\n                <Card p=\"4px\" style={{borderRadius:\"8px\"}}>\n                  <Text small textAlign=\"left\">\n                    {f.lpSymbol}\n                  </Text>\n                  {\n                    f?.apr ? <Text small textAlign=\"left\">{f.apr}</Text>\n                    : <Skeleton variant=\"rect\" />\n                  }\n                  <Text small textAlign=\"left\">\n                    APR\n                  </Text>\n                </Card>\n              ))\n            }\n          </Performers>           */}\n          <LoadingTopPerformers>\n            <Skeleton variant=\"rect\" />\n          </LoadingTopPerformers>\n          {/* <FeatsGrid>\n            <Card style={{width: \"100%\", border: \"20x solid white\"}}>\n              <Heading as=\"h5\" pt=\"12px\" mb=\"10px\" color=\"text\">\n                {t('Pools')}\n              </Heading>\n              <PerformersFlex>\n                <Performer>\n                  <TopSymbol>\n                    <img width=\"40px\" height=\"40px\" src=\"/images/farms/ada-bnb.svg\" alt=\"Pools coming soon\" />\n                    <Text ml=\"5px\" small fontSize='12px' color=\"text\">\n                      {t('BNB')}\n                    </Text>\n                  </TopSymbol>\n                  <TopAPR>\n                    <Text mr=\"5px\">\n                      APR:\n                    </Text>\n                    <Text color=\"text\">\n                      171.7%\n                    </Text>\n                  </TopAPR>\n                </Performer>\n              </PerformersFlex>\n            </Card>\n            <Card style={{width: \"100%\", border: \"20x solid white\"}}>\n              <Heading as=\"h5\" pt=\"12px\" mb=\"10px\" color=\"text\">\n                {t('Farms')}\n              </Heading>\n              <PerformersFlex>\n                <Performer>\n                  <TopSymbol>\n                    <img width=\"40px\" height=\"40px\" src=\"/images/farms/alice-bnb.svg\" alt=\"Pools coming soon\"/>\n                    <Text ml=\"5px\" small fontSize='12px' color=\"text\">\n                      {t('ADA-BNB')}\n                    </Text>\n                  </TopSymbol>\n                  <TopAPR>\n                    <Text mr=\"5px\">\n                      APR:\n                    </Text>\n                    <Text color=\"text\">\n                      171.7%\n                    </Text>\n                  </TopAPR>\n                </Performer>\n              </PerformersFlex>\n            \n            </Card> \n          </FeatsGrid> */}\n          {/* <FarmStakingCard /> */}\n          {/* <LotteryCard /> */}\n        </BridgeBoard>\n        {/* <CTACards>\n          <EarnAPRCard />\n          <EarnAssetCard />\n          <WinCard />\n        </CTACards> */}\n        {/* <Cards>\n          <CakeStats />\n          <TotalValueLockedCard />\n        </Cards> */}\n\n        <StatsValue>\n          <BridgeLottery>\n            <Text fontSize=\"12px\" mb=\"15px\" color=\"text\">\n              {t('The TTNEX Lottery')}\n            </Text>\n            <Text fontWeight=\"700\" mb=\"15px\" fontSize=\"42px\">\n              {t('Win $0')}\n            </Text>\n            <Text fontSize=\"12px\" mb=\"22px\" color=\"text\">\n              {t('in prizes')}\n            </Text>\n            <Button\n              variant=\"primary\"\n              scale=\"sm\"\n              style={{ margin: '10px auto', width: '200px' }}\n              onClick={onPresentBuyTicketsModal}\n            >\n              Buy tickets\n            </Button>\n          </BridgeLottery>\n          <StatsFigures>\n            <CakeStats />\n            <TotalValueLockedCard />\n          </StatsFigures>\n        </StatsValue>\n\n        <BridgeBoard style={{ marginTop: '20px' }}>\n          <Heading as=\"h5\" pt=\"12px\" mb=\"30px\" color=\"blue\">\n            {t('TTNEX Partners')}\n          </Heading>\n          <Partners>\n            {partners.map((partner) => (\n              <Skeleton />\n            ))}\n          </Partners>\n        </BridgeBoard>\n      </div>\n    </Page>\n  )\n}\n\nexport default Home\n","import { useCallback, useState } from 'react'\nimport usePreviousValue from './usePreviousValue'\n\n/**\n * A helper hook to keep track of the time between events\n * Can also be used to force an effect to re-run\n */\nconst useLastUpdated = () => {\n  const [lastUpdated, setStateLastUpdated] = useState(Date.now())\n  const previousLastUpdated = usePreviousValue(lastUpdated)\n\n  const setLastUpdated = useCallback(() => {\n    setStateLastUpdated(Date.now())\n  }, [setStateLastUpdated])\n\n  return { lastUpdated, previousLastUpdated, setLastUpdated }\n}\n\nexport default useLastUpdated\n","import { useEffect, useRef } from 'react'\n\n/**\n * Returns the previous value of the given value\n *\n * @see https://reactjs.org/docs/hooks-faq.html#how-to-get-the-previous-props-or-state\n */\nconst usePreviousValue = (value: any) => {\n  const ref = useRef()\n\n  useEffect(() => {\n    ref.current = value\n  })\n\n  return ref.current\n}\n\nexport default usePreviousValue\n","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { getBep20Contract, getCakeContract } from 'utils/contractHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport useWeb3 from './useWeb3'\nimport useRefresh from './useRefresh'\nimport useLastUpdated from './useLastUpdated'\n\ntype UseTokenBalanceState = {\n  balance: BigNumber\n  fetchStatus: FetchStatus\n}\n\nexport enum FetchStatus {\n  NOT_FETCHED = 'not-fetched',\n  SUCCESS = 'success',\n  FAILED = 'failed',\n}\n\nconst useTokenBalance = (tokenAddress: string) => {\n  const { NOT_FETCHED, SUCCESS, FAILED } = FetchStatus\n  const [balanceState, setBalanceState] = useState<UseTokenBalanceState>({\n    balance: BIG_ZERO,\n    fetchStatus: NOT_FETCHED,\n  })\n  const web3 = useWeb3()\n  const { account } = useWeb3React()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress, web3)\n      try {\n        const res = await contract.methods.balanceOf(account).call()\n        setBalanceState({ balance: new BigNumber(res), fetchStatus: SUCCESS })\n      } catch (e) {\n        console.error(e)\n        setBalanceState((prev) => ({\n          ...prev,\n          fetchStatus: FAILED,\n        }))\n      }\n    }\n\n    if (account) {\n      fetchBalance()\n    }\n  }, [account, tokenAddress, web3, fastRefresh, SUCCESS, FAILED])\n\n  return balanceState\n}\n\nexport const useTotalSupply = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getCakeContract()\n      const supply = await cakeContract.methods.totalSupply().call()\n      setTotalSupply(new BigNumber(supply))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\n\nexport const useBurnedBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n  const web3 = useWeb3()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress, web3)\n      const res = await contract.methods.balanceOf('0x000000000000000000000000000000000000dEaD').call()\n      setBalance(new BigNumber(res))\n    }\n\n    fetchBalance()\n  }, [web3, tokenAddress, slowRefresh])\n\n  return balance\n}\n\nexport const useGetBnbBalance = () => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { account } = useWeb3React()\n  const { lastUpdated, setLastUpdated } = useLastUpdated()\n  const web3 = useWeb3()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const walletBalance = await web3.eth.getBalance(account)\n      setBalance(new BigNumber(walletBalance))\n    }\n\n    if (account) {\n      fetchBalance()\n    }\n  }, [account, web3, lastUpdated, setBalance])\n\n  return { balance, refresh: setLastUpdated }\n}\n\nexport default useTokenBalance\n","import React, { useEffect, useRef } from 'react'\nimport { useCountUp } from 'react-countup'\nimport { Text } from '@pancakeswap/uikit'\n\nexport interface CardValueProps {\n  value: number\n  decimals?: number\n  fontSize?: string\n  lineHeight?: string\n  prefix?: string\n  bold?: boolean\n  color?: string\n}\n\nconst CardValue: React.FC<CardValueProps> = ({\n  value,\n  decimals,\n  fontSize = '40px',\n  lineHeight = '1',\n  prefix = '',\n  bold = true,\n  color = 'text',\n}) => {\n  const { countUp, update } = useCountUp({\n    start: 0,\n    end: value,\n    duration: 1,\n    separator: ',',\n    decimals:\n      // eslint-disable-next-line no-nested-ternary\n      decimals !== undefined ? decimals : value < 0 ? 4 : value > 1e5 ? 0 : 3,\n  })\n\n  const updateValue = useRef(update)\n\n  useEffect(() => {\n    updateValue.current(value)\n  }, [value, updateValue])\n\n  return (\n    <Text bold={bold} fontSize={fontSize} style={{ lineHeight }} color={color}>\n      {prefix}\n      {countUp}\n    </Text>\n  )\n}\n\nexport default CardValue\n"],"sourceRoot":""}